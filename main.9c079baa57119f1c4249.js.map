{"version":3,"sources":["webpack://zigbee2mqtt-frontend/./src/components/map/map.css?4978","webpack://zigbee2mqtt-frontend/./src/components/map/links.tsx","webpack://zigbee2mqtt-frontend/./src/utils.ts","webpack://zigbee2mqtt-frontend/./src/components/device-image/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/nodes.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/types.ts","webpack://zigbee2mqtt-frontend/./src/store.ts","webpack://zigbee2mqtt-frontend/./src/api.ts","webpack://zigbee2mqtt-frontend/./src/actions/BridgeApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/DeviceApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/GroupsApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/StateApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/OtaApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/BindApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/TouchlinkApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/actions.ts","webpack://zigbee2mqtt-frontend/./src/components/button/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/consts.ts","webpack://zigbee2mqtt-frontend/./src/components/spinner.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/modal/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-control/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/vendor-links/verndor-links.tsx","webpack://zigbee2mqtt-frontend/./src/components/power-source/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/info.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/endpoint-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/cluster-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/bind-row.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/bind.tsx","webpack://zigbee2mqtt-frontend/./src/components/attribute-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/reporting-row.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/reporting.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/states.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/type-guards.ts","webpack://zigbee2mqtt-frontend/./src/types.ts","webpack://zigbee2mqtt-frontend/./src/components/display-value/DisplayValue.tsx","webpack://zigbee2mqtt-frontend/./src/components/toggle/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/base.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/binary/binary.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/climate/climate.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/cover/cover.tsx","webpack://zigbee2mqtt-frontend/./src/components/color-editor/color-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/color/color.tsx","webpack://zigbee2mqtt-frontend/./src/components/enum-editor/enum-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/enum/enum.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/light/light.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/lock/lock.tsx","webpack://zigbee2mqtt-frontend/./src/components/range-editor/range-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/numeric/numeric.tsx","webpack://zigbee2mqtt-frontend/./src/components/textual-editor/textual-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/textual/textual.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/switch/switch.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/Feature.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/composite.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/FeatureWrapper.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/exposes.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/clusters.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/settings.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/touchlink-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/universal-editor/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/settings/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/navbar/index.tsx","webpack://zigbee2mqtt-frontend/./src/hooks/useComponentVisible.tsx","webpack://zigbee2mqtt-frontend/./src/components/navbar/style.css?01da","webpack://zigbee2mqtt-frontend/./src/hooks/useOnClickOutside.tsx","webpack://zigbee2mqtt-frontend/./src/components/groups/RenameForm.tsx","webpack://zigbee2mqtt-frontend/./src/hooks/useInputChange.ts","webpack://zigbee2mqtt-frontend/./src/components/groups/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/groups/style.css?e996","webpack://zigbee2mqtt-frontend/./src/components/zigbee/ActionTH.tsx","webpack://zigbee2mqtt-frontend/./src/components/zigbee/style.css?5857","webpack://zigbee2mqtt-frontend/./src/components/zigbee/TableHeader.tsx","webpack://zigbee2mqtt-frontend/./src/components/zigbee/TableRow.tsx","webpack://zigbee2mqtt-frontend/./src/components/zigbee/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/logs-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/ota-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/ErrorBoundary.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DeviceFooter.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardDevice.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardDevice.scss?8dc3","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardFeatureWrapper.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardFeatureWrapper.scss?f84b","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/index.tsx"],"names":["Link","props","linkType","id","rest","className","strokeWidth","fill","LinkLabel","link","linkqualities","join","links","ref","useRef","useLayoutEffect","current","selectAll","data","length","map","sourceIeeeAddr","targetIeeeAddr","key","xlinkHref","genDeviceDetailsLink","deviceIdentifier","toHex","input","padding","repeat","toString","substr","toUpperCase","lastSeen","elapsed","diff","undefined","Date","now","parse","sanitizeGraph","inGraph","nodes","Map","forEach","node","ieeeAddr","sort","a","b","relationship","src","source","dst","target","linkId","repeatedLink","get","type","push","linkquality","relationships","set","console","warn","Array","from","values","randomString","len","Math","random","replacer","value","originalObject","this","dataType","entries","serialize","JSON","stringify","download","filename","blob","Blob","url","window","URL","createObjectURL","document","createElement","body","appendChild","href","setTimeout","click","revokeObjectURL","removeChild","getEndpoints","obj","endpoints","keys","members","g","endpoint","genericDeiviceImageFallback","device","AVALIABLE_GENERATORS","deviceName","definition","model","replace","modelName","model_id","useState","imageGenerators","setimageGenerators","deviceStatus","onImageError","newGenerators","shift","otaSpinner","update","state","title","interviewSpinner","interviewing","unseccessfullInterview","interview_completed","onError","getStarShape","innerCircleArms","styleStarWidth","innerOuterRadiusRatio","centerX","centerY","innerRadius","outerRadius","angle","PI","totalArms","points","i","r","cos","sin","calcStarPoints","createRef","onMouseOut","onMouseOver","onDblClick","componentDidMount","render","deviceType","cn","onDoubleClick","width","height","friendlyName","Component","toggle","updateDrag","simulation","root","dragForce","drag","on","event","d","active","alphaTarget","restart","fx","x","fy","y","call","componentDidUpdate","Node","ZigbeeRelationship","str","initialState","TOKEN_LOCAL_STORAGE_ITEM_NAME","AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME","notyf","blacklistedMessages","showNotity","msg","message","level","status","isResponseWithStatus","error","success","requests","transactionNumber","send","topic","payload","debug","startsWith","transactionRndPreffix","promise","Promise","resolve","reject","socket","transaction","urlProvider","token","localStorage","getItem","prompt","setItem","searchParams","append","procsessBridgeMessage","bridgeConfig","bridgeInfo","dev","Object","ieee_address","devices","groups","newLogs","slice","logs","every","val","test","response","networkGraphIsLoading","networkGraph","payloadData","touchlinkScanInProgress","touchlinkDevices","found","touchlinkIdentifyInProgress","touchlinkResetInProgress","resolvePromises","onClose","e","code","removeItem","location","reload","onMessage","deviceStates","newDeviceStates","connect","addEventListener","has","delete","apiUrl","host","pathname","Api","protocol","setPermitJoin","permit","friendly_name","updateConfigValue","name","updateBridgeConfig","options","restartBridge","renameDevice","to","homeassistantRename","removeDevice","force","block","configureDevice","setDeviceOptions","createGroup","group","removeGroup","addDeviceToGroup","removeDeviceFromGroup","renameGroup","oldName","newName","setStateValue","setDeviceState","getDeviceState","checkOTA","updateOTA","bindOp","operation","params","addBind","removeBind","touchlinkScan","touchlinkIdentify","touchlinkReset","store","networkMapRequest","setState","routes","exportState","configureReport","config","onClick","item","promt","confirmed","confirm","children","linkTypes","NeigbhorIsParent","NeigbhorIsAChild","NeigbhorIsASibling","NoneOfTheAbove","role","s","t","atan2","parentOrChild","linkStrregth","includes","distancesMap","BrokenLink","Router2Router","Coordinator2Router","Coordinator2EndDevice","EndDevice2Router","getDistance","ticked","transform","linkLabel","apply","x1","y1","x2","slope","attr","computeLink","applyX","applyY","processHighlights","selectedNode","linkedByIndex","Set","n","add","l","neighboring","computeOpacity","style","o","svgRef","visibleLinks","legendIsVisible","updateNodes","container","filter","concat","everything","extent","scaleExtent","zoomHandler","onRequestClick","onLinkTypeFilterChange","stateVisibleLinks","checked","inValue","parseInt","v","updateForces","distance","strength","initPage","getBoundingClientRect","renderMap","viewBox","renderMessage","renderMapControls","onChange","htmlFor","Fragment","MapComponent","ModalHeader","ModalBody","ModalFooter","modalShow","display","openModal","bind","closeModal","isOpen","prevProps","isRenameModalOpened","isDeviceRemovalModalOpened","renameParams","isHassRename","removeParams","onRenameClick","onRemoveClick","toggleRenameModal","toggleDeviceRemovalModal","onHassEntityIdChange","onFriendlyNameChange","onDeviceRemovalParamChange","renderRenameButton","homeassistant","renderDeviceRemovalButton","checks","label","check","DeviceControlGroup","normalizeModel","re","RegExp","VendorLink","supported","encodeURIComponent","vendor","toLowerCase","rel","ModelLink","acnchor","battery","batteryLow","showLevel","batteryClass","markdownLinkRegex","displayProps","if","result","exec","description","content","supports","network_address","power_source","battery_low","prop","DeviceInfo","onSelect","find","hidden","devicesOptions","getDeviceDisplayName","groupOptions","disabled","hasOnlyOneEP","ep","unshift","PickerType","clusterDescriptions","genPowerCfg","genScenes","genOnOff","genLevelCtrl","lightingColorCtrl","closuresWindowCovering","genMultistateInput","genGroups","genOta","touchlink","genIdentify","msTemperatureMeasurement","msIlluminanceMeasurement","msRelativeHumidity","msPressureMeasurement","msSoilMoisture","isClusterGroup","clusters","pickerId","pickerType","MULTIPLE","renderMultiPicker","renderSinglePicker","cluster","defaultProps","stateRule","setSourceEp","sourceEp","setDestination","destination","setDestinationEp","destinationEp","setClusters","onBindOrUnBindClick","action","onUnBind","onBind","getBidningParams","getDerivedStateFromProps","targeDevice","isValidRule","valid","idx","targetType","sourceEndpoints","rule","getTarget","destinationEndpoints","possibleClusters","destEndpoint","output","scope","isNew","rule2key","bidingRules","bindings","targetId","convertBidningsIntoNiceStructure","renderHeader","column","renderBody","Bind","attrs","clusterDefinition","attributes","getClusters","availableClusters","requiredRuleFileds","field","setCluster","setAttribute","attribute","changeHandler","applyRule","onApply","disableRule","maximum_report_interval","SINGLE","minimum_report_interval","required","placeholder","reportable_change","reportingRules","reportings","configured_reportings","reportingRule","Reporting","deviceState","States","isCompositeFeature","feature","FeatureAccessMode","booleansMap","contact","occupancy","water_leak","tamper","_default","DisplayValue","mapValue","ControlButton","valueOn","valueOff","minimal","valueExists","showOnOffButtons","BaseViewer","property","unit","NoAccessError","access","ACCESS_WRITE","ACCESS_STATE","stepsConfiguration","position","tilt","toRGB","sourceFormat","X","Z","Y","hue","saturation","rgbToTargetFormat","targetFormat","hex","pridePallete","format","steps","currentColor","setCurrentColor","useEffect","step","backgroundColor","minWidth","features","innerFeature","color","isPrimitive","selectedValue","brightness","inputY","yRange","xRange","xMin","xMax","yMin","kelvin","min","max","currentValue","setCurrentValue","showRange","valueAsNumber","onMouseUp","onBlur","presets","valueMax","valueMin","Feature","onRead","FeatureWrapper","genericParams","featureWrapperClass","wrapperParams","isBinaryFeature","isNumericFeature","isTextualFeature","isEnumFeature","isLightFeature","isSwitchFeature","isCoverFeature","isLockFeature","isColorFeature","isClimateFeature","onApplyClick","groupedFeatures","f","epName","featuresGroup","isColor","isReadable","ACCESS_READ","exposes","Exposes","ClustersComp","tree","epData","uiSchema","updateConfig","formData","configSchema","deviceConfig","device_options","schema","definitions","onSubmit","DeviceSettings","renderContent","match","tab","getDeviceLinks","activeClassName","devicePageWithRouter","DevicePage","onIdentifyClick","onResetClick","renderTouchlinkDevices","touchlinkInProgress","touchlinkDevice","channel","renderNoDevices","TouchlinkPage","togglePairs","BluringInput","internalValue","setInternalValue","isToggleParameter","logLevelSetting","path","ROOT_KEY_NAME","ingoredFields","validJsonSchemasAsTabs","removePropertiesFromSchema","names","properties","tabs","keyName","onSettingsSave","renderCategoriesTabs","renderSwitcher","renderSettings","renderBridgeInfo","renderAbout","renderExperimentalSettings","zigbee2mqttVersion","version","zigbee2mqttCommit","commit","rows","coordinator","meta","revision","row","setting","getSettingsTabs","oneOf","getSettingsInfo","originalConfig","configAndSchema","currentSchema","currentConfig","ignoreTabNames","renderSettingsTabs","preventDefault","SettingsPageWithRouter","SettingsPage","urls","exact","StartStopJoinButton","initialIsVisible","isComponentVisible","setIsComponentVisible","handleHideDropdown","handleClickOutside","contains","removeEventListener","useComponentVisible","selectedRouter","setSelectedRouter","routers","selectAndHide","permit_join","show","navbarIsVisible","setnavbarIsVisible","handler","listener","useOnClickOutside","restart_required","RenameGroupForm","onRename","modalIsOpened","setModalIsOpened","setInput","currentTarget","useInputChange","renameGroupForm","handleInputChange","getDeviceObj","groupAddress","rowNumber","onRemove","deviceFriendlyName","groupMemebershipInfo","DeviceGroupRow","onDeviceSelect","onEpChange","deviceObj","newGroupName","newGroupId","onGroupCreateSubmit","groupFriendlyName","renderGroupCreationForm","renderGroups","DeviceGroup","AddDeviceToGroup","reverse","GroupsPage","stopPropagation","renderArrow","currentDirection","TableHeader","sortColumn","sortDirection","onSortChange","lastSeenIsAvaliable","TableRow","last_seen","storeKey","saveState","storeData","handleLongLoading","size","sortDir","currentTime","sortedTableData","restoreState","storedState","restored","tableData","renderError","renderDevicesTable","advanced","ZigbeeTable","ALL","Highlighted","text","highlight","trim","regex","parts","split","part","search","logLevel","renderSearch","logLevels","_search","LogsPage","StateCell","secs","progress","remaining","floor","OtaRow","checkAllOTA","getAllOtaDevices","supports_ota","otaApi","otaDevices","colSpan","OtaPage","donwloadState","getDerivedStateFromError","hasError","githubUrlParams","referrer","stack","githubUrl","URLSearchParams","footerFeatures","lastSeenTime","rederedFeatures","genericRendererIgnoredNames","filteredFeatures","typeToClassMap","humidity","illuminance","illuminance_lux","soil_moisture","icon","temperature","classes","getGenericFeatureIcon","Main","getElementById"],"mappings":"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","file":"main.9c079baa57119f1c4249.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"_1TK12NlMUcpu0IZGw5KG9F\",\"img\":\"-vLZFy4QqTaA5Lql2j7WL\",\"node\":\"_3VABKCYaUBV0N55MRkEiCg\",\"link\":\"_2MMYgLsCQ5mPT-AJSdZ4Uz\",\"linkLabel\":\"EFSV-Lj6sJyoW14QA3ig0\",\"links\":\"_3m9RTJKJZqiJx1UmLLzi4\",\"nodes\":\"_1RxBn1bAxqYxk5W0mPwZMS\",\"EndDevice\":\"JhUbmgThutQMk8laPcsxg\",\"Coordinator\":\"_3F14ZWmKtSPPHai2y_MRRj\",\"Router\":\"_1I1ZcuMgRbn_B5HXF9Z2mw\",\"BrokenLink\":\"_3FeEi6FG3R9pYpboNF-OBu\",\"Coordinator2Router\":\"_2cFMSmedVqD5hjj2K7XpsQ\",\"Router2Coordinator\":\"_3KnTt0kzrMwLh56UMBBqwe\",\"Router2Router\":\"_3HeSfltIQjH_mQxhaoHnCs\",\"Coordinator2EndDevice\":\"_2zGuiMZ7r-Z4mfRvCVQEAp\",\"EndDevice2Coordinator\":\"_35uGMHQCj1Sx5FyJk5-Ec1\",\"Router2EndDevice\":\"_1nD8O-bIFFZWctv6x4zD8j\",\"EndDevice2Router\":\"_2tVxslI3DwN1gBA6s3V24b\",\"foreignObject\":\"_1PgTRqMkYD7R1RqIF7R5ni\",\"offline\":\"_3goiiMv86rV5wazL6jDpjU\",\"controls\":\"RIAc5GeET4TLTKyCVy7yK\"};","import { LinkI } from \"./types\";\nimport React, { FunctionComponent, RefObject, useLayoutEffect, useRef } from \"react\";\nimport style from \"./map.css\";\nimport cx from \"classnames\";\nimport { select } from \"d3-selection\";\n\ninterface LinkProps {\n    link: LinkI;\n    id?: string;\n}\n\nconst Link: FunctionComponent<LinkProps> = props => {\n    const { link: { linkType }, id, ...rest } = props;\n    return <path\n        id={id}\n        className={cx(style.link, style[linkType])}\n        strokeWidth={1}\n        fill=\"transparent\"\n        {...rest}\n    />;\n};\n\ninterface LinkLabelProps extends LinkProps {\n    xlinkHref: string;\n}\n\nconst LinkLabel: FunctionComponent<LinkLabelProps> = props => {\n    const { link } = props;\n    return <text className={style.linkLabel}>{link.linkqualities.join('/')}</text>;\n};\n\ninterface LinksPros {\n    links: LinkI[];\n}\n\nconst Links: FunctionComponent<LinksPros> = props => {\n    const { links } = props;\n    const ref = useRef<SVGGElement>();\n    useLayoutEffect(() => {\n        select(ref.current as SVGGElement).selectAll(`.${style.link}`).data(links);\n        select(ref.current as SVGGElement).selectAll(`.${style.linkLabel}`).data(links);\n    }, [links.length]);\n\n    return (\n        <g ref={ref as RefObject<SVGGElement>} className={style.links}>\n            {links.map((link: LinkI) => <Link\n                id={`edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                key={`link${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                link={link}\n            />)}\n            {links.map((link: LinkI) => (\n                <LinkLabel\n                    xlinkHref={`#edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                    key={`label${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                    link={link}\n                />\n            ))}\n        </g>\n    );\n};\nexport default Links;\n","\nimport { Device, Endpoint } from \"./types\";\nimport { GraphI, LinkI, NodeI } from \"./components/map/types\";\nimport { format, TDate } from 'timeago.js';\nimport { Group } from \"./store\";\n\nexport const genDeviceDetailsLink = (deviceIdentifier: string | number): string => (`/device/${deviceIdentifier}`);\n\nexport const toHex = (input: number, padding = 4): string => {\n    return `0x${(`${'0'.repeat(padding)}${input.toString(16)}`).substr(-1 * padding).toUpperCase()}`;\n};\n\n\nexport const toHHMMSS = (secs: number): string => {\n    if (!secs) {\n        return 'N/A';\n    }\n    const hours = Math.floor(secs / 3600);\n    const minutes = Math.floor(secs / 60) % 60;\n    const seconds = Math.floor(secs % 60);\n\n    return [hours, minutes, seconds]\n        .map(v => v < 10 ? `0${v}` : v)\n        .filter((v, i) => v !== \"00\" || i > 0)\n        .join(\":\");\n};\n\nexport type CallbackHandler<T> = (err: boolean, res: T) => void;\nexport interface ApiResponse<T> {\n    success: boolean;\n    result: T;\n}\n\nexport const lastSeen = (lastSeen?: string | number, elapsed?: number): string => {\n    if (!lastSeen && !elapsed) {\n        return \"N/A\";\n    }\n    let diff: TDate;\n    if (elapsed !== undefined) {\n        diff = Date.now() - elapsed;\n    } else {\n        if (typeof lastSeen === \"string\") {\n            diff = Date.parse(lastSeen);\n        } else {\n            diff = new Date(lastSeen as number);\n        }\n    }\n    return format(diff);\n};\n\n\nexport const sanitizeGraph = (inGraph: GraphI): GraphI => {\n    const nodes = {};\n    const links = new Map<string, any>();\n\n    inGraph.nodes.forEach(node => {\n        nodes[node.ieeeAddr] = node;\n    });\n\n    inGraph.links.sort((a, b) => a.relationship - b.relationship).forEach(link => {\n        const src: NodeI = nodes[link.source.ieeeAddr];\n        const dst: NodeI = nodes[link.target.ieeeAddr];\n        if (src && dst) {\n            const linkId = [link.source.ieeeAddr, link.target.ieeeAddr].sort().join('');\n            const repeatedLink = links.get(linkId);\n            const linkType = [src.type, dst.type].join('2');\n            if (repeatedLink) {\n                repeatedLink.linkqualities.push(link.linkquality);\n                repeatedLink.relationships.push(link.relationship);\n            } else {\n                links.set(linkId, { ...link, ...{ source: link.source.ieeeAddr, linkType, target: link.target.ieeeAddr, linkqualities: [link.linkquality], relationships: [link.relationship] } });\n            }\n        } else {\n            console.warn(\"Broken link\", link);\n        }\n    });\n\n    inGraph.links = Array.from(links.values());\n    return inGraph;\n};\n\nexport const getDeviceDisplayName = (device: Device): string => {\n    return `${device.friendly_name} ${device.definition?.model ? `(${device.definition?.model})` : ''}`;\n};\n\nexport const randomString = (len: number): string => Math.random().toString(36).substr(2, len);\n\nexport const isSecurePage = (): boolean => location.protocol === 'https:';\n\n\nexport const scale = (inputY: number, yRange: Array<number>, xRange: Array<number>): number => {\n    const [xMin, xMax] = xRange;\n    const [yMin, yMax] = yRange;\n\n    const percent = (inputY - yMin) / (yMax - yMin);\n    const outputX = percent * (xMax - xMin) + xMin;\n\n    return outputX;\n};\n\n\n\n\nfunction replacer(key: string, value: object) {\n    const originalObject = this[key];\n    if (originalObject instanceof Map) {\n        return {\n            dataType: 'Map',\n            value: Array.from(originalObject.entries()),\n        };\n    } else {\n        return value;\n    }\n}\n\nfunction reviver(key: string, value: { dataType: string; value: Iterable<readonly [unknown, unknown]>; }) {\n    if (typeof value === 'object' && value !== null) {\n        if (value.dataType === 'Map') {\n            return new Map(value.value);\n        }\n    }\n    return value;\n}\n\nexport const serialize = (data: object) => {\n    return JSON.stringify(data, replacer);\n}\n\nexport const deSerialize = (str: string) => {\n    return JSON.parse(str, reviver);\n}\n\n\nexport const download = (data: object, filename: string): void => {\n    const blob = new Blob([serialize(data)], { type: 'octet/stream' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.href = url;\n    a.download = filename;\n\n    setTimeout(() => {\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n    }, 1);\n\n}\n\nexport const sanitizeZ2MDeviceName = (deviceName?: string): string => deviceName ? deviceName.replace(/:|\\s|\\//g, \"-\") : \"NA\";\n\n\nexport const getEndpoints = (obj: Device | Group): Endpoint[] => {\n    if (!obj) {\n        return [];\n    } else if ((obj as Device).endpoints) {\n        return Array.from((obj as Device).endpoints.keys());\n    } else if ((obj as Group).members) {\n        return (obj as Group).members.map(g => g.endpoint);\n    }\n    return [];\n}\n","import React, { FunctionComponent, ImgHTMLAttributes, useState } from \"react\";\nimport genericDevice from \"../../images/generic-zigbee-device.png\";\nimport { Device, DeviceState } from \"../../types\";\nimport cx from \"classnames\";\nimport { sanitizeZ2MDeviceName } from \"../../utils\";\ntype DeviceImageProps = {\n    device: Device;\n    deviceStatus?: DeviceState;\n    type?: \"img\" | \"svg\";\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst genericDeiviceImageFallback = (device: Device): string => genericDevice;\nconst genSlsDeviceImageUrlZ2M = (device: Device): string => `https://www.zigbee2mqtt.io/images/devices/${sanitizeZ2MDeviceName(device?.definition?.model)}.jpg`;\n\nconst sanitizeModelIDForImageUrl = (modelName: string): string => modelName?.replace(\"/\", \"_\");\n\nexport const genSlsDeviceImageUrlSLS = (device: Device): string => (`https://slsys.github.io/Gateway/devices/png/${sanitizeModelIDForImageUrl(device.model_id)}.png`);\n\n\nconst AVALIABLE_GENERATORS = [\n    genSlsDeviceImageUrlZ2M, genSlsDeviceImageUrlSLS, genericDeiviceImageFallback\n]\n\nconst DeviceImage: FunctionComponent<DeviceImageProps & ImgHTMLAttributes<HTMLDivElement | SVGImageElement>> = (props) => {\n    const [imageGenerators, setimageGenerators] = useState(AVALIABLE_GENERATORS);\n    const { device, deviceStatus, type = \"img\", className, ...rest } = props;\n    let src = genericDeiviceImageFallback(device);\n    if (device?.definition?.model && imageGenerators.length) {\n        src = imageGenerators[0](device);\n    }\n\n    const onImageError = () => {\n        const newGenerators = [...imageGenerators];\n        newGenerators.shift();\n        setimageGenerators(newGenerators);\n    };\n    const otaSpinner = deviceStatus?.update?.state === \"updating\" ? <i title=\"Updating firmware\" className=\"fa fa-sync fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const interviewSpinner = device.interviewing ? <i title=\"Interviewing\" className=\"fa fa-spinner fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const unseccessfullInterview = !device.interviewing && !device.interview_completed ? <i title=\"Interview failed\" className=\"fa fa-exclamation-triangle position-absolute top-0 right-0 text-danger\" /> : null;\n    switch (type) {\n        case \"svg\":\n            return src ? <image {...rest} onError={onImageError} href={src} /> : null;\n        case \"img\":\n        default:\n            return src ? <div className={cx(className, \"position-relative\")} {...rest}>\n                <img onError={onImageError} src={src} className={\"position-relative\"} />\n                {interviewSpinner}\n                {otaSpinner}\n                {unseccessfullInterview}\n            </div> : null;\n    }\n}\nexport default DeviceImage;","import React, { Component, createRef, RefObject } from \"react\";\nimport { LinkI, NodeI } from \"./types\";\nimport cx from \"classnames\";\nimport style from \"./map.css\";\nimport { MouseEventsResponderNode } from \".\";\nimport { Device } from \"../../types\";\nimport DeviceImage from \"../device-image\";\nimport { Simulation } from \"d3-force\";\nimport { select, selectAll } from \"d3-selection\";\nimport { drag } from \"d3-drag\";\n\n\nconst calcStarPoints = (\n    centerX: number,\n    centerY: number,\n    innerCircleArms: number,\n    innerRadius: number,\n    outerRadius: number\n): string => {\n    const angle = Math.PI / innerCircleArms;\n    const angleOffsetToCenterStar = 60;\n    const totalArms = innerCircleArms * 2;\n    let points = \"\";\n    for (let i = 0; i < totalArms; i++) {\n        const isEvenIndex = i % 2 == 0;\n        const r = isEvenIndex ? outerRadius : innerRadius;\n        const currX = centerX + Math.cos(i * angle + angleOffsetToCenterStar) * r;\n        const currY = centerY + Math.sin(i * angle + angleOffsetToCenterStar) * r;\n        points += `${currX}, ${currY} `;\n    }\n    return points;\n};\n\n\nexport const getStarShape = (innerCircleArms: number, styleStarWidth: number, innerOuterRadiusRatio: number): string => {\n    return calcStarPoints(\n        15,\n        15,\n        innerCircleArms,\n        styleStarWidth,\n        innerOuterRadiusRatio\n    );\n};\n\ninterface NodeProps extends MouseEventsResponderNode {\n    node: NodeI;\n}\n\nconst offlineTimeout = 3600 * 2;\n\nexport const isOnline = (device: Device): boolean => {\n\n    return true; //Date.now() - device.lastSeen < offlineTimeout;\n};\n\nclass Node extends Component<NodeProps, {}> {\n    ref = createRef<SVGElement>();\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { node } = this.props;\n        select(current as SVGElement).data([node]);\n    }\n\n    onMouseOut = (): void => {\n        const { node, onMouseOut } = this.props;\n        this.ref && this.ref.current && onMouseOut && onMouseOut(node, this.ref.current);\n    };\n\n    onMouseOver = (): void => {\n        const { node, onMouseOver } = this.props;\n        this.ref && this.ref.current && onMouseOver && onMouseOver(node, this.ref.current);\n    };\n\n    onDblClick = (): void => {\n        const { node, onDblClick } = this.props;\n        this.ref && this.ref.current && onDblClick && onDblClick(node, this.ref.current);\n    };\n\n    render() {\n\n        const { node } = this.props;\n        const { onMouseOver, onMouseOut, onDblClick } = this;\n        const deviceType = node.type as string;\n        const cn = cx(style.node, style[deviceType]); //{ [style.offline]: !isOnline(node.device, time) }\n        return (<g className={cn}\n            ref={this.ref as RefObject<SVGImageElement>}\n            onMouseOver={onMouseOver}\n            onMouseOut={onMouseOut}\n            onDoubleClick={onDblClick}\n        >\n            {\n                node.type === \"Coordinator\" ? (\n                    <polygon\n                        points={getStarShape(5, 5, 14) as string}\n                    />\n                ) : (\n                        <DeviceImage\n                            type=\"svg\"\n                            width={32}\n                            height={32}\n                            device={node as unknown as Device}\n                            className={`${style.img}`}\n                        />\n                    )\n            }\n            <text>{node.friendlyName}</text>\n\n        </g>);\n\n    }\n}\n\ninterface NodesProps extends MouseEventsResponderNode {\n    root: SVGElement;\n    nodes: NodeI[];\n    simulation: Simulation<NodeI, LinkI>;\n}\n\ntype NodesState = {\n    toggle: boolean;\n}\n\nexport default class Nodes extends Component<NodesProps, NodesState> {\n    state: Readonly<NodesState> = {\n        toggle: false\n    }\n    updateDrag(): void {\n        const { simulation, root } = this.props;\n        const dragForce = drag<SVGCircleElement, NodeI>()\n            .on(\"start\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0.3).restart();\n                }\n\n                d.fx = d.x;\n                d.fy = d.y;\n            })\n            .on(\"drag\", ({ x, y }, d) => {\n                d.fx = x;\n                d.fy = y;\n            })\n            .on(\"end\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0);\n                }\n                d.fx = undefined;\n                d.fy = undefined;\n            });\n        select(root).selectAll<SVGCircleElement, NodeI>(`.${style.node}`)\n            .call(dragForce);\n    }\n\n    componentDidMount(): void {\n        this.updateDrag();\n    }\n\n    componentDidUpdate(): void {\n        this.updateDrag();\n    }\n\n\n\n    render() {\n        const { nodes, onMouseOut, onMouseOver } = this.props;\n        return (\n            <g className={style.nodes}>\n                {nodes.map((node: NodeI) => (\n                    <Node\n                        onMouseOut={onMouseOut}\n                        onMouseOver={onMouseOver}\n                        key={node.ieeeAddr}\n                        node={node}\n                    />\n                ))}\n            </g>\n        );\n    }\n}\n","import { SimulationLinkDatum, SimulationNodeDatum } from \"d3-force\";\nimport { DeviceType, DeviceDefinition } from \"../../types\";\n\nexport interface NodeI extends SimulationNodeDatum {\n    ieeeAddr: string;\n    friendlyName?: string;\n    type?: DeviceType;\n    failed?: string[];\n    lastSeen?: number;\n    definition?: DeviceDefinition;\n}\n\nexport type LinkType =\n    \"Coordinator2EndDevice\" |\n    \"EndDevice2Coordinator\" |\n\n    \"Coordinator2Router\" |\n    \"Router2Coordinator\" |\n\n    \"EndDevice2Router\" |\n    \"Router2EndDevice\" |\n\n    \"Router2Router\" |\n\n    \"BrokenLink\";\n\nexport interface Source extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\n\nexport interface Target extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\nexport enum ZigbeeRelationship {\n    NeigbhorIsParent,\n    NeigbhorIsAChild,\n    NeigbhorIsASibling,\n    NoneOfTheAbove,\n    NeigbhorIsAFormerChild\n}\n\nexport interface LinkI extends SimulationLinkDatum<NodeI> {\n    source: Source;\n    target: Target;\n    linkquality: number;\n    linkqualities: number[];\n    depth: number;\n    routes: unknown[];\n    sourceIeeeAddr: string;\n    targetIeeeAddr: string;\n    sourceNwkAddr: number;\n    lqi: number;\n    relationship: ZigbeeRelationship;\n    relationships: ZigbeeRelationship[];\n    linkType: LinkType;\n}\n\nexport interface GraphI {\n    nodes: NodeI[];\n    links: LinkI[];\n}\n","import createStore from \"unistore\";\nimport devtools from \"unistore/devtools\";\nimport initialState from './initialState.txt';\n\n\nimport { Device, DeviceState, BridgeConfig, BridgeInfo, TouchLinkDevice } from \"./types\";\nimport { GraphI } from \"./components/map/types\";\nimport { deSerialize } from \"./utils\";\n\nexport interface GroupAddress {\n    endpoint: number;\n    ieee_address: string;\n}\n\nexport interface Group {\n    id: number;\n    friendly_name: string;\n    members: GroupAddress[];\n}\n\nexport interface LogMessage {\n    level: \"error\" | \"info\" | \"warning\";\n    message: string;\n}\n\nexport interface GlobalState {\n    devices: Map<string, Device>;\n    deviceStates: Map<string, DeviceState>;\n    touchlinkDevices: TouchLinkDevice[];\n    touchlinkScanInProgress: boolean;\n    touchlinkIdentifyInProgress: boolean;\n    touchlinkResetInProgress: boolean;\n    networkGraph: GraphI;\n    networkGraphIsLoading: boolean;\n    groups: Group[];\n    bridgeConfig: BridgeConfig;\n    bridgeInfo: BridgeInfo;\n    logs: LogMessage[];\n};\nconst _store = createStore(deSerialize(initialState) as GlobalState);\nconst store = process.env.NODE_ENV === 'production' ?  _store : devtools(_store);\n\nexport default store;","import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport store, { Group, LogMessage } from \"./store\";\nimport { BridgeConfig, BridgeInfo, TouchLinkDevice, Device, DeviceState } from './types';\nimport { sanitizeGraph, isSecurePage, randomString } from \"./utils\";\nimport { Notyf } from \"notyf\";\nimport { GraphI } from \"./components/map/types\";\n\nimport orderBy from \"lodash/orderBy\";\n\n\nconst MAX_LOGS_RECORDS_IN_BUFFER = 100;\nconst TOKEN_LOCAL_STORAGE_ITEM_NAME = \"z2m-token\";\nconst AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME = \"z2m-auth\";\nconst UNAUTHORIZED_ERROR_CODE = 4401;\n\nconst notyf = new Notyf();\n\ninterface Message {\n    topic: string;\n    payload: string | object | object[] | string[];\n}\n\nconst blacklistedMessages: RegExp[] = [\n    /MQTT publish/\n];\n\nconst isLogMessage = (msg: LogMessage | ResponseWithStatus): msg is LogMessage => {\n    return (msg as LogMessage).level !== undefined && (msg as LogMessage).message !== undefined;\n}\n\nconst isResponseWithStatus = (msg: LogMessage | ResponseWithStatus): msg is ResponseWithStatus => {\n    return (msg as ResponseWithStatus).status !== undefined;\n}\n\nconst showNotity = (data: LogMessage | ResponseWithStatus): void => {\n    let message = \"\", level = \"\";\n    if (isLogMessage(data)) {\n        message = data.message;\n        level = data.level;\n    } else if (isResponseWithStatus(data)) {\n        switch (data.status) {\n            case \"error\":\n                level = \"error\";\n                message = data.error as string;\n                break;\n            default:\n                break;\n        }\n    }\n\n    switch (level) {\n        case \"error\":\n        case \"warning\":\n            notyf.error(message);\n            break;\n        case \"info\":\n            notyf.success(message);\n            break;\n\n        default:\n            break;\n    }\n};\n\ninterface ResponseWithStatus {\n    status: \"ok\" | \"error\";\n    data: unknown;\n    error?: string;\n    transaction?: string;\n}\ninterface TouchllinkScanResponse extends ResponseWithStatus {\n    data: {\n        found: TouchLinkDevice[];\n    };\n}\ninterface Callable {\n    (): void;\n}\nclass Api {\n    url: string;\n    socket: ReconnectingWebSocket;\n    requests: Map<string, [Callable, Callable]> = new Map<string, [Callable, Callable]>();\n    transactionNumber = 1;\n    transactionRndPreffix: string;\n    constructor(url: string) {\n        this.url = url;\n        this.transactionRndPreffix = randomString(5);\n    }\n    send = (topic: string, payload: object): Promise<void> => {\n        console.debug(\"Calling API\", { topic, payload });\n\n        if (topic.startsWith('bridge/request/')) {\n            const transaction = `${this.transactionRndPreffix}-${this.transactionNumber++}`;\n            const promise = new Promise<void>((resolve, reject) => {\n                this.requests.set(transaction, [resolve, reject]);\n            });\n            this.socket.send(JSON.stringify({ topic, payload: { ...payload, transaction } }));\n            return promise;\n        } else {\n            this.socket.send(JSON.stringify({ topic, payload }));\n            return Promise.resolve();\n        }\n    }\n\n    urlProvider = async () => {\n        const url = new URL(this.url)\n        let token = localStorage.getItem(TOKEN_LOCAL_STORAGE_ITEM_NAME);\n        const authRequired = !!localStorage.getItem(AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME);\n        if (authRequired) {\n            if (!token) {\n                token = prompt(\"enter your z2m admin token\");\n                localStorage.setItem(TOKEN_LOCAL_STORAGE_ITEM_NAME, token as string);\n            }\n            url.searchParams.append(\"token\", token as string);\n        }\n        return url.toString();\n    }\n\n    connect(): void {\n        this.socket = new ReconnectingWebSocket(this.urlProvider);\n        this.socket.addEventListener(\"message\", this.onMessage);\n        this.socket.addEventListener(\"close\", this.onClose);\n    }\n    private procsessBridgeMessage = (data: Message): void => {\n        switch (data.topic) {\n            case \"bridge/config\":\n                store.setState({\n                    bridgeConfig: data.payload as BridgeConfig\n                });\n                break;\n\n            case \"bridge/info\":\n                store.setState({\n                    bridgeInfo: data.payload as BridgeInfo\n                });\n                break;\n\n            case \"bridge/devices\":\n                {\n                    const devicesMap = new Map();\n                    orderBy((data.payload as Device[]), \"friendly_name\").forEach((device) => {\n                        const dev = { ...device };\n                        dev.endpoints = new Map(Object.entries(device.endpoints));\n                        devicesMap.set(device.ieee_address, dev);\n                    });\n                    store.setState({\n                        devices: devicesMap\n                    })\n                }\n                break;\n\n            case \"bridge/groups\":\n                store.setState({\n                    groups: data.payload as Group[]\n                })\n                break;\n\n            case \"bridge/event\":\n                break;\n\n            case \"bridge/logging\":\n                {\n                    const { logs } = store.getState();\n                    const newLogs = [...logs.slice(-MAX_LOGS_RECORDS_IN_BUFFER)];\n                    newLogs.push(data.payload as LogMessage);\n                    store.setState({ logs: newLogs });\n                    const log = data.payload as LogMessage;\n                    if (blacklistedMessages.every(val => !val.test(log.message))) {\n                        showNotity(log);\n                    }\n                }\n                break;\n\n            case \"bridge/response/networkmap\":\n                {\n                    const response = data.payload as ResponseWithStatus;\n                    if (response.status == \"ok\") {\n                        const { value } = response.data as { value: unknown };\n                        store.setState({\n                            networkGraphIsLoading: false,\n                            networkGraph: sanitizeGraph(value as GraphI)\n                        });\n                    } else {\n                        store.setState({ networkGraphIsLoading: false });\n                    }\n                }\n                break;\n\n\n            case \"bridge/response/touchlink/scan\":\n                {\n                    const { status, data: payloadData } = data.payload as TouchllinkScanResponse;\n                    if (status === \"ok\") {\n                        store.setState({ touchlinkScanInProgress: false, touchlinkDevices: payloadData.found });\n                    } else {\n                        store.setState({ touchlinkScanInProgress: false });\n                    }\n                }\n                break;\n\n            case \"bridge/response/touchlink/identify\":\n                store.setState({ touchlinkIdentifyInProgress: false });\n                break;\n\n            case \"bridge/response/touchlink/factory_reset\":\n                store.setState({ touchlinkResetInProgress: false });\n                break;\n\n            default:\n                break;\n        }\n        if (data.topic.startsWith(\"bridge/response/\")) {\n            showNotity(data.payload as ResponseWithStatus);\n            this.resolvePromises(data.payload as ResponseWithStatus);\n        }\n    }\n\n    private resolvePromises(message: ResponseWithStatus): void {\n        const { transaction, status } = message;\n        if (transaction !== undefined && this.requests.has(transaction)) {\n            const [resolve, reject] = this.requests.get(transaction) as [Callable, Callable];\n            if (status == \"ok\" || status == undefined) {\n                resolve();\n            } else {\n                reject();\n            }\n            this.requests.delete(transaction);\n        }\n    }\n\n    private onClose = (e: CloseEvent): void => {\n        if (e.code === UNAUTHORIZED_ERROR_CODE) {\n            localStorage.setItem(AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME, \"true\");\n            localStorage.removeItem(TOKEN_LOCAL_STORAGE_ITEM_NAME);\n            notyf.error(\"Unauthorized\");\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000);\n        }\n    }\n\n    private onMessage = (event: MessageEvent): void => {\n        let data = {} as Message;\n        try {\n            data = JSON.parse(event.data) as Message;\n        } catch (e) {\n            notyf.error(e.message);\n            notyf.error(event.data);\n        }\n\n        if (data.topic.startsWith(\"bridge/\")) {\n            this.procsessBridgeMessage(data);\n        } else {\n            const { deviceStates } = store.getState();\n            const newDeviceStates = new Map(deviceStates);\n            newDeviceStates.set(data.topic, { ...newDeviceStates.get(data.topic), ...(data.payload as DeviceState) });\n            store.setState({ deviceStates: newDeviceStates });\n        }\n    }\n}\nconst apiUrl = `${window.location.host}${document.location.pathname}api`;\nconst api = new Api(`${isSecurePage() ? 'wss' : 'ws'}://${apiUrl}`);\nexport default api;","import api from \"../api\";\nimport { Device } from \"../types\";\n\nexport interface BridgeApi {\n    setPermitJoin(permit: boolean, device: Device): Promise<void>;\n    updateConfigValue(name: string, value: unknown): Promise<void>;\n    updateBridgeConfig(options: object): Promise<void>;\n    restartBridge(): Promise<void>;\n}\n\n\nexport default {\n    setPermitJoin(state, permit = true, device: Device): Promise<void> {\n        return api.send(\"bridge/request/permit_join\", { value: permit, device: device?.friendly_name });\n    },\n\n    updateConfigValue(state, name: string, value: unknown): Promise<void> {\n        return api.send(`bridge/request/config/${name}`, { value });\n    },\n    updateBridgeConfig(state, options: object): Promise<void> {\n        return api.send('bridge/request/options', {options});\n    },\n    restartBridge(state): Promise<void> {\n        return api.send('bridge/request/restart', {});\n    },\n}\n","import api from \"../api\";\n\nexport interface DeviceApi {\n    renameDevice(\n        old: string,\n        newName: string,\n        homeassistantRename: boolean\n    ): Promise<void>;\n    removeDevice(dev: string, force: boolean, block: boolean): Promise<void>;\n    configureDevice(name: string): Promise<void>;\n\n    setDeviceOptions(id: string, options: object): Promise<void>;\n}\n\n\nexport default {\n    renameDevice: (\n        state,\n        from: string,\n        to: string,\n        homeassistantRename: boolean\n    ): Promise<void> => {\n        return api.send(\"bridge/request/device/rename\", {\n            from,\n            to,\n            'homeassistant_rename': homeassistantRename,\n        });\n    },\n    removeDevice: (\n        state,\n        dev: string,\n        force: boolean,\n        block: boolean\n    ): Promise<void> => {\n        return api.send(\"bridge/request/device/remove\", { id: dev, force, block });\n    },\n\n    configureDevice: (state, name: string): Promise<void> => {\n        return api.send(\"bridge/request/device/configure\", { id: name });\n    },\n\n    setDeviceOptions: (state, id: string, options: object): Promise<void> => {\n        return api.send(\"bridge/request/device/options\", { id, options });\n    }\n}\n","import api from \"../api\";\n\nexport interface GroupsApi {\n    createGroup(name: string, id?: number): Promise<void>;\n    removeGroup(name: string): Promise<void>;\n    addDeviceToGroup(device: string, group: string): Promise<void>;\n    removeDeviceFromGroup(device: string, group: string): Promise<void>;\n    renameGroup(oldName: string, newName: string): Promise<void>;\n}\n\n\nexport default {\n    createGroup: (state, group: string, id: number): Promise<void> => {\n        const payload = {\n            'friendly_name': group\n        };\n        if (id) {\n            payload['id'] = id;\n        }\n        return api.send(\"bridge/request/group/add\", payload);\n    },\n\n    removeGroup: (state, group: string): Promise<void> => {\n        return api.send(\"bridge/request/group/remove\", { id: group });\n    },\n\n    addDeviceToGroup: (state, device: string, group: string): Promise<void> => {\n        return api.send(\"bridge/request/group/members/add\", { group, device });\n    },\n\n    removeDeviceFromGroup: (\n        state,\n        device: string,\n        group: string\n    ): Promise<void> => {\n        return api.send(\"bridge/request/group/members/remove\", { device, group });\n    },\n    renameGroup: (state, oldName: string, newName: string): Promise<void> => {\n        return api.send(\"bridge/request/group/rename\", { from: oldName, to: newName });\n    },\n}\n","import api from \"../api\";\n\nexport interface StateApi {\n    setStateValue(dev: string, name: string, value: unknown): Promise<void>;\n    setDeviceState(dev: string, value: object): Promise<void>;\n    getDeviceState(dev: string, value: object): Promise<void>;\n}\n\nexport default {\n    setStateValue(\n        state,\n        dev: string,\n        name: string,\n        value: string | number | boolean\n    ): Promise<void> {\n        return api.send(`${dev}/set`, { [name]: value });\n    },\n    setDeviceState(state, dev: string, value: object) {\n        return api.send(`${dev}/set`, value);\n    },\n    getDeviceState(state, dev: string, value: object) {\n        return api.send(`${dev}/get`, value);\n    },\n}\n","import api from \"../api\";\n\nexport interface OtaApi {\n    checkOTA(deviceName: string): Promise<void>;\n    updateOTA(deviceName: string): Promise<void>;\n}\nexport default {\n    checkOTA: (state, deviceName: string): Promise<void> => {\n        return api.send(\"bridge/request/device/ota_update/check\", { id: deviceName });\n    },\n    updateOTA: (state, deviceName: string): Promise<void> => {\n        return api.send(\"bridge/request/device/ota_update/update\", { id: deviceName });\n    },\n}\n","import api from \"../api\";\nimport { Cluster } from \"../types\";\n\nexport type BindParams = {\n    from: string;\n    to: string;\n    clusters: Cluster[];\n}\nexport interface BindApi {\n    addBind(params: BindParams): Promise<void>;\n    removeBind(params: BindParams): Promise<void>;\n}\n\ntype BindOperation = \"bind\" | \"unbind\";\nconst bindOp = (operation: BindOperation, params: object) => {\n    return api.send(`bridge/request/device/${operation}`, params);\n}\nexport default {\n    addBind: (state, params: BindParams): Promise<void> => bindOp(\"bind\", params),\n    removeBind: (state, params: BindParams): Promise<void> => bindOp(\"unbind\", params),\n}\n","import api from \"../api\";\nimport store from \"../store\";\nimport { TouchLinkDevice } from \"../types\";\n\n\nexport interface TouchlinkApi {\n    touchlinkScan(): Promise<void>;\n    touchlinkIdentify(device: TouchLinkDevice): Promise<void>;\n    touchlinkReset(device: TouchLinkDevice): Promise<void>;\n}\n\nexport default {\n    touchlinkScan(state): Promise<void> {\n        store.setState({ touchlinkScanInProgress: true, touchlinkDevices: [] });\n        return api.send(\"bridge/request/touchlink/scan\", { value: true });\n    },\n    touchlinkIdentify(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkIdentifyInProgress: true });\n        return api.send(\"bridge/request/touchlink/identify\", device);\n\n    },\n    touchlinkReset(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkResetInProgress: true });\n        return api.send(\"bridge/request/touchlink/factory_reset\", device);\n    },\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { GlobalState } from \"../store\";\nimport { Store } from \"unistore\";\n\nimport { ReportingConfig } from \"../types\";\nimport api from \"../api\";\nimport { download } from \"../utils\";\nimport bridgeActions from \"./BridgeApi\";\nimport deviceActions from \"./DeviceApi\";\nimport groupActions from \"./GroupsApi\";\nimport stateActions from \"./StateApi\";\nimport otaActions from \"./OtaApi\";\nimport bindActions from \"./BindApi\";\nimport touchlinkActions from \"./TouchlinkApi\";\n\nexport interface UtilsApi {\n    exportState(): Promise<void>;\n}\n\nexport interface MapApi {\n    networkMapRequest(): Promise<void>;\n}\nexport interface ReportingApi {\n    configureReport(device: string, config: ReportingConfig): Promise<void>;\n}\n\nconst actions = (store: Store<GlobalState>): object => ({\n    ...bridgeActions,\n    ...deviceActions,\n    ...groupActions,\n    ...stateActions,\n    ...otaActions,\n    ...bindActions,\n    ...touchlinkActions,\n\n    networkMapRequest: (state): Promise<void> => {\n        store.setState({ networkGraphIsLoading: true, networkGraph: { nodes: [], links: [] } });\n        return api.send(\"bridge/request/networkmap\", { type: \"raw\", routes: false });\n    },\n\n    exportState(state): Promise<void> {\n        download(state, 'state.json');\n        return Promise.resolve();\n    },\n    configureReport(state, device: string, config: ReportingConfig): Promise<void> {\n        return api.send('bridge/request/device/configure_reporting', {\n            id: device,\n            ...config\n        });\n    }\n});\nexport default actions;\n","import React, { ButtonHTMLAttributes, Component } from \"react\";\n\ninterface ButtonProps<T> {\n    item?: T;\n    onClick?(arg1: T): void;\n    promt?: boolean | string;\n}\n\nexport default class Button<T> extends Component<ButtonProps<T> & Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'onClick'>, {}> {\n    onClick = (): void => {\n        const { item, onClick, promt } = this.props;\n        let confirmed = true;\n        if (promt) {\n            confirmed = confirm(typeof promt === \"string\" ? promt : \"Are you sure?\");\n        }\n        confirmed && onClick && onClick(item as T);\n    };\n\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, item, promt, ...rest } = this.props;\n        return <button type=\"button\" {...rest} onClick={this.onClick}>{children}</button>;\n    }\n}","import { ZigbeeRelationship } from \"./types\";\n\ninterface LinkType {\n  title: string;\n  relationship: ZigbeeRelationship;\n}\nexport const linkTypes: LinkType[] = [\n  {\n      title: 'IsParent',\n      relationship: ZigbeeRelationship.NeigbhorIsParent\n  },\n  {\n      title: 'IsAChild',\n      relationship: ZigbeeRelationship.NeigbhorIsAChild\n  },\n  {\n      title: 'IsASibling',\n      relationship: ZigbeeRelationship.NeigbhorIsASibling\n  },\n  {\n      title: 'NoneOfTheAbove',\n      relationship: ZigbeeRelationship.NoneOfTheAbove\n  }\n];","import React, { FunctionComponent } from \"react\";\n\nconst Spinner: FunctionComponent = () => {\n  return <div className=\"d-flex align-items-center\">\n    <strong>Loading, please wait.</strong>\n    <div className=\"spinner-border me-2\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n}\nexport default Spinner;","import React, { ChangeEvent, Component, createRef, Fragment } from \"react\";\nimport Links from \"./links\";\nimport Nodes, { getStarShape } from \"./nodes\";\nimport { GraphI, LinkI, NodeI, Source, Target, ZigbeeRelationship } from \"./types\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions, { MapApi } from \"../../actions/actions\";\n\nimport Button from \"../button\";\nimport { ForceLink, forceLink, forceCollide, forceCenter, forceSimulation, forceX, forceY } from \"d3-force\";\nimport { select, selectAll, Selection, ValueFn } from \"d3-selection\";\nimport { forceManyBodyReuse } from \"d3-force-reuse\"\nimport { zoom, zoomIdentity, ZoomTransform } from \"d3-zoom\";\nimport { linkTypes } from \"./consts\";\nimport Spinner from \"../spinner\";\nimport intersection from \"lodash/intersection\";\nimport style from \"./map.css\";\nimport cx from \"classnames\";\nexport interface MouseEventsResponderNode {\n    onMouseOver?: (arg0: NodeI, el: SVGElement) => void;\n    onMouseOut?: (arg0: NodeI, el: SVGElement) => void;\n    onDblClick?: (arg0: NodeI, el: SVGElement) => void;\n}\n\ninterface MapState {\n    selectedNode?: NodeI;\n    width: number;\n    height: number;\n    visibleLinks: ZigbeeRelationship[];\n    legendIsVisible: boolean;\n}\nconst angle = (s: Source, t: Target) => Math.atan2(((t.y as number) - (s.y as number)), (t.x as number)- (s.x as number));\nconst xpos = (offset: number, s: Source, t: Target) => offset * Math.cos(angle(s, t)) + (s.x as number);\nconst ypos = (offset: number, s: Source, t: Target) => offset * Math.sin(angle(s, t)) + (s.y as number);\n\n\n\nconst parentOrChild = [ZigbeeRelationship.NeigbhorIsAChild, ZigbeeRelationship.NeigbhorIsParent];\nconst linkStrregth = (d: LinkI) => {\n    if (d.linkType === \"Router2Router\") {\n        return 1;\n    }\n    if (parentOrChild.includes(d.relationship)) {\n        return 0.5;\n    }\n\n    return 0;\n}\n\nconst distancesMap = {\n    BrokenLink: 450,\n    Router2Router: 200,\n    Coordinator2Router: 200,\n    Coordinator2EndDevice: 50,\n    EndDevice2Router: 50\n};\n\n\nconst getDistance = (d: LinkI): number => {\n    return distancesMap[d.linkType] ?? 200;\n    // const depth = ~~(Math.min(4, d.depth));\n    // return 50 * depth + distance;\n};\n\nconst computeLink = (d: LinkI, transform: ZoomTransform): string => {\n    const src = d.source;\n    const dst = d.target;\n    const [x1, y1] = transform.apply([src.x as number, src.y as number]);\n    const [x2, y2] = transform.apply([dst.x as number, dst.y as number]);\n    return `M ${x1} ${y1} L ${x2} ${y2}`;\n}\n\ntype SelNode = Selection<SVGElement, NodeI, SVGElement, {}>;\ntype SelLink = Selection<SVGElement, LinkI, SVGElement, {}>;\n\ntype TickedParams = {\n    transform: ZoomTransform;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n    links: LinkI[];\n}\nconst ticked = ({ transform, node, link, linkLabel, links }: TickedParams): void => {\n    links.forEach(function (d) {\n        const [x1, y1] = transform.apply([d.source.x as number, d.source.y as number]),\n            [x2, y2] = transform.apply([d.target.x as number, d.target.y as number]),\n            slope = (y2 - y1) / (x2 - x1);\n\n        (d as unknown as NodeI).x = (x2 + x1) / 2;\n        (d as unknown as NodeI).y = (x2 - x1) * slope / 2 + y1;\n    });\n    link.attr(\"d\", (d) => computeLink(d, transform));\n    linkLabel\n        .attr('x', (d) => transform.applyX(xpos(100, d.source, d.target)))\n        .attr('y', (d) => transform.applyY(ypos(100, d.source, d.target)))\n\n    const imgXShift = 32 / 2;\n    const imgYShift = 32 / 2;\n    const computeTransform = (d: NodeI) => {\n        const [X, Y] = transform.apply([d.x as number, d.y as number]);\n        return `translate(${X - imgXShift}, ${Y - imgYShift})`;\n    }\n    node.attr(\"transform\", computeTransform as ValueFn<SVGElement, NodeI, string | number | boolean | null>);\n};\ntype ProcessHighlightsParams = {\n    networkGraph: GraphI;\n    links: LinkI[];\n    selectedNode?: NodeI;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n}\nconst processHighlights = ({ networkGraph, links, selectedNode, node, link, linkLabel }: ProcessHighlightsParams) => {\n    const linkedByIndex = new Set<string>();\n    networkGraph.nodes.forEach(n => linkedByIndex.add(n.ieeeAddr + \",\" + n.ieeeAddr));\n    links.forEach((l) => linkedByIndex.add(l.sourceIeeeAddr + \",\" + l.targetIeeeAddr));\n\n    const neighboring = (a: Source, b: Target): boolean => linkedByIndex.has(a.ieeeAddr + \",\" + b.ieeeAddr)\n    const computeOpacity = (l: LinkI) => (l.source === selectedNode || l.target === selectedNode ? 1 : 0.15);\n    if (selectedNode) {\n        node.style(\"opacity\", (o: NodeI) => neighboring(selectedNode, o) || neighboring(o, selectedNode) ? 1 : 0.15);\n        link.style(\"stroke-opacity\", computeOpacity);\n        linkLabel.style(\"opacity\", computeOpacity);\n    } else {\n        node.style(\"opacity\", 1);\n        link.style(\"stroke-opacity\", 1);\n        linkLabel.style(\"opacity\", 1);\n    }\n}\n\nexport class MapComponent extends Component<GlobalState & MapApi, MapState> {\n    ref = createRef<HTMLDivElement>();\n    svgRef = createRef<SVGSVGElement>();\n    simulation = forceSimulation<NodeI, LinkI>();\n    state: Readonly<MapState> = {\n        width: 0,\n        height: 0,\n        visibleLinks: parentOrChild,\n        legendIsVisible: true,\n    };\n    transform: ZoomTransform = zoomIdentity;\n\n    updateNodes = (): void => {\n        const { networkGraph } = this.props;\n        if (!networkGraph.nodes.length) {\n            return;\n        }\n        const { visibleLinks, selectedNode, width, height } = this.state;\n        const container = select<SVGElement, {}>(this.svgRef.current as SVGElement);\n        const node = container.selectAll<SVGElement, NodeI>(`.${style.node}`);\n        const link = container.selectAll<SVGElement, LinkI>(`.${style.link}`);\n        const linkLabel = container.selectAll<SVGElement, LinkI>(`.${style.linkLabel}`);\n\n        const links = networkGraph.links.filter(l => intersection(visibleLinks, l.relationships).length);\n        this.simulation.nodes(networkGraph.nodes.concat(links as unknown as NodeI[]));\n        this.simulation.force<ForceLink<NodeI, LinkI>>(\"link\")?.links(links);\n        this.simulation.on(\"tick\", () => ticked({ transform: this.transform, node, link, linkLabel, links }));\n\n\n        //add zoom capabilities\n        const everything = container.selectAll<SVGGeometryElement, NodeI>('.everything');\n        const zoomHandler = zoom()\n            .extent([[0, 0], [width, height]])\n            .scaleExtent([1 / 10, 8])\n            .on(\"zoom\", ({ transform }) => {\n                everything.attr(\"transform\", transform);\n            });\n        zoomHandler(container);\n\n        processHighlights({ networkGraph, links, selectedNode, node, link, linkLabel });\n        node.on(\"click\", (event, d: NodeI) => {\n            const { selectedNode } = this.state;\n            this.setState({ selectedNode: selectedNode ? null as unknown as NodeI : d });\n        });\n        this.simulation.alphaTarget(0.03).restart();\n    }\n\n\n    updateForces(width: number, height: number): void {\n        this.simulation = this.simulation\n            .force(\"link\", forceLink<NodeI, LinkI>().id(d => d.ieeeAddr).distance(getDistance).strength(linkStrregth))\n            .force(\"charge\", forceManyBodyReuse().strength(-700))\n            .force(\"collisionForce\", forceCollide())\n            .force(\"center\", forceCenter(width / 2, height / 2))\n            .force(\"x\", forceX().strength(0.1))\n            .force(\"y\", forceY().strength(0.2))\n    }\n\n    initPage(): void {\n        const { width, height } = (this.ref.current as HTMLDivElement).getBoundingClientRect();\n        this.setState({ width, height });\n        this.updateForces(width, height);\n    }\n\n    componentDidMount(): void {\n        this.initPage()\n    }\n\n    componentDidUpdate(): void {\n        this.updateNodes();\n    }\n\n    renderMap() {\n        const { width, height, visibleLinks } = this.state;\n\n        const { networkGraph } = this.props;\n        const links = networkGraph.links.filter(l => intersection(visibleLinks, l.relationships).length > 0);\n        return (\n            <svg ref={this.svgRef} viewBox={`0 0 ${width} ${height}`}>\n                <g className=\"everything\">\n                    <Links links={links} />\n                    <Nodes\n                        root={this.svgRef.current as SVGElement}\n                        nodes={networkGraph.nodes}\n                        simulation={this.simulation}\n                    />\n                </g>\n            </svg >\n        )\n    }\n    onRequestClick = (): void => {\n        const { networkMapRequest } = this.props;\n        networkMapRequest();\n    }\n    renderMessage() {\n        const { networkGraphIsLoading } = this.props;\n        return (\n            <div className=\"h-100 d-flex justify-content-center align-items-center\">\n                {\n                    networkGraphIsLoading ? (\n                        <div>\n                            <Spinner />\n                            <div>Depending on the size of your network this can take somewhere between 10 seconds and 2 minutes.</div>\n                        </div>\n\n                    ) : <Button onClick={this.onRequestClick} className=\"btn btn-primary d-block\">Load map</Button>\n                }\n            </div>\n        );\n    }\n    onLinkTypeFilterChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { visibleLinks: stateVisibleLinks } = this.state;\n        const { checked, value } = e.target;\n        const inValue = parseInt(value, 10);\n        let visibleLinks = [...stateVisibleLinks];\n        if (checked) {\n            visibleLinks.push(inValue);\n        } else {\n            visibleLinks = visibleLinks.filter((v) => v !== inValue);\n        }\n        this.setState({ visibleLinks });\n    }\n    renderMapControls() {\n        const { visibleLinks } = this.state;\n        return <div className={style.controls}>\n            {\n                linkTypes.map(linkType => (\n                    <div key={linkType.title} className=\"form-check form-check-inline\">\n                        <input onChange={this.onLinkTypeFilterChange} className=\"form-check-input\" type=\"checkbox\" id={linkType.title} value={linkType.relationship} checked={visibleLinks.includes(linkType.relationship)} />\n                        <label className=\"form-check-label\" htmlFor={linkType.title}>{linkType.title}</label>\n                    </div>\n                ))\n            }\n            {\n                <div className=\"btn-group btn-group-sm\" role=\"group\">\n                    <Button<void> title=\"Refresh data\" className=\"btn btn-primary\" onClick={this.onRequestClick}><i\n                        className=\"fa fa-sync\" /></Button>\n                </div>\n            }\n        </div>\n    }\n    render() {\n        const { networkGraph } = this.props;\n        const { legendIsVisible } = this.state;\n        return (\n            <div className={style.container} ref={this.ref}>\n                {networkGraph.nodes.length ? <Fragment>{this.renderMapControls()} {this.renderMap()}</Fragment> : this.renderMessage()}\n                <div className={cx(\"fixed-bottom\", { \"d-none\": !legendIsVisible })} onClick={() => this.setState({ legendIsVisible: false })}>\n                    <div className={cx(style.node, style.Coordinator)}>\n                        <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n                            <polygon points={getStarShape(5, 5, 14) as string} />\n                        </svg> is Coordinator</div>\n                    <div className={cx(style.node, style.EndDevice)}>Green means End Device</div>\n                    <div className={cx(style.node, style.Router)}>Blue means Router</div>\n\n                    <div>Solid lines are the link to the <span className={cx(style.node, style.Coordinator)}>Coordinator</span></div>\n                    <div>Dashed lines are the link with <span className={cx(style.node, style.Coordinator)}>Router</span></div>\n                    <div>Link quality is between 0 - 255, values with / represents multiple types of links</div>\n                    <div>Click on me to hide</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mappedProps = [\"networkGraph\", \"networkGraphIsLoading\"];\nconst ConnectedMap = connect<{}, MapState, GlobalState, {}>(mappedProps, actions)(MapComponent);\nexport default ConnectedMap;\n","import React, { Component, FunctionComponent,  Fragment } from \"react\";\nimport cx from \"classnames\";\n// import * as style from \"./style.css\";\n\n\nexport const ModalHeader: FunctionComponent<{}> = props => {\n    return <div className=\"modal-header\">{props.children}</div>;\n};\n\nexport const ModalBody: FunctionComponent<{}> = props => {\n    return <div className=\"modal-body\">{props.children}</div>;\n};\n\nexport const ModalFooter: FunctionComponent<{}> = props => {\n    return <div className=\"modal-footer\">{props.children}</div>;\n};\ninterface ModalProps {\n    isOpen?: boolean;\n}\ninterface ModalState {\n    modalShow: string;\n    display: string;\n}\n\nclass Modal extends Component<ModalProps, ModalState> {\n    constructor(props: ModalProps) {\n        super(props);\n        this.state = {\n            modalShow: '',\n            display: 'none'\n        };\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    openModal() {\n        this.setState({\n            modalShow: 'show',\n            display: 'block'\n        });\n    }\n\n    closeModal() {\n        this.setState({\n            modalShow: '',\n            display: 'none'\n        });\n    }\n\n    componentDidMount() {\n        this.props.isOpen ? this.openModal() : this.closeModal();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.isOpen !== this.props.isOpen) {\n            this.props.isOpen ? this.openModal() : this.closeModal();\n        }\n    }\n\n    render() {\n        return (\n            <div\n                className={`modal fade ${ this.state.modalShow}`}\n\n                role=\"dialog\"\n                aria-hidden=\"true\"\n                style={{ display: this.state.display }}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">{this.props.children}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n\n\n\n// interface Props {\n//     onOk(): void;\n//     onCancel(): void;\n// }\n// const Modal: FunctionComponent<Props> = (props: Props) => {\n//     const { onOk, onCancel } = props;\n//     return (\n//         <Fragment>\n\n//             <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n//                 Launch demo modal\n// </button>\n//             <div className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n//                             <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n//                                 <span aria-hidden=\"true\">&times;</span>\n//                             </button>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             ...\n//                         </div>\n//                         <div className=\"modal-footer\">\n//                             <button onClick={onOk} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n//                             <button onClick={onCancel} type=\"button\" className=\"btn btn-primary\">Ok</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </Fragment>\n//     );\n// };\n\n// export default Modal;\n","import React, { ChangeEvent, Component } from \"react\";\nimport Button from \"../button\";\nimport { Device, DeviceState } from \"../../types\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { OtaApi } from \"../../actions/OtaApi\";\nimport { DeviceApi } from \"../../actions/DeviceApi\";\nimport cx from \"classnames\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\nimport { GlobalState } from \"../../store\";\ninterface DeviceControlGroupProps {\n    device: Device;\n    state?: DeviceState;\n}\ninterface DeviceRenameParams {\n    friendlyName: string;\n    isHassRename: boolean;\n}\ninterface DeviceRemovalParams {\n    block: boolean;\n    force: boolean;\n}\n\n\ninterface DeviceControlGroupState {\n    isRenameModalOpened: boolean;\n    isDeviceRemovalModalOpened: boolean;\n    removeParams: DeviceRemovalParams;\n    renameParams: DeviceRenameParams;\n\n}\n\nexport class DeviceControlGroup extends Component<DeviceControlGroupProps & DeviceApi & GlobalState, DeviceControlGroupState> {\n    state = {\n        isRenameModalOpened: false,\n        isDeviceRemovalModalOpened: false,\n        renameParams: {\n            friendlyName: this.props.device.friendly_name,\n            isHassRename: false\n        },\n        removeParams: {\n            block: false,\n            force: false\n        }\n    }\n\n    onRenameClick = async (): Promise<void> => {\n        const { renameDevice, device } = this.props;\n        const { renameParams } = this.state;\n\n        await renameDevice(device.friendly_name, renameParams.friendlyName, renameParams.isHassRename);\n        this.setState({\n            isRenameModalOpened: false\n        });\n    };\n\n\n    onRemoveClick = (): void => {\n        const { removeDevice, device } = this.props;\n        const { removeParams } = this.state;\n        removeDevice(device.friendly_name, removeParams.force, removeParams.block);\n        this.setState({\n            isDeviceRemovalModalOpened: false\n        });\n    };\n\n    toggleRenameModal = (): void => {\n        const { isRenameModalOpened } = this.state;\n        this.setState({ isRenameModalOpened: !isRenameModalOpened });\n    }\n    toggleDeviceRemovalModal = (): void => {\n        const { isDeviceRemovalModalOpened } = this.state;\n        this.setState({ isDeviceRemovalModalOpened: !isDeviceRemovalModalOpened });\n    }\n\n    onHassEntityIdChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { checked } = e.target;\n        renameParams.isHassRename = checked;\n        this.setState({ renameParams });\n    }\n    onFriendlyNameChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { value } = e.target;\n        renameParams.friendlyName = value;\n        this.setState({ renameParams });\n    }\n\n    onDeviceRemovalParamChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { removeParams } = this.state;\n        const { checked, name } = e.target;\n        removeParams[name] = checked;\n        this.setState({ removeParams });\n    }\n    renderRenameButton() {\n        const { bridgeInfo, device } = this.props;\n        const { isRenameModalOpened, renameParams } = this.state;\n        return (\n            <><Button<void> className=\"btn btn-secondary\" onClick={this.toggleRenameModal} title=\"Rename device\"><i className=\"fa fa-edit\" /></Button>\n                <Modal isOpen={isRenameModalOpened}>\n                    <ModalHeader>\n                        <h3>Rename device</h3>\n                        <small>{device.friendly_name}</small>\n                    </ModalHeader>\n                    <ModalBody>\n                        <div className=\"mb-3\">\n                            <label htmlFor={`fn${device.ieee_address}`} className=\"form-label\">Friendly name</label>\n                            <input id={`fn${device.ieee_address}`} onChange={this.onFriendlyNameChange} type=\"text\" className=\"form-control\" value={renameParams.friendlyName} />\n                        </div>\n                        {bridgeInfo?.config?.homeassistant ? (\n                            <div className=\"form-check form-switch\">\n                                <input className=\"form-check-input\" checked={renameParams.isHassRename} type=\"checkbox\" id={`hass${device.ieee_address}`} onChange={this.onHassEntityIdChange} />\n                                <label className=\"form-check-label\" htmlFor={`hass${device.ieee_address}`}>Update Home Assistant entity ID</label>\n                            </div>\n                        ) : null}\n                    </ModalBody>\n                    <ModalFooter>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleRenameModal}>Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.onRenameClick}>Save changes</button>\n                    </ModalFooter>\n                </Modal></>\n        )\n    }\n    renderDeviceRemovalButton() {\n        const { device } = this.props;\n        const { isDeviceRemovalModalOpened, removeParams } = this.state;\n        const checks = [\n            { label: 'Force remove', name: 'force', value: removeParams.force },\n            { label: 'Block from joining again', name: 'block', value: removeParams.block },\n        ];\n        return (\n            <><Modal isOpen={isDeviceRemovalModalOpened}>\n                <ModalHeader>\n                    <h3>Remove device</h3>\n                    <small>{device.friendly_name}</small>\n                </ModalHeader>\n                <ModalBody>\n                    {\n                        checks.map(check => {\n                            const id = `${check.name}${device.ieee_address}`;\n                            return <div key={check.name} className=\"form-check form-switch\">\n                                <input className=\"form-check-input\" name={check.name} checked={check.value} type=\"checkbox\" id={id} onChange={this.onDeviceRemovalParamChange} />\n                                <label className=\"form-check-label\" htmlFor={id}>{check.label}</label>\n                            </div>\n                        })\n                    }\n                </ModalBody>\n                <ModalFooter>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleDeviceRemovalModal}>Close</button>\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onRemoveClick}>Delete</button>\n                </ModalFooter>\n            </Modal>\n                <button onClick={this.toggleDeviceRemovalModal} className=\"btn btn-danger\" title=\"Remove device\"><i className={cx(\"fa\", \"fa-trash\")} /></button></>\n        )\n    }\n\n    render() {\n        const { device, configureDevice } = this.props;\n        return (\n            <div className=\"btn-group btn-group-sm\" role=\"group\">\n                {this.renderRenameButton()}\n                <Button<string> className=\"btn btn-secondary\" onClick={configureDevice} item={device.friendly_name} title=\"Reconfigure\" promt><i className={cx(\"fa\", \"fa-cogs\")} /></Button>\n                {this.renderDeviceRemovalButton()}\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedDeviceControlGroup = connect<DeviceControlGroupProps, {}, GlobalState, DeviceApi>(mappedProps, actions)(DeviceControlGroup);\nexport default ConnectedDeviceControlGroup;\n\n","import React, { Fragment } from \"react\";\nimport { Device } from \"../../types\";\n\ntype VendorProps = {\n  device: Device;\n}\nconst normalizeModel = (model: string): string => {\n  const find = '[/| |:]';\n  const re = new RegExp(find, 'g');\n  return model.replace(re, '_');\n};\n\nexport const VendorLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  if (device.supported && device.definition) {\n    const url = `https://www.zigbee2mqtt.io/information/supported_devices.html#${encodeURIComponent(normalizeModel(device.definition.vendor?.toLowerCase()))}`;\n    return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{device.definition.vendor}</a>\n  }\n  return <Fragment>Unsupported</Fragment>;\n}\n\n\nexport const ModelLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  let url = 'https://www.zigbee2mqtt.io/how_tos/how_to_support_new_devices.html#how-to-support-new-devices';\n  let title = device.model_id;\n  if (device.supported && device.definition) {\n    const acnchor = [\n      encodeURIComponent(device.definition?.vendor?.toLowerCase()),\n      encodeURIComponent(device.definition?.model?.toLowerCase()),\n    ].join('-');\n    url = `https://www.zigbee2mqtt.io/devices/${encodeURIComponent(normalizeModel(device.definition?.model))}.html#${encodeURIComponent(normalizeModel(acnchor))}`;\n    title = device.definition.model;\n  }\n  return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{title}</a>\n}\n","import React, { Fragment, FunctionComponent } from \"react\";\nimport { PowerSource as PowerSourceType } from \"../../types\";\nimport style from \"./style.css\";\n\n\ninterface PowerSourceProps {\n    source: PowerSourceType;\n    battery?: number;\n    batteryLow?: boolean;\n    showLevel?: boolean;\n}\n\n\nconst PowerSource: FunctionComponent<PowerSourceProps> = ({ source, battery, batteryLow, showLevel, ...rest }) => {\n    let batteryClass = \"\";\n    let title = \"\";\n\n    switch (source) {\n        case \"Battery\":\n            title = 'Battery';\n            if (batteryLow !== undefined) {\n                batteryClass = batteryLow ? `fa-battery-empty animation-blinking text-danger` : 'fa-battery-full text-success';\n                title += batteryLow ? ' LOW' : ' OK';\n            }\n            if (battery !== undefined) {\n                if (battery >= 85) {\n                    batteryClass += \" fa-battery-full\";\n                } else if (battery >= 75) {\n                    batteryClass += \" fa-battery-three-quarters\";\n                } else if (battery >= 50) {\n                    batteryClass += \" fa-battery-half\";\n                } else if (battery >= 25) {\n                    batteryClass += \" fa-battery-quarter\";\n                } else if (battery >= 10) {\n                    batteryClass += ` fa-battery-empty animation-blinking`\n                } else {\n                    return <span className={`animation-blinking text-danger`} role=\"alert\">{battery}%</span>\n                }\n            }\n            title += `${battery ? `, power level ${battery}%` : \"\"}`;\n            if (!batteryClass) {\n                batteryClass = \"fa-question\";\n            }\n            return <Fragment>{showLevel ? <span className=\"pe-2\">Battery {battery !== undefined ? `${battery}%` : null}</span> : null}<i className={`fa ${batteryClass}`} title={title} {...rest} /></Fragment>;\n\n        case \"Mains (single phase)\":\n        case \"DC Source\":\n            return <i className={`fa fa-plug ${style.plug}`} title={source} {...rest} />;\n        default:\n            return <i className={`fa fa-question`} title={source} {...rest} />;\n    }\n};\n\nexport default PowerSource;\n","/* eslint-disable react/display-name */\nimport React, { Component, Fragment } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport { toHex, toHHMMSS } from \"../../utils\";\nimport DeviceControlGroup from \"../device-control\";\nimport cx from \"classnames\";\nimport style from \"./style.css\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport get from 'lodash/get';\nimport DeviceImage from \"../device-image\";\nimport { ModelLink, VendorLink } from \"../vendor-links/verndor-links\";\nimport PowerSource from \"../power-source\";\n\n\ntype DeviceInfoProps = {\n    device: Device;\n}\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\n// [Flower sensor](http://modkam.ru/?p=1700)\nconst markdownLinkRegex = /\\[(.*?)\\]\\((.*?)\\)/;\n\nconst displayProps = [\n    {\n        label: 'Friendly name',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><strong>{device.friendly_name}</strong></dd>,\n    },\n    {\n        key: 'type',\n        label: 'Device type'\n    },\n    {\n        key: 'model_id',\n        label: 'Zigbee model'\n    },\n    {\n        key: 'definition.description',\n        label: 'Description',\n        if: 'supported',\n        render: (device: Device) => {\n            const result = markdownLinkRegex.exec(device.definition?.description as string);\n            let content = <span>{device.definition?.description}</span>;\n            if (result) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const [all, title, link] = result;\n                content = <a target=\"_blank\" rel=\"noopener noreferrer\"href={link}>{title}</a>\n            }\n            return <dd className=\"col-12 col-md-7\">{content}</dd>\n        },\n    },\n    {\n        render: (device: Device) => <dd className=\"col-12 col-md-7\" ><p className={cx('mb-0', 'font-weight-bold', { 'text-danger': !device.supported, 'text-success': device.supported })}>{device.supported ? 'Supported' : 'Unsupported'}</p></dd>,\n        label: 'Support status'\n    },\n    {\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{device.definition?.supports}</dd>,\n        label: 'Supports',\n        if: 'definition.supports'\n    },\n    {\n        key: 'ieee_address',\n        label: 'IEEE address'\n    },\n    {\n        key: 'network_address',\n        label: 'Network address',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{toHex(device.network_address)}</dd>,\n    },\n    {\n        key: 'date_code',\n        label: 'Firmware build date',\n        if: 'date_code'\n    },\n    {\n        key: 'software_build_id',\n        label: 'Firmware version',\n        if: 'software_build_id'\n    },\n\n    {\n        key: 'definition.vendor',\n        label: 'Vendor',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><VendorLink device={device} /></dd>\n    },\n    {\n        key: 'definition.model',\n        label: 'Model',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><ModelLink device={device} /></dd>\n    },\n\n    {\n        label: 'Power source',\n        render: (device: Device, deviceStatus: DeviceState) => <dd className=\"col-12 col-md-7\"><PowerSource showLevel={true} source={device.power_source} battery={deviceStatus.battery as number} batteryLow={deviceStatus.battery_low as boolean} /></dd>\n    },\n    {\n        label: 'Interview completed',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{device.interview_completed ? 'Yes' : 'No'}</dd>\n    }\n];\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DeviceInfo extends Component<DeviceInfoProps & PropsFromStore, {}> {\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceStatus: DeviceState = deviceStates.get(device.friendly_name) ?? {} as DeviceState;\n        return (\n            <Fragment>\n                <div className=\"d-flex justify-content-center\">\n                    <DeviceImage className={`card-img-top w-auto ${style[\"device-pic\"]}`} device={device} deviceStatus={deviceStatus} />\n                </div>\n\n\n                {/* <h2 className=\"card-title\">{device.friendly_name} {device.type}</h2> */}\n\n\n                <dl className=\"row\">\n                    {\n                        displayProps.filter(prop => prop.if === undefined || get(device, prop.if, false)).map(prop => (\n                            <Fragment key={prop.label}>\n                                <dt className=\"col-12 col-md-5\">{prop.label}</dt>\n                                {prop.render ?\n                                    prop.render(device, deviceStatus) : <dd className=\"col-12 col-md-7\">{get(device, prop.key)}</dd>}\n\n                            </Fragment>\n                        ))\n                    }\n                </dl>\n\n\n                <DeviceControlGroup device={device} state={deviceStatus} />\n\n            </Fragment>\n        );\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceInfoPage = connect<DeviceInfoProps, {}, GlobalState, PropsFromStore>(mappedProps)(DeviceInfo);\nexport default ConnectedDeviceInfoPage;","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Device, ObjectType } from \"../../types\";\nimport { getDeviceDisplayName } from \"../../utils\";\nimport { Group } from \"../../store\";\nconst DELIMITER = '|';\ninterface DevicePickerProps {\n    type: ObjectType;\n    value: string | number;\n    devices: Map<string, Device>;\n    groups?: Group[];\n    onChange(device: Device | Group, type: ObjectType): void;\n}\nexport default class DevicePicker extends Component<DevicePickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange, devices, groups = [] } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n\n        if (devices.has(value)) {\n            onChange(devices.get(value) as Device, \"device\");\n        } else {\n            const group = groups.find(g => parseInt(value, 10) === g.id);\n            onChange(group as Group, \"group\");\n        }\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { devices, groups, value, type, onChange, ...rest } = this.props;\n        let options = [<option key=\"hidden\" hidden>Select device</option>];\n\n        const devicesOptions = [] as JSX.Element[];\n        devices.forEach((device) => {\n            devicesOptions.push(<option\n                title={device.definition?.description}\n                key={device.ieee_address}\n                value={device.ieee_address}\n            >{getDeviceDisplayName(device)}</option>);\n        });\n        if (groups && groups.length) {\n            const groupOptions = groups.map(group => <option\n                key={group.friendly_name}\n                value={group.id}>{group.friendly_name}\n            </option>);\n            options.push(<optgroup key=\"Groups\" label=\"Groups\">{groupOptions}</optgroup>);\n            options.push(<optgroup key=\"Devices\" label=\"Devices\">{devicesOptions}</optgroup>);\n        } else {\n            options = options.concat(devicesOptions);\n        }\n        return <select\n            value={value}\n            onChange={this.onSelect}\n            className=\"form-control\"\n            {...rest}\n        >{options}\n\n        </select>;\n\n    }\n}","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Endpoint } from \"../../types\";\n\n\n\ninterface EndpointPickerProps {\n    onChange(endpoint: Endpoint): void;\n    value: Endpoint;\n    values: Endpoint[];\n}\n\nexport default class EndpointPicker extends Component<EndpointPickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n        onChange(value);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { onSelect, value, values, disabled, onChange, ...rest } = this.props;\n        const hasOnlyOneEP = values.length == 1;\n\n        const options = values.map(ep => <option key={ep} value={ep}>{ep}</option>)\n        options.unshift(<option key=\"hidded\" hidden>Select endpoint</option>);\n        return <select disabled={value && hasOnlyOneEP || disabled}\n            value={value}\n            className=\"form-control\"\n            title={hasOnlyOneEP ? 'The only endpoint' : \"\"}\n            onChange={this.onSelect}\n            {...rest}>\n            {options}\n        </select>;\n\n    }\n}","import React, { ChangeEvent, Component, InputHTMLAttributes } from \"react\";\nimport { Cluster } from \"../../types\";\nimport { randomString } from \"../../utils\";\n\n\n\nconst clusterDescriptions = {\n    genPowerCfg: \"PowerCfg\",\n    genScenes: \"Scenes\",\n    genOnOff: \"OnOff\",\n    genLevelCtrl: \"LevelCtrl\",\n    lightingColorCtrl: \"LColorCtrl\",\n    closuresWindowCovering: \"Closures\",\n    genMultistateInput: \"MultistateInput\",\n    genGroups: \"Groups\",\n    genOta: \"Ota\",\n    touchlink: \"Touchlink\",\n    genIdentify: \"Identify\",\n    msTemperatureMeasurement: \"Temperature\",\n    msIlluminanceMeasurement: \"Illuminance\",\n    msRelativeHumidity: \"Humidity\",\n    msPressureMeasurement: \"Pressure\",\n    msSoilMoisture: \"Soil Moisture\",\n}\n\nexport enum PickerType {\n    MULTIPLE,\n    SINGLE\n}\nexport interface ClusterGroup {\n    name: string;\n    clusters: Cluster[];\n}\ninterface ClusterPickerProps {\n    value: Cluster[] | Cluster;\n    onChange(arg1: Cluster[] | Cluster | undefined): void;\n    clusters: Cluster[] | ClusterGroup[];\n    pickerType: PickerType;\n}\ninterface ClusterPickerState {\n    pickerId: string;\n}\n\n\n\nfunction isClusterGroup(clusters: Cluster[] | ClusterGroup[]): clusters is ClusterGroup[] {\n\n    return typeof clusters[0] !== 'string';\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class ClusterPicker extends Component<ClusterPickerProps & Omit<InputHTMLAttributes<HTMLInputElement | HTMLSelectElement>, 'onChange'>, ClusterPickerState> {\n    public static defaultProps = {\n        clusters: []\n    };\n    state: Readonly<ClusterPickerState> = {\n        pickerId: randomString(5)\n    }\n\n    onChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>): void => {\n        const { onChange, pickerType } = this.props;\n        let { value } = this.props;\n        const { name } = e.target;\n        if (pickerType === PickerType.MULTIPLE) {\n            const { checked: isChecked } = e.target as HTMLInputElement;\n            if (isChecked) {\n                (value as Cluster[]).push(name);\n            } else {\n                value = (value as Cluster[]).filter(v => v !== name);\n            }\n        } else {\n            const { value: selectedValue } = e.target as HTMLInputElement;\n            value = selectedValue;\n        }\n        onChange(value);\n    }\n    render() {\n        const { pickerType } = this.props;\n        if (pickerType === PickerType.MULTIPLE) {\n            return this.renderMultiPicker();\n        } else {\n            return this.renderSinglePicker();\n        }\n    }\n    renderMultiPicker() {\n        const { pickerId } = this.state;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { clusters, value, pickerType, onChange, ...rest } = this.props;\n        let options = [] as JSX.Element[];\n        if (isClusterGroup(clusters)) {\n            //TODO: implement if necessary\n            console.warn(\"Not implemented\");\n        } else {\n            options = clusters.map(cluster => (\n                <div key={cluster} className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\"\n                        type=\"checkbox\"\n                        checked={value.includes(cluster)}\n                        name={cluster}\n                        id={`${pickerId}_${cluster}`}\n                        value={cluster}\n                        onChange={this.onChange}\n                        {...rest}\n                    />\n                    <label className=\"form-check-label\" htmlFor={`${pickerId}_${cluster}`} title={cluster}>{clusterDescriptions[cluster] ?? cluster}</label>\n                </div>\n            ));\n        }\n\n        return options;\n    }\n\n    renderSinglePicker() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { clusters, onChange, pickerType, ...rest } = this.props;\n        const options = [<option key=\"hidden\" hidden>Select cluster</option>];\n        if (isClusterGroup(clusters)) {\n            clusters.forEach(group => {\n                const groupOptions = group.clusters.map(cluster => <option key={cluster} value={cluster}>{clusterDescriptions[cluster] ?? cluster}</option>)\n                if (groupOptions.length === 0) {\n                    groupOptions.push(<option key=\"none\" disabled>None</option>)\n                }\n                options.push(<optgroup key={group.name} label={group.name}>{groupOptions}</optgroup>);\n            });\n\n\n        } else {\n            clusters.forEach(cluster => {\n                options.push(<option key={cluster} value={cluster}>{clusterDescriptions[cluster] ?? cluster}</option>);\n            })\n        }\n        return (<select className=\"form-select\" onChange={this.onChange} {...rest}>\n            {options}\n        </select>)\n    }\n}","import React, { Component } from \"react\";\nimport { Device, Endpoint, Cluster, ObjectType } from \"../../types\";\nimport DevicePicker from \"../device-picker\";\nimport EndpointPicker from \"../endpoint-picker\";\nimport ClusterPicker, { PickerType } from \"../cluster-picker\";\nimport Button from \"../button\";\nimport { Group } from \"../../store\";\nimport { NiceBindingRule } from \"./bind\";\nimport { getEndpoints } from \"../../utils\";\nimport { BindParams } from \"../../actions/BindApi\";\n\n\n\n\ninterface BindRowProps {\n    rule: NiceBindingRule;\n    idx: number;\n    devices: Map<string, Device>;\n    groups: Group[];\n    device: Device;\n    onBind(params: BindParams): void;\n    onUnBind(params: BindParams): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface BindRowState {\n    stateRule: NiceBindingRule;\n}\nconst getTarget = (rule: NiceBindingRule, devices: Map<string, Device>, groups: Group[]): Device | Group => {\n    if (rule.target.type === \"group\") {\n        return groups.find(g => g.id === rule.target.id) as Group;\n    }\n    return devices.get(rule.target?.ieee_address as string) as Device;\n}\ntype Action = \"Bind\" | \"Unbind\";\nexport default class BindRow extends Component<BindRowProps, BindRowState> {\n    state: Readonly<BindRowState> = {\n        stateRule: {} as NiceBindingRule\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static getDerivedStateFromProps(props: Readonly<BindRowProps>, state: BindRowState): Partial<BindRowState> {\n        const { rule } = props;\n        return {\n            stateRule: rule\n        };\n    }\n    setSourceEp = (sourceEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.source.endpoint = sourceEp;\n        this.setState({ stateRule });\n    }\n\n    setDestination = (destination: Device | Group, type: ObjectType): void => {\n        const { stateRule } = this.state;\n        if (type === \"device\") {\n            const endpoints = getEndpoints(destination);\n            stateRule.target['ieee_address'] = (destination as Device)['ieee_address'];\n            stateRule.target.type = \"endpoint\";\n            stateRule.target.endpoint = endpoints[0];\n            delete stateRule.target.id;\n        } else if (type === \"group\") {\n            stateRule.target.id = (destination as Group).id;\n            stateRule.target.type = \"group\";\n            delete stateRule.target.ieee_address;\n        }\n        stateRule.clusters = [];\n        this.setState({ stateRule });\n    }\n\n    setDestinationEp = (destinationEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.target.endpoint = destinationEp;\n        stateRule.clusters = [];\n        this.setState({ stateRule });\n    }\n\n    setClusters = (clusters: Cluster[]): void => {\n        const { stateRule } = this.state;\n        stateRule.clusters = clusters;\n        this.setState({ stateRule });\n    }\n\n    getBidningParams(): { from: string; to: string; clusters: string[] } {\n        const { device, groups, devices } = this.props;\n        const { stateRule } = this.state;\n        const from = `${device.friendly_name}/${stateRule.source.endpoint}`;\n        let to = \"\";\n        if (stateRule.target.type === \"group\") {\n            const targetGroup = groups.find(group => group.id === stateRule.target.id) as Group;\n            to = `${targetGroup.friendly_name}`;\n        } else if (stateRule.target.type === \"endpoint\") {\n            const targeDevice = devices.get(stateRule.target?.ieee_address as string) as Device;\n            if (targeDevice.type === \"Coordinator\") {\n                to = `${targeDevice.friendly_name}`;\n            } else {\n                to = `${targeDevice.friendly_name}/${stateRule.target.endpoint}`;\n            }\n        }\n        return { from, to, clusters: stateRule.clusters };\n    }\n\n    onBindOrUnBindClick = (action: Action): void => {\n        const { onUnBind, onBind } = this.props;\n        const { from, to, clusters } = this.getBidningParams();\n        if (action == \"Bind\") {\n            onBind({ from, to, clusters });\n        } else {\n            onUnBind({ from, to, clusters });\n        }\n    }\n\n    isValidRule(): boolean {\n        const { stateRule } = this.state;\n        let valid;\n        if (stateRule.target.type == \"endpoint\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.ieee_address\n                && stateRule.target.endpoint\n                && stateRule.clusters.length > 0;\n        } else if (stateRule.target.type == \"group\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.id\n                && stateRule.clusters.length > 0;\n        }\n        return !!valid;\n    }\n\n    render() {\n        const { devices, groups, idx, device } = this.props;\n        const { stateRule } = this.state;\n\n        const targetType: ObjectType = stateRule.target.type === \"endpoint\" ? \"device\" : \"group\";\n\n        const sourceEndpoints = getEndpoints(device);\n        const target = getTarget(stateRule, devices, groups);\n        const destinationEndpoints = getEndpoints(target);\n\n        const possibleClusters: Set<Cluster> = new Set(stateRule.clusters);\n        const destEndpoint = device.endpoints.get(stateRule.source.endpoint);\n        if (destEndpoint) {\n            destEndpoint.clusters.output.forEach(cluster => possibleClusters.add(cluster));\n        }\n        return (<tr>\n            <th scope=\"row\">{idx + 1}</th>\n            <td><EndpointPicker disabled={!stateRule.isNew} values={sourceEndpoints} value={stateRule.source.endpoint} onChange={this.setSourceEp} /></td>\n            <td><DevicePicker disabled={!stateRule.isNew} type={targetType} value={(stateRule.target.ieee_address || stateRule.target.id) as string} devices={devices} groups={groups} onChange={this.setDestination} /></td>\n            <td>{stateRule.target.type === \"endpoint\" ? <EndpointPicker disabled={!stateRule.isNew} values={destinationEndpoints} value={stateRule.target.endpoint as Endpoint} onChange={this.setDestinationEp} /> : null}</td>\n            <td><ClusterPicker pickerType={PickerType.MULTIPLE} clusters={Array.from(possibleClusters)} value={stateRule.clusters} onChange={this.setClusters} /></td>\n            <td><div className=\"btn-group btn-group-sm\">\n                <Button<Action> item={\"Bind\"} disabled={!this.isValidRule()} title=\"Bind\" className=\"btn btn-primary\" onClick={this.onBindOrUnBindClick}><i\n                    className=\"fa fa-heart\" /></Button>\n                <Button<Action> item={\"Unbind\"} disabled={!stateRule.isNew && !this.isValidRule()} title=\"Unbind\" className=\"btn btn-secondary\" onClick={this.onBindOrUnBindClick}><i\n                    className=\"fa fa-heart-broken\" /></Button>\n            </div></td>\n        </tr>);\n    }\n}\n","import React, { Component } from \"react\";\nimport { Device, Cluster, Endpoint } from \"../../types\";\nimport BindRow from \"./bind-row\";\nimport actions from \"../../actions/actions\";\nimport { BindApi } from \"../../actions/BindApi\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState, Group } from \"../../store\";\nimport { getEndpoints } from \"../../utils\";\n\n\ninterface PropsFromStore {\n    devices: Map<string, Device>;\n    groups: Group[];\n}\ninterface BindProps {\n    device: Device;\n}\n\nexport interface NiceBindingRule {\n    id?: number;\n    isNew?: number;\n    source: {\n        ieee_address: string;\n        endpoint: Endpoint;\n    };\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n    clusters: Cluster[];\n}\nconst rule2key = (rule: NiceBindingRule): string => `${rule.source.endpoint}-${rule.isNew}${rule.source.ieee_address}-${rule.target.id}-${rule.target.ieee_address}-${rule.clusters.join('-')}`;\nconst convertBidningsIntoNiceStructure = (device: Device): NiceBindingRule[] => {\n    const bindings = {};\n    device.endpoints.forEach((description, endpoint) => {\n        description.bindings\n            .forEach(b => {\n                let targetId = b.target.id ?? `${b.target.ieee_address}-${b.target.endpoint}`;\n\n                targetId = `${targetId}-${endpoint}`;\n\n                if (bindings[targetId]) {\n                    bindings[targetId].clusters.push(b.cluster);\n                } else {\n                    bindings[targetId] = {\n                        source: {\n                            // eslint-disable-next-line @typescript-eslint/camelcase\n                            ieee_address: device.ieee_address,\n                            endpoint\n                        },\n                        target: b.target,\n                        clusters: [b.cluster]\n                    }\n                }\n            });\n    });\n    return Object.values(bindings);\n}\ntype BindState = {\n    bidingRules: NiceBindingRule[];\n}\nexport class Bind extends Component<BindProps & PropsFromStore & BindApi, BindState> {\n    state: BindState = {\n        bidingRules: []\n    }\n    static getDerivedStateFromProps(props: Readonly<BindProps & PropsFromStore>): Partial<BindState> {\n        const { device } = props;\n        const endpoints = getEndpoints(device);\n        const bidingRules = convertBidningsIntoNiceStructure(device);\n        bidingRules.push({ isNew: Date.now(), target: {}, source: { 'ieee_address': device.ieee_address, endpoint: endpoints[0] }, clusters: [] } as unknown as NiceBindingRule);\n        return { bidingRules };\n    }\n    renderHeader() {\n        const columns = ['#', 'Source EP', 'Destination', 'Destination EP', 'Clusters', 'Actions'];\n        return <thead><tr>{columns.map(column => <th key={column} scope=\"col\">{column}</th>)}</tr></thead>\n    }\n    renderBody() {\n        const { device, devices, groups, removeBind, addBind } = this.props;\n        const { bidingRules } = this.state;\n        return <tbody>{bidingRules\n            .map((rule, idx) => <BindRow\n                key={rule2key(rule)}\n                rule={rule}\n                groups={groups}\n                onUnBind={removeBind}\n                onBind={addBind}\n                device={device}\n                idx={idx}\n                devices={devices} />)\n        }</tbody>\n    }\n    render() {\n        return <div className=\"table-responsive\">\n            <table className=\"table\">\n                {this.renderHeader()}\n                {this.renderBody()}\n            </table>\n        </div>;\n    }\n}\n\nconst mappedProps = [\"devices\", \"groups\"];\nconst ConnectedBindPage = connect<BindProps, {}, GlobalState, PropsFromStore & BindApi>(mappedProps, actions)(Bind);\nexport default ConnectedBindPage\n","import React, { ChangeEvent, Component, InputHTMLAttributes } from \"react\";\nimport { Attribute, Cluster } from \"../../types\";\n\nimport Clusters from \"zigbee-herdsman/dist/zcl/definition/cluster\"\n\ninterface AttributePickerProps {\n    cluster: Cluster;\n    value: Attribute;\n    onChange: (attr: Attribute) => void;\n}\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class AttributePicker extends Component<AttributePickerProps & Omit<InputHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n\n    onChange = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange } = this.props;\n        const { value } = e.target;\n        onChange(value);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { cluster, onChange, ...rest } = this.props;\n        let attrs = [] as string[];\n        const clusterDefinition = Clusters[cluster];\n        if (clusterDefinition) {\n            attrs = Object.keys(clusterDefinition.attributes);\n        }\n        const options = attrs.map(attr => <option key={attr} value={attr}>{attr}</option>);\n        options.unshift(<option key=\"none\" hidden>Select attribute</option>)\n        return (<select disabled={attrs.length === 0} className=\"form-select\" onChange={this.onChange} {...rest}>\n            {options}\n        </select>)\n    }\n}","import React, { ChangeEvent, Component } from \"react\";\nimport { Device, Endpoint, Cluster, Attribute } from \"../../types\";\n\nimport EndpointPicker from \"../endpoint-picker\";\nimport ClusterPicker, { ClusterGroup, PickerType } from \"../cluster-picker\";\n\nimport { NiceReportingingRule } from \"./reporting\";\nimport { getEndpoints } from \"../../utils\";\nimport AttributePicker from \"../attribute-picker\";\nimport Clusters from \"zigbee-herdsman/dist/zcl/definition/cluster\"\nimport Button from \"../button\";\n\n\ninterface ReportingRowProps {\n  rule: NiceReportingingRule;\n  idx: number;\n  device: Device;\n  onApply(rule: NiceReportingingRule): void;\n}\ninterface ReportingRowState {\n  stateRule: NiceReportingingRule;\n}\n\nconst getClusters = (device: Device, endpoint: Endpoint): ClusterGroup[] => {\n  let possibleClusters = Object.keys(Clusters);\n  let availableClusters = [] as Cluster[];\n  const ep = device.endpoints.get(endpoint);\n  if (ep) {\n    availableClusters = availableClusters.concat(ep.clusters.output);\n    possibleClusters = possibleClusters.filter(cluster => !availableClusters.includes(cluster))\n  }\n  return [\n    {\n      name: 'Avaliable',\n      clusters: availableClusters\n    },\n    {\n      name: 'Possible',\n      clusters: possibleClusters\n    }\n  ]\n}\nconst requiredRuleFileds = ['maximum_report_interval', 'minimum_report_interval', 'reportable_change', 'endpoint', 'cluster', 'attribute'];\nconst isValidRule = (rule: NiceReportingingRule): boolean => {\n  return requiredRuleFileds.every(field => rule[field] !== undefined)\n}\nexport default class ReportingRow extends Component<ReportingRowProps, ReportingRowState> {\n\n  state: Readonly<ReportingRowState> = {\n    stateRule: {} as NiceReportingingRule\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static getDerivedStateFromProps(props: Readonly<ReportingRowProps>, state: ReportingRowState): Partial<ReportingRowState> {\n    const { rule } = props;\n    return {\n      stateRule: rule\n    };\n  }\n\n  setSourceEp = (sourceEp: Endpoint): void => {\n    const { stateRule } = this.state;\n    stateRule.endpoint = sourceEp;\n    this.setState({ stateRule });\n  }\n  setCluster = (cluster: Cluster): void => {\n    const { stateRule } = this.state;\n    stateRule.cluster = cluster;\n    this.setState({ stateRule });\n  }\n\n  setAttribute = (attr: Attribute): void => {\n    const { stateRule } = this.state;\n    stateRule.attribute = attr;\n    this.setState({ stateRule });\n  }\n\n  changeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n    const { stateRule } = this.state;\n    const { name, value } = event.target;\n    stateRule[name] = value;\n    this.setState({ stateRule });\n  }\n\n  applyRule = (): void => {\n    const { onApply } = this.props;\n    const { stateRule } = this.state;\n    onApply(stateRule);\n  }\n\n  disableRule = (): void => {\n    const { onApply } = this.props;\n    const { stateRule } = this.state;\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    onApply({ ...stateRule, maximum_report_interval: 0xFFFF });\n  }\n\n\n  render() {\n    const { rule, idx, device } = this.props;\n    const { stateRule } = this.state;\n    const sourceEndpoints = getEndpoints(device);\n\n    return (<tr>\n      <th scope=\"row\">{idx + 1}</th>\n      <td><EndpointPicker disabled={!rule.isNew} values={sourceEndpoints} value={stateRule.endpoint} onChange={this.setSourceEp} /></td>\n      <td><ClusterPicker disabled={!stateRule.endpoint} pickerType={PickerType.SINGLE} clusters={getClusters(device, stateRule.endpoint)} value={stateRule.cluster} onChange={this.setCluster} /></td>\n      <td><AttributePicker value={stateRule.attribute} cluster={stateRule.cluster} onChange={this.setAttribute} /></td>\n      <td><input onChange={this.changeHandler} value={stateRule.minimum_report_interval} required type=\"number\" name=\"minimum_report_interval\" className=\"form-control\" /></td>\n      <td><input onChange={this.changeHandler} value={stateRule.maximum_report_interval} required type=\"number\" name=\"maximum_report_interval\" className=\"form-control\" /></td>\n      <td><input placeholder=\"Enter 65535 to disable reporting\" onChange={this.changeHandler} value={stateRule.reportable_change} required type=\"number\" name=\"reportable_change\" className=\"form-control\" /></td>\n      <td>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <Button<void> disabled={!isValidRule(stateRule)} className=\"btn btn-primary\" onClick={this.applyRule}>Apply</Button>\n          {!stateRule.isNew ? <Button<void> promt className=\"btn btn-danger\" onClick={this.disableRule}>Disable</Button> : null}\n        </div>\n      </td>\n    </tr>);\n  }\n}","import React, { Component } from \"react\";\nimport { Device, Cluster, Endpoint, Attribute } from \"../../types\";\n\nimport actions, { ReportingApi } from \"../../actions/actions\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState, Group } from \"../../store\";\nimport ReportingRow from \"./reporting-row\";\n\n\ninterface PropsFromStore {\n    devices: Map<string, Device>;\n    groups: Group[];\n}\ninterface ReportingProps {\n    device: Device;\n}\n\nexport interface NiceReportingingRule {\n    id?: number;\n    isNew?: number;\n    endpoint: Endpoint;\n\n    cluster: Cluster;\n    attribute: Attribute;\n    minimum_report_interval: number;\n    maximum_report_interval: number;\n    reportable_change: number;\n}\nconst convertBidningsIntoNiceStructure = (device: Device): NiceReportingingRule[] => {\n    const reportings: NiceReportingingRule[] = [];\n    device.endpoints.forEach((description, endpoint) => {\n        description.configured_reportings\n            .forEach(reportingRule => {\n                reportings.push({\n                    ...reportingRule,\n                    endpoint\n                } as NiceReportingingRule)\n            });\n    });\n    return reportings;\n}\ntype ReportingState = {\n    reportingRules: NiceReportingingRule[];\n}\n\nconst rule2key = (rule: NiceReportingingRule): string => `${rule.isNew}${rule.endpoint}${rule.cluster}-${rule.attribute}`;\n\nexport class Reporting extends Component<ReportingProps & PropsFromStore & ReportingApi, ReportingState> {\n    state: ReportingState = {\n        reportingRules: []\n    }\n    static getDerivedStateFromProps(props: Readonly<ReportingProps & PropsFromStore>): Partial<ReportingState> {\n        const { device } = props;\n        // const endpoints = getEndpoints(device);\n        const reportingRules = convertBidningsIntoNiceStructure(device);\n\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        reportingRules.push({ isNew: Date.now(), reportable_change: 0, minimum_report_interval: 60, maximum_report_interval: 3600 } as NiceReportingingRule);\n        return {\n            reportingRules\n        };\n    }\n\n    onApply = (rule: NiceReportingingRule) => {\n        const { configureReport, device } = this.props;\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        const { cluster, endpoint, attribute, minimum_report_interval, maximum_report_interval, reportable_change } = rule;\n        configureReport(`${device.friendly_name}/${endpoint}`, {\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            cluster, attribute, minimum_report_interval, maximum_report_interval, reportable_change\n        });\n    }\n    render() {\n        const { device } = this.props;\n        const { reportingRules } = this.state;\n\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Endpoint</th>\n                            <th scope=\"col\">Cluster</th>\n                            <th scope=\"col\">Attribute</th>\n                            <th scope=\"col\">Min rep interval</th>\n                            <th scope=\"col\">Max rep interval</th>\n                            <th scope=\"col\">Min rep change</th>\n                            <th scope=\"col\">&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            reportingRules.map((rule, idx) =>\n                                <ReportingRow\n                                    key={rule2key(rule)}\n                                    idx={idx}\n                                    rule={rule}\n                                    device={device}\n                                    onApply={this.onApply}\n                                />)\n                        }\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"devices\", \"groups\"];\nconst ConnectedReportingPage = connect<ReportingProps, {}, GlobalState, PropsFromStore & ReportingApi>(mappedProps, actions)(Reporting);\nexport default ConnectedReportingPage\n","import React, { Component } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport actions from \"../../actions/actions\";\nimport { StateApi } from \"../../actions/StateApi\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n\n}\ninterface StatesProps {\n    device: Device;\n}\n\nclass States extends Component<StatesProps & PropsFromStore & StateApi, {}> {\n    setStateValue = (name: string, value: unknown): void => {\n        const { setStateValue, device } = this.props;\n        setStateValue(device.friendly_name, name, value);\n    };\n\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {};\n        return <pre>{JSON.stringify(deviceState, null, 4)}</pre>;\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\nconst ConnectedDeviceStates = connect<StatesProps, {}, GlobalState, StateApi>(mappedProps, actions)(States);\nexport default ConnectedDeviceStates;\n","\nimport { GenericExposedFeature, BinaryFeature, NumericFeature, EnumFeature, LightFeature, CompositeFeature, SwitchFeature, CoverFeature, LockFeature, ColorFeature, TextualFeature, ClimateFeature } from \"../../types\";\n\nexport function isBinaryFeature(feature: GenericExposedFeature | CompositeFeature): feature is BinaryFeature {\n  return feature.type === \"binary\";\n}\n\nexport function isNumericFeature(feature: GenericExposedFeature | CompositeFeature): feature is NumericFeature {\n  return feature.type === \"numeric\";\n}\nexport function isTextualFeature(feature: GenericExposedFeature | CompositeFeature): feature is TextualFeature {\n  return feature.type === \"text\";\n}\n\nexport function isEnumFeature(feature: GenericExposedFeature | CompositeFeature): feature is EnumFeature {\n  return feature.type === \"enum\";\n}\n\nexport function isLightFeature(feature: GenericExposedFeature | CompositeFeature): feature is LightFeature {\n  return feature.type === \"light\";\n}\nexport function isSwitchFeature(feature: GenericExposedFeature | CompositeFeature): feature is SwitchFeature {\n  return feature.type === \"switch\";\n}\n\nexport function isCoverFeature(feature: GenericExposedFeature | CompositeFeature): feature is CoverFeature {\n  return feature.type === \"cover\";\n}\n\nexport function isLockFeature(feature: GenericExposedFeature | CompositeFeature): feature is LockFeature {\n  return feature.type === \"lock\";\n}\n\nexport function isCompositeFeature(feature: GenericExposedFeature | CompositeFeature): feature is CompositeFeature {\n  return feature.type === \"composite\" && (feature.name !== \"color_xy\" && feature.name !== \"color_hs\");\n}\n\nexport function isColorFeature(feature: GenericExposedFeature | CompositeFeature): feature is ColorFeature {\n  return feature.type === \"composite\" && (feature.name == \"color_xy\" || feature.name == \"color_hs\");\n}\n\nexport function isClimateFeature(feature: GenericExposedFeature | CompositeFeature): feature is ClimateFeature {\n  return feature.type === \"climate\";\n}\n","import { JSONSchema7 } from \"json-schema\";\n\nexport type DeviceType = \"EndDevice\" | \"Router\" | \"Coordinator\";\n\n\ninterface OTAState {\n    state: \"available\" | \"updating\";\n    progress: number;\n    remaining: number;\n}\nexport type RGBColor = {\n    r: number;\n    g: number;\n    b: number;\n}\nexport type HueSaturationColor = {\n    hue: number;\n    saturation: number;\n}\n\nexport type XYColor = {\n    x: number;\n    y: number;\n}\nexport type AnyColor = RGBColor | XYColor | HueSaturationColor;\nexport interface DeviceState {\n    last_seen?: string | number;\n    elapsed?: number;\n    linkquality: number;\n    update?: OTAState;\n    [k: string]: string | number | boolean | OTAState | AnyColor | undefined;\n}\n\nexport type Cluster = string;\nexport type Attribute = string;\n\nexport type Endpoint = string | number;\n\n\n\n\nexport interface Meta {\n    revision: number;\n    transportrev: number;\n    product: number;\n    majorrel: number;\n    minorrel: number;\n    maintrel: number;\n}\n\nexport interface Coordinator {\n    type: string;\n    meta: Meta;\n}\n\nexport interface Network {\n    channel: number;\n    pan_id: number;\n    extended_pan_id: number[];\n}\n\nexport interface DeviceConfig {\n    [k: string]: object | string | number | boolean;\n}\nexport interface Z2MConfig {\n    homeassistant: boolean;\n    advanced: {\n        elapsed: boolean;\n        last_seen: 'disable' | 'ISO_8601' | 'ISO_8601_local' | 'epoch';\n        legacy_api: boolean;\n    };\n    devices: {\n        [key: string]: DeviceConfig;\n    };\n    device_options: DeviceConfig;\n    [k: string]: object | string | number | boolean;\n}\nexport interface BridgeConfig {\n    version: string;\n    commit: string;\n    coordinator: Coordinator;\n    network: Network;\n    log_level: string;\n    permit_join: boolean;\n\n}\n\nexport interface BridgeInfo {\n    config?: Z2MConfig;\n    config_schema: JSONSchema7;\n    permit_join: boolean;\n    commit?: string;\n    version?: string;\n    coordinator?: {\n        meta?: {\n            revision?: string;\n        };\n        type?: string;\n    };\n    device_options: object;\n    restart_required: boolean;\n}\n\nexport type PowerSource = \"Battery\" | \"Mains (single phase)\" | \"DC Source\";\n\nexport type GenericFeatureType = \"numeric\" | \"binary\" | \"enum\" | \"text\";\nexport type ComposeiteFeatureType = \"fan\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"composite\" | \"climate\";\nexport type AllPossibleFeatures = GenericFeatureType & ComposeiteFeatureType;\n\n\nexport enum FeatureAccessMode {\n    NONE,\n    ACCESS_STATE = 0b001,\n    ACCESS_WRITE = 0b010,\n    ACCESS_READ = 0b100,\n}\nexport interface GenericExposedFeature {\n    type: GenericFeatureType;\n    name: string;\n    unit?: \"string\";\n    access: FeatureAccessMode;\n    endpoint?: Endpoint;\n    property: string;\n    description?: string;\n}\n\nexport interface BinaryFeature extends GenericExposedFeature {\n    type: \"binary\";\n    value_on: unknown;\n    value_off: unknown;\n    value_toggle?: unknown;\n}\n\nexport interface CompositeFeature extends Omit<GenericExposedFeature, \"type\"> {\n    type: ComposeiteFeatureType;\n    features: (GenericExposedFeature | CompositeFeature)[];\n}\n\nexport type GenericOrCompositeFeature = GenericExposedFeature | CompositeFeature;\n\nexport interface NumericFeaturePreset {\n    name: string;\n    value: number;\n    description?: string;\n}\nexport interface NumericFeature extends GenericExposedFeature {\n    type: \"numeric\";\n    value_min?: number;\n    value_max?: number;\n    presets?: NumericFeaturePreset[];\n}\n\nexport interface TextualFeature extends GenericExposedFeature {\n    type: \"text\";\n}\n\nexport interface EnumFeature extends GenericExposedFeature {\n    type: \"enum\";\n    values: unknown[];\n}\n\nexport interface LightFeature extends CompositeFeature {\n    type: \"light\";\n}\n\nexport interface SwitchFeature extends CompositeFeature {\n    type: \"switch\";\n}\n\nexport interface CoverFeature extends CompositeFeature {\n    type: \"cover\";\n}\n\nexport interface LockFeature extends CompositeFeature {\n    type: \"lock\";\n}\nexport interface FanFeature extends CompositeFeature {\n    type: \"fan\";\n}\n\nexport interface ClimateFeature extends CompositeFeature {\n    type: \"climate\";\n}\n\nexport interface ColorFeature extends CompositeFeature {\n    type: \"composite\";\n    name: \"color_xy\" | \"color_hs\";\n    features: NumericFeature[];\n}\n\nexport interface DeviceDefinition {\n    description: string;\n    model: string;\n    supports: string;\n    vendor: string;\n    exposes: GenericExposedFeature[] | CompositeFeature[];\n    supports_ota: boolean;\n}\nexport interface ReportingConfig {\n    cluster: Cluster;\n    attribute: Attribute;\n    maximum_report_interval: number;\n    minimum_report_interval: number;\n    reportable_change: number;\n}\nexport interface EndpointDescription {\n    bindings: BindRule[];\n    configured_reportings: ReportingConfig[];\n    clusters: {\n        input: Cluster[];\n        output: Cluster[];\n    };\n}\n\nexport interface Device {\n    ieee_address: string;\n    type: DeviceType;\n    network_address: number;\n    model: string;\n    friendly_name: string;\n    power_source: PowerSource;\n    model_id: string;\n    interviewing: boolean;\n    interview_completed: boolean;\n    software_build_id: number;\n    supported: boolean;\n    definition?: DeviceDefinition;\n    date_code: string;\n    endpoints: Map<Endpoint, EndpointDescription>;\n}\n\nexport type ObjectType = \"device\" | \"group\";\nexport interface BindRule {\n    cluster: Cluster;\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n\n}\nexport type SortDirection = \"asc\" | \"desc\";\n\nexport interface TouchLinkDevice {\n    ieee_address: string;\n    channel: number;\n}\n","import React from \"react\";\n\nimport cx from \"classnames\";\ntype DisplayValueProps = {\n    name: string;\n    value: unknown;\n}\n\nconst booleansMap = {\n    contact: new Map<boolean, string | JSX.Element>([\n        [true, 'Closed'],\n        [false, 'Open'],\n    ]),\n\n    occupancy: new Map([\n        [true, 'Occupied'],\n        [false, 'Clear']\n    ]),\n\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    water_leak: new Map<boolean, string | JSX.Element>([\n        [true, <span className={cx(\"text-danger\", \"animation-blinking\")} key=\"Leaking\">Leaking</span>],\n        [false, 'Clear']\n    ]),\n\n    tamper: new Map<boolean, string | JSX.Element>([\n        [true, <span className={cx(\"text-danger\", \"animation-blinking\")} key=\"tampered\">Tampered</span>],\n        [false, 'Clear']\n    ]),\n\n    _default: new Map([\n        [true, 'true'],\n        [false, 'false']\n    ])\n};\n\nexport function DisplayValue(props: DisplayValueProps) {\n    const { value, name } = props;\n    switch (typeof value) {\n        case 'boolean':\n            const mapValue = booleansMap[name] || booleansMap._default;\n            return <>{mapValue.get(value)}</>;\n        case \"undefined\":\n            return <>N/A</>;\n        case \"object\":\n            return <>{value === null ? 'null' : JSON.stringify(value)}</>;\n        case \"string\":\n            return <>{value === \"\" ? <small className=\"text-muted\">empty string</small> : value}</>;\n        default:\n            return <>{JSON.stringify(value)}</>;\n    }\n}\n","import React, { ChangeEvent, Fragment, FunctionComponent, useState } from \"react\";\nimport { randomString } from \"../../utils\";\nimport Button from \"../button\";\nimport { DisplayValue } from \"../display-value/DisplayValue\";\n\n\ntype ToggleProps = {\n    onChange(value: unknown): void;\n    value: unknown;\n    name: string;\n    valueOn: unknown;\n    valueOff: unknown;\n    label?: string;\n    minimal?: boolean;\n}\ntype ControlButtonProps = {\n    value: unknown;\n    onClick(value: unknown): void;\n    name: string;\n}\nconst ControlButton: FunctionComponent<ControlButtonProps> = (props) => {\n    const { value, onClick, name } = props;\n    return <Button<unknown> className=\"btn btn-link ps-0\" item={value} onClick={onClick}>\n        <DisplayValue value={value} name={name} />\n    </Button>\n}\n\nconst Toggle: FunctionComponent<ToggleProps> = (props) => {\n    const { onChange, value, label, valueOn, valueOff, minimal, name } = props;\n    const [id, setId] = useState<string>(randomString(5));\n    const onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.checked ? valueOn : valueOff);\n    const valueExists = value !== undefined && value !== null;\n    const showOnOffButtons = !minimal || (minimal && !valueExists);\n    return (\n        <Fragment>\n\n            {showOnOffButtons && <ControlButton value={valueOff} name={name} onClick={onChange} />}\n            {valueExists ? (\n                <div className=\"form-check form-switch d-inline-block\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id={id} checked={value === valueOn} onChange={onCheckboxChange} />\n                    {label ? <label className=\"form-check-label\" htmlFor={id}>{label}</label> : null}\n                </div>\n            ) : <i className=\"fa fa-question\" title=\"Current value unknown\"></i>}\n            {showOnOffButtons && <ControlButton value={valueOn} name={name} onClick={onChange} />}\n\n        </Fragment>\n    )\n}\n\nexport default Toggle;\n","\nimport React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { DeviceState, Device, Endpoint, GenericExposedFeature, CompositeFeature } from \"../../types\";\nimport { DisplayValue } from \"../display-value/DisplayValue\";\n\nimport { FetatureWrapperProps } from \"./composite/FeatureWrapper\";\n\nexport interface BaseFeatureProps<T> extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n    feature: T;\n    deviceState: DeviceState;\n    device: Device;\n    onChange(endpoint: Endpoint, value: object): void;\n    onRead(endpoint: Endpoint, value: object): void;\n    // featureWrapperClass: React.ComponentType<FetatureWrapperProps>;\n    featureWrapperClass: FunctionComponent<PropsWithChildren<FetatureWrapperProps>>;\n    minimal?: boolean;\n\n}\n\n\nexport const BaseViewer: FunctionComponent<BaseFeatureProps<GenericExposedFeature>> = (props) => {\n    const { feature: { property, unit, name}, deviceState } = props;\n    return <div><strong><DisplayValue value={deviceState[property]} name={name} /></strong>{unit ? <small className=\"text-muted ms-1\">{unit}</small> : null}</div>\n}\n\nexport const NoAccessError: FunctionComponent<BaseFeatureProps<GenericExposedFeature | CompositeFeature>> = ({ feature: { access } }) => <div className=\"alert alert-warning p-0\" role=\"alert\">Unknown acces {JSON.stringify(access, null, 4)}</div>;\n","import React, { FunctionComponent } from \"react\";\n\nimport { BinaryFeature, Endpoint, FeatureAccessMode } from \"../../../types\";\nimport Toggle from \"../../toggle\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype BinaryProps = BaseFeatureProps<BinaryFeature>;\n\nconst Binary: FunctionComponent<BinaryProps> = (props) => {\n    const { feature: { access, endpoint, name, property, value_off: valueOff, value_on: valueOn }, deviceState, onChange, minimal } = props;\n    if (access & FeatureAccessMode.ACCESS_WRITE) {\n        return <Toggle\n            onChange={(value) => onChange(endpoint as Endpoint, { [property]: value })}\n            value={deviceState[property]}\n            valueOn={valueOn}\n            valueOff={valueOff}\n            minimal={minimal}\n            name={name}\n        />\n    } else if (access & FeatureAccessMode.ACCESS_STATE) {\n        return <BaseViewer {...props} />\n    } else {\n        return <NoAccessError {...props} />\n    }\n}\nexport default Binary;\n","import React, { FunctionComponent } from \"react\";\nimport { ClimateFeature } from \"../../../types\";\n\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\n\ntype ClimateProps = BaseFeatureProps<ClimateFeature>\n\nconst Climate: FunctionComponent<ClimateProps> = (props) => <Composite type=\"climate\" {...props} />;\n\nexport default Climate;\n\n\n","import React, { FunctionComponent } from \"react\";\nimport { CoverFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\nconst stepsConfiguration = {\n  position: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, name: item + '' })),\n  tilt: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, name: item + '' }))\n};\n\ntype CoverProps = BaseFeatureProps<CoverFeature>\n\nconst Cover: FunctionComponent<CoverProps> = (props) => <Composite type=\"cover\" {...props} stepsConfiguration={stepsConfiguration} />;\n\nexport default Cover;\n\n\n","import React, { FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport * as convertColors from \"color-convert\";\nimport { AnyColor, XYColor, HueSaturationColor } from \"../../types\";\nimport Button from \"../button\";\n\n\ntype Payload = AnyColor;\n\nexport type ColorFormat = \"color_xy\" | \"color_hs\";\ntype ColorProps = {\n    value: Payload;\n    steps?: string[];\n    format: ColorFormat;\n    onChange(value: object): void;\n    minimal?: boolean;\n}\n\nexport const toRGB = (source: AnyColor, sourceFormat: ColorFormat): string => {\n    switch (sourceFormat) {\n        case \"color_xy\":\n            {\n                const { x, y } = source as XYColor;\n                const z = 1.0 - x - y;\n                const Y = 1;\n                const X = (Y / y) * x;\n                const Z = (Y / y) * z;\n                return '#' + convertColors.xyz.hex([X * 100.0, Y * 100.0, Z * 100.0]);\n            }\n\n        case \"color_hs\":\n            {\n                const { hue, saturation } = source as HueSaturationColor;\n                return '#' + convertColors.hsv.hex([hue, saturation, 100]);\n            }\n        default:\n            return '#FFFFFF';\n    }\n}\n\nconst rgbToTargetFormat = (source: string, targetFormat: ColorFormat): object => {\n    switch (targetFormat) {\n        case \"color_hs\":\n            const [hue, saturation, v] = convertColors.hex.hsv(source);\n            return { hue, saturation };\n\n\n        case \"color_xy\":\n            const [X, Y, Z] = convertColors.hex.xyz(source);\n            const x = X / (X + Y + Z);\n            const y = Y / (X + Y + Z);\n            return { x, y };\n\n        default:\n            return { hex: source };\n    }\n\n}\nconst pridePallete = ['#FF0018', '#FFA52C', '#FFFF41', '#008018', '#0000F9', '#86007D'];\nconst ColorEditor: FunctionComponent<ColorProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange' | 'value'>> = (props) => {\n\n    const { onChange, value = {} as AnyColor, format, steps = pridePallete, minimal, ...rest } = props;\n    const [currentColor, setCurrentColor] = useState<string>(toRGB(value, format));\n    useEffect(() => {\n        setCurrentColor(toRGB(value, format))\n    }, [value, format]);\n\n    return <>\n        {!minimal && <div className=\"btn-group me-2\">\n            {\n                steps.map(step => <Button<string>\n                    className=\"btn\"\n                    style={{ backgroundColor: step }}\n                    key={step}\n                    item={step}\n                    title={step}\n                    onClick={(item) => onChange(rgbToTargetFormat(item, format))}>&nbsp;&nbsp;&nbsp;</Button>)\n            }\n        </div>}\n        <input\n            type=\"color\"\n            className=\"form-control form-control-color\"\n            value={currentColor}\n            style={{minWidth: 40}}\n            onChange={e => {\n                onChange(rgbToTargetFormat(e.target.value, format))\n            }}\n            {...rest}\n        />\n    </>\n\n}\n\nexport default ColorEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { AnyColor, ColorFeature, Endpoint } from \"../../../../types\";\nimport ColorEditor from \"../../../color-editor/color-editor\";\n\nimport { BaseFeatureProps } from \"../../base\";\n\ntype ColorProps = BaseFeatureProps<ColorFeature>;\n\nconst Light: FunctionComponent<ColorProps> = (props) => {\n\n    const { deviceState, feature, onChange, minimal } = props;\n    const value = {};\n    for (const innerFeature of feature.features) {\n        value[innerFeature.name] = deviceState[feature.property]?.[innerFeature.property] ?? 0;\n    }\n    return <ColorEditor\n        onChange={(color) => onChange(feature.endpoint as Endpoint, { color })}\n        value={value as AnyColor}\n        format={feature.name}\n        minimal={minimal} />\n}\nexport default Light;\n","import React, { FunctionComponent } from \"react\";\nimport Button from \"../button\";\nimport cx from \"classnames\";\ntype Primitive = number | string;\n\nexport type ValueWithLabel = {\n    value: number;\n    name: string;\n    description?: string;\n};\n\nexport type ValueWithLabelOrPrimitive = ValueWithLabel | Primitive;\n\ntype EnumProps = {\n    value?: ValueWithLabelOrPrimitive;\n    onChange(value: unknown): void;\n    values: ValueWithLabelOrPrimitive[];\n    minimal?: boolean;\n}\n\n\nfunction isPrimitive(step: ValueWithLabelOrPrimitive): step is Primitive {\n    return step === null || [\"number\", \"string\", \"undefined\"].includes(typeof step);\n}\n\nconst EnumEditor: FunctionComponent<EnumProps> = (props) => {\n    const { onChange, values, value, minimal } = props;\n\n    if (minimal) {\n        const onSelectChange = (e) => {\n            const selectedValue = values.find(v => isPrimitive(v) ? v == e.target.value : v.value == e.target.value);\n            onChange(selectedValue);\n        }\n        return <select className=\"form-control\" onChange={onSelectChange}\n            value={isPrimitive(value as ValueWithLabelOrPrimitive) ? value as string : (value as ValueWithLabel).value}>\n            <option key=\"hidded\" hidden>----</option>\n            {values.map(v => <option\n                key={isPrimitive(v) ? v : v.name}\n                value={isPrimitive(v) ? v : v.value}>{isPrimitive(v) ? v : v.name}\n            </option>)}\n        </select>\n\n    }\n    return <div className=\"btn-group me-2\">\n        {\n            values.map(v => <Button<ValueWithLabelOrPrimitive>\n                className={cx(\"btn btn-outline-secondary\", { active: isPrimitive(v) ? v === value : v.value == (isPrimitive(value as ValueWithLabelOrPrimitive) ? value : (value as ValueWithLabel).value) })}\n                onClick={item => onChange(item)}\n                key={isPrimitive(v) ? v : v.name}\n                item={isPrimitive(v) ? v : v.value}\n                title={isPrimitive(v) ? v as string : v.description}\n            >{isPrimitive(v) ? v : v.name}</Button>)\n        }\n    </div>;\n}\nexport default EnumEditor;\n","\n\nimport React, { FunctionComponent } from \"react\";\n\nimport { Endpoint, EnumFeature, FeatureAccessMode } from \"../../../types\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype EnumProps = BaseFeatureProps<EnumFeature>\n\nconst Enum: FunctionComponent<EnumProps> = (props) => {\n  const { onChange, feature: { access, name, values, endpoint, property }, deviceState, minimal } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <EnumEditor\n      onChange={(value) => onChange(endpoint as Endpoint, { [name]: value })}\n      values={values as unknown as ValueWithLabelOrPrimitive[]}\n        value={deviceState[property] as ValueWithLabelOrPrimitive}\n        minimal={minimal}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Enum;\n","import React, { FunctionComponent } from \"react\";\nimport { LightFeature } from \"../../../types\";\nimport { scale } from \"../../../utils\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LightProps = BaseFeatureProps<LightFeature>\nconst stepsConfiguration = {\n  brightness: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: scale(item, [0, 100], [0, 255]), name: item + '%' })),\n  'color_temp': [1000, 2000, 3000, 4000, 5000, 6500].map<ValueWithLabelOrPrimitive>(kelvin => ({ value: 1000000.0 / kelvin, name: kelvin + 'K' }))\n};\n\nconst Light: FunctionComponent<LightProps> = (props) => <Composite type=\"light\" {...props} stepsConfiguration={stepsConfiguration} />;\nexport default Light;\n","import React, { FunctionComponent } from \"react\";\nimport { LockFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LockProps = BaseFeatureProps<LockFeature>\n\nconst Lock: FunctionComponent<LockProps> = (props) => <Composite type=\"lock\" {...props} />\nexport default Lock;","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport { randomString } from \"../../utils\";\nimport cx from \"classnames\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../enum-editor/enum-editor\";\n\n\n\ntype RangeProps = {\n    value: number;\n    unit?: string;\n    onChange(value: object | number): void;\n    steps?: ValueWithLabelOrPrimitive[];\n    minimal?: boolean;\n}\n\nconst RangeEditor: FunctionComponent<RangeProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n    const { onChange, value, min, max, unit, steps, minimal, ...rest } = props;\n    const [id, setId] = useState<string>(randomString(5));\n    const [currentValue, setCurrentValue] = useState<number>(value)\n\n    useEffect(() => {\n        setCurrentValue(value)\n    }, [value]);\n\n    const showRange = min !== undefined && max !== undefined;\n    return <div className=\"input-group align-items-center\">\n        {!minimal && steps ? <EnumEditor values={steps} onChange={onChange} value={currentValue} /> : null}\n        {showRange ? <input\n            id={id}\n            min={min}\n            max={max}\n            type=\"range\"\n            className=\"form-range form-control border-0\"\n            value={currentValue}\n            onChange={e => setCurrentValue(e.target.valueAsNumber)}\n            onMouseUp={(() => onChange(currentValue))}\n            {...rest}\n        /> : null}\n        {(!minimal || !showRange) && <input\n            type=\"number\"\n            className={cx(\"form-control\", { 'ms-1': showRange })}\n            value={currentValue}\n            onChange={e => setCurrentValue(e.target.valueAsNumber)}\n            onBlur={() => onChange(currentValue)}\n            {...rest}\n            style={showRange ? { 'maxWidth': '100px' } : {}}\n        />}\n        {(!minimal && unit) ? <span className=\"input-group-text\" style={{ 'minWidth': '66px' }}>{unit}</span> : null}\n    </div>\n}\n\nexport default RangeEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { Endpoint, FeatureAccessMode, NumericFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport RangeEditor from \"../../range-editor/range-editor\";\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ninterface NumericProps extends BaseFeatureProps<NumericFeature> {\n    steps?: ValueWithLabelOrPrimitive[];\n}\n\nconst Numeric: FunctionComponent<NumericProps> = (props) => {\n    const { feature: { presets, access, endpoint, name, property, unit, value_max: valueMax, value_min: valueMin }, deviceState, steps, onChange, minimal } = props;\n    if (access & FeatureAccessMode.ACCESS_WRITE) {\n        return <RangeEditor\n            onChange={(value) => onChange(endpoint as Endpoint, { [name]: value })}\n            value={deviceState[property] as number ?? 0}\n            min={valueMin}\n            max={valueMax}\n            steps={presets && presets.length ? presets as ValueWithLabelOrPrimitive[] : steps}\n            unit={unit}\n            minimal={minimal}\n        />\n    } else if (access & FeatureAccessMode.ACCESS_STATE) {\n        return <BaseViewer {...props} />\n    } else {\n        return <NoAccessError {...props} />\n    }\n}\n\nexport default Numeric;\n","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\n\ntype TextualProps = {\n  value: string;\n  unit?: string;\n  onChange(value: string): void;\n}\n\nconst TextualEditor: FunctionComponent<TextualProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n  const { onChange, value, unit, ...rest } = props;\n  const [currentValue, setCurrentValue] = useState<string>(value)\n\n  useEffect(() => {\n    setCurrentValue(value)\n  }, [value]);\n\n  return <Fragment>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.value)}\n      onBlur={() => onChange(currentValue)}\n      {...rest}\n    />\n    {unit ? <span className=\"input-group-text\" style={{'minWidth': '66px'}}>{unit}</span> : null}\n  </Fragment>\n}\n\nexport default TextualEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { Endpoint, FeatureAccessMode, TextualFeature } from \"../../../types\";\nimport TextualEditor from \"../../textual-editor/textual-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype TextualProps = BaseFeatureProps<TextualFeature>;\n\nconst Textual: FunctionComponent<TextualProps> = (props) => {\n  const { feature: { access, endpoint, name, property }, deviceState, onChange } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <TextualEditor\n      onChange={(value) => onChange(endpoint as Endpoint, { [name]: value })}\n      value={deviceState[property] as string ?? \"\"}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Textual;","import React, { FunctionComponent } from \"react\";\nimport { SwitchFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype SwitchProps = BaseFeatureProps<SwitchFeature>\n\nconst Switch: FunctionComponent<SwitchProps> = (props) => <Composite type=\"switch\" {...props} />;\n\nexport default Switch;","import React, { FunctionComponent, PropsWithChildren } from \"react\";\n\nimport { CompositeFeature, Device, DeviceState, Endpoint, GenericExposedFeature } from \"../../../types\";\nimport { isBinaryFeature, isNumericFeature, isTextualFeature, isEnumFeature, isLightFeature, isSwitchFeature, isCoverFeature, isLockFeature, isColorFeature, isClimateFeature, isCompositeFeature } from \"../../device-page/type-guards\";\nimport Binary from \"../binary/binary\";\nimport Climate from \"../climate/climate\";\nimport Cover from \"../cover/cover\";\nimport Color from \"../composite/color/color\";\nimport Enum from \"../enum/enum\";\nimport Light from \"../light/light\";\nimport Lock from \"../lock/lock\";\nimport Numeric from \"../numeric/numeric\";\nimport Textual from \"../textual/textual\";\nimport Composite from \"./composite\";\nimport Switch from \"../switch/switch\";\nimport { FetatureWrapperProps } from \"./FeatureWrapper\";\n\n\ninterface FeatureProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n    feature: CompositeFeature | GenericExposedFeature;\n    deviceState: DeviceState;\n    device: Device;\n    stepsConfiguration?: object;\n    onChange(endpoint: Endpoint, value: object): void;\n    onRead(endpoint: Endpoint, value: object): void;\n    featureWrapperClass: FunctionComponent<PropsWithChildren<FetatureWrapperProps>>;\n    minimal?: boolean;\n}\n\nexport const Feature = (props: FeatureProps) => {\n\n    const { feature, device, deviceState, stepsConfiguration, onRead, onChange, featureWrapperClass: FeatureWrapper, minimal } = props;\n\n    const genericParams = { key: JSON.stringify(feature), device, deviceState, onChange, onRead, featureWrapperClass: FeatureWrapper, minimal };\n    const wrapperParams = { key: JSON.stringify(feature), feature, onRead, deviceState };\n\n    if (isBinaryFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams} >\n            <Binary feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isNumericFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Numeric feature={feature} {...genericParams}\n                steps={stepsConfiguration?.[feature.name]}\n            />\n        </FeatureWrapper>\n    } else if (isTextualFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Textual feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isEnumFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Enum feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isLightFeature(feature)) {\n        return <Light feature={feature} {...genericParams} />\n    } else if (isSwitchFeature(feature)) {\n        return <Switch feature={feature} {...genericParams} />\n    } else if (isCoverFeature(feature)) {\n        return <Cover feature={feature} {...genericParams} />\n    } else if (isLockFeature(feature)) {\n        return <Lock feature={feature} {...genericParams} />\n    } else if (isColorFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Color feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isClimateFeature(feature)) {\n        return <Climate feature={feature} {...genericParams} />\n    } else if (isCompositeFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <div className=\"row\" >\n                <Composite className=\"row\" type=\"composite\" feature={feature} {...genericParams} />\n            </div>\n        </FeatureWrapper>\n    }\n    return (<FeatureWrapper {...wrapperParams}>\n        <pre>{JSON.stringify(feature, null, 4)}</pre>\n    </FeatureWrapper>);\n}\n","import React, { Component } from \"react\";\nimport { CompositeFeature, Endpoint } from \"../../../types\";\nimport { isCompositeFeature } from \"../../device-page/type-guards\";\nimport { BaseFeatureProps } from \"../base\";\nimport Button from \"../../button\";\nimport groupBy from \"lodash/groupBy\";\nimport { Feature } from \"./Feature\";\n\n\ntype CompositeType = \"composite\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"fan\" | \"climate\";\n\ninterface CompositeProps extends BaseFeatureProps<CompositeFeature> {\n    type: CompositeType;\n    stepsConfiguration?: object;\n    minimal?: boolean;\n}\n\ninterface CompositeState {\n    [key: string]: unknown;\n}\n\n\n\nexport default class Composite extends Component<CompositeProps, CompositeState> {\n    state: Readonly<CompositeState> = {}\n    onChange = (endpoint: Endpoint, value: object) => {\n        const { onChange, feature } = this.props;\n        if (isCompositeFeature(feature)) {\n            this.setState(value)\n        } else {\n            onChange(endpoint, value);\n        }\n    }\n    onApplyClick = () => {\n        const { onChange, feature: { endpoint, property } } = this.props;\n        onChange(endpoint as Endpoint, property ? { [property]: this.state } : this.state);\n    }\n\n    onRead = (endpoint: Endpoint, property: object) => {\n        const { onRead, feature } = this.props;\n        if (isCompositeFeature(feature)) {\n            onRead(endpoint, { [feature.property]: property })\n        } else {\n            onRead(endpoint, property);\n        }\n    }\n    render() {\n        const MAGIC_NO_ENDPOINT = 'MAGIC_NO_ENDPOINT';\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { feature, device, deviceState, onRead: _onRead, onChange: _onChange, featureWrapperClass, minimal } = this.props;\n        const { features } = feature;\n        const groupedFeatures = groupBy(features, f => f.endpoint ?? MAGIC_NO_ENDPOINT);\n        const result = [] as JSX.Element[];\n        if (groupedFeatures[MAGIC_NO_ENDPOINT]) {\n            result.push(...groupedFeatures[MAGIC_NO_ENDPOINT].map(f => <Feature\n                key={f.name + f.endpoint}\n                feature={f}\n                device={device}\n                deviceState={deviceState}\n                onChange={this.onChange}\n                onRead={this.onRead}\n                featureWrapperClass={featureWrapperClass}\n                minimal={minimal}\n            />));\n            delete groupedFeatures[MAGIC_NO_ENDPOINT];\n        }\n        for (const epName in groupedFeatures) {\n            const featuresGroup = groupedFeatures[epName];\n            result.push(<div key={epName}>Endpoint: {epName}<div className=\"ps-4\">{...featuresGroup.map(f => <Feature\n                key={f.name + f.endpoint}\n                feature={f}\n                device={device}\n                deviceState={deviceState}\n                onChange={this.onChange}\n                onRead={this.onRead}\n                featureWrapperClass={featureWrapperClass}\n                minimal={minimal}\n            />)}</div></div>);\n        }\n        if (isCompositeFeature(feature)) {\n            result.push(<div key={feature.name}><Button className=\"btn btn-primary float-right\" onClick={this.onApplyClick}>Apply</Button></div>)\n        }\n        return result;\n\n    }\n}\n","import React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { CompositeFeature, GenericExposedFeature, Endpoint, FeatureAccessMode, DeviceState } from \"../../../types\";\nimport Button from \"../../button\";\n\n\nexport type FetatureWrapperProps = {\n    feature: CompositeFeature | GenericExposedFeature;\n    deviceState?: DeviceState;\n    onRead(endpoint: Endpoint, property: object): void;\n};\nexport const FeatureWrapper: FunctionComponent<PropsWithChildren<FetatureWrapperProps>> = (props) => {\n    const { children, feature, onRead } = props;\n    const isColor = feature.name?.startsWith(\"color_\"); //hardcode for color\n    const isReadable = (feature.access & FeatureAccessMode.ACCESS_READ) || isColor;\n    return <div className=\"row border-bottom pt-1\" >\n        <div className=\"col-12 col-md-3\">\n            <label className=\"col-form-label w-100\">\n                <div className=\"d-flex justify-content-between\">\n                    <strong title={JSON.stringify(feature)}>{feature.name}</strong>\n                    {isReadable ? (\n                        <Button<CompositeFeature | GenericExposedFeature> item={feature} onClick={(item) => {\n                            onRead(feature.endpoint as Endpoint, { [item.property]: \"\" })\n                        }} className=\"btn btn-primary btn-sm\"><i className=\"fa fa-sync\"></i></Button>\n                    ) : null}\n                </div>\n                {feature.description ? <small className=\"d-block text-muted\">{feature.description}</small> : null}\n            </label>\n        </div>\n        <div className=\"col-12 col-md-9 d-flex align-items-center\">\n            {children}\n        </div>\n    </div>\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { CompositeFeature, Device, DeviceState } from \"../../types\";\nimport actions from \"../../actions/actions\";\nimport { StateApi } from \"../../actions/StateApi\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\nimport Composite from \"../features/composite/composite\";\nimport { FeatureWrapper } from \"../features/composite/FeatureWrapper\";\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\ninterface ExposesProps {\n    device: Device;\n}\nclass Exposes extends Component<ExposesProps & PropsFromStore & StateApi, {}> {\n    render() {\n        const { device, deviceStates, setDeviceState, getDeviceState } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {} as DeviceState;\n        if (device.definition?.exposes) {\n            return <Composite feature={{ features: device.definition.exposes } as CompositeFeature} type=\"composite\" device={device} deviceState={deviceState}\n                onChange={(endpoint, value) => {\n                    setDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                }}\n                onRead={(endpoint, value) => {\n                    getDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                }}\n                featureWrapperClass={FeatureWrapper}\n            />\n        } else {\n            return \"Device doesn't expose anything\"\n        }\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceExposes = connect<ExposesProps, {}, GlobalState, StateApi>(mappedProps, actions)(Exposes);\nexport default ConnectedDeviceExposes;\n","import React, { Component, FunctionComponent } from \"react\";\nimport { Device } from \"../../types\";\nimport treeStyle from \"./tree.css\";\n\ninterface ClustersProps {\n    device: Device;\n}\ntype ClustersComp = {\n    label: string;\n    clusters: string[];\n}\nconst ClustersComp: FunctionComponent<ClustersComp> = (props) => {\n    const { label, clusters } = props;\n    if (clusters.length) {\n        return (<li>\n            <span>{label}</span>\n            <ul>{clusters.map(cluster => <li key={cluster}><span>{cluster}</span></li>)}</ul>\n        </li>)\n    } else {\n        return null;\n    }\n\n}\nexport default class Clusters extends Component<ClustersProps, {}> {\n    render() {\n        const { device } = this.props;\n        return <dl className={`${treeStyle.tree} row`}>\n            <ul>\n                <li>\n                    <span>{device.ieee_address}</span>\n                    <ul>\n                        {Array.from(device.endpoints.entries()).map(([epName, epData]) => {\n                            return (\n                                <li key={epName}>\n                                    <span>Endpoint <strong>{epName}</strong></span>\n                                    <ul>\n                                        <ClustersComp label=\"Output clusters\" clusters={epData.clusters.output} />\n                                        <ClustersComp label=\"Input clusters\" clusters={epData.clusters.input} />\n                                    </ul>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </li>\n            </ul>\n        </dl>\n\n    }\n}\n\n","/* eslint-disable react/display-name */\nimport React, { Component } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions from \"../../actions/actions\";\nimport { DeviceApi } from \"../../actions/DeviceApi\";\nimport Form from '@rjsf/bootstrap-4';\nimport { JSONSchema7 } from \"json-schema\"\ntype DeviceSettingsProps = {\n    device: Device;\n}\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\nconst uiSchema = {\n    \"ui:order\": [\"friendly_name\", \"retain\", \"retention\", \"qos\", \"filtered_attributes\", \"*\"]\n};\nexport class DeviceSettings extends Component<DeviceSettingsProps & GlobalState & PropsFromStore & DeviceApi, {}> {\n    updateConfig = ({ formData }): void => {\n        const { setDeviceOptions, device } = this.props;\n        setDeviceOptions(device.ieee_address, formData);\n    }\n    render() {\n        const { bridgeInfo: { config_schema: configSchema, config }, device } = this.props;\n        const deviceConfig = { ...config?.device_options, ...config?.devices[device.ieee_address] };\n\n        return <Form schema={configSchema.definitions?.device as JSONSchema7}\n            formData={deviceConfig}\n            onSubmit={this.updateConfig}\n            uiSchema={uiSchema}\n        />;\n\n    }\n}\n\nconst mappedProps = [\"deviceStates\", \"bridgeInfo\"];\n\nconst ConnectedDeviceSettingsPage = connect<DeviceSettingsProps, {}, GlobalState, PropsFromStore & DeviceApi>(mappedProps, actions)(DeviceSettings);\nexport default ConnectedDeviceSettingsPage;\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport DeviceInfo from \"./info\";\nimport Bind from \"./bind\";\nimport Reporting from \"./reporting\";\nimport States from \"./states\";\nimport ConnectedDeviceExposes from \"./exposes\";\nimport Clusters from \"./clusters\";\nimport DeviceSettings from \"./settings\";\nimport styles from \"./style.css\";\nimport { Device } from \"../../types\";\n\n\ntype UrlParams = {\n    dev: string;\n    tab?: TabName;\n};\ntype DevicePageProps = RouteComponentProps<UrlParams>;\n\n\ntype TabName = \"info\" | \"bind\" | \"state\" | \"exposes\" | \"clusters\" | \"reporting\" | \"settings\";\nconst getDeviceLinks = (dev: string) => ([\n    {\n        title: 'About',\n        url: `/device/${dev}/info`\n    },\n    {\n        title: 'Exposes',\n        url: `/device/${dev}/exposes`\n    },\n    {\n        title: 'Bind',\n        url: `/device/${dev}/bind`\n    },\n    {\n        title: 'Reporting',\n        url: `/device/${dev}/reporting`\n    },\n    {\n        title: 'State',\n        url: `/device/${dev}/state`\n    },\n    {\n        title: 'Settings',\n        url: `/device/${dev}/settings`\n    },\n    {\n        title: 'Clusters',\n        url: `/device/${dev}/clusters`\n    }\n]);\nexport class DevicePage extends Component<DevicePageProps & GlobalState, {}> {\n    renderContent() {\n        const { match, devices } = this.props;\n        const { tab, dev } = match.params;\n        const device = devices.get(dev) as Device;\n\n        switch (tab) {\n            case \"info\":\n                return <DeviceInfo device={device} />;\n            case \"bind\":\n                return <Bind device={device} />;\n            case \"state\":\n                return <States device={device} />;\n            case \"exposes\":\n                return <ConnectedDeviceExposes device={device} />;\n            case \"clusters\":\n                return <Clusters device={device} />\n            case \"reporting\":\n                return <Reporting device={device} />\n            case \"settings\":\n                return <DeviceSettings device={device} />\n            default:\n                return <Redirect to={`/device/${dev}/info`} />;\n        }\n\n    }\n    render() {\n        const { devices, match } = this.props;\n        const { dev } = match.params;\n        const device = devices.get(dev);\n        if (!device) {\n            return <div className=\"h-100 d-flex justify-content-center align-items-center\">Unknown device</div>\n        }\n        const links = getDeviceLinks(dev);\n\n        return (<div className=\"\">\n            <h3>{device.friendly_name}</h3>\n            <ul className=\"nav nav-tabs\">\n                {links.map(link => <li key={link.title} className=\"nav-item\">\n                    <NavLink activeClassName=\"active\" className={`nav-link ${styles['small-nav']}`} to={link.url}>{link.title}</NavLink>\n                </li>)}\n            </ul>\n            <div className=\"tab-content\">\n                <div className=\"tab-pane fade show active container\">\n                    {this.renderContent()}\n                </div>\n            </div>\n        </div>);\n\n    }\n}\nconst devicePageWithRouter = withRouter(DevicePage);\nconst mappedProps = [\"devices\"];\nconst ConnectedDevicePage = connect<{}, {}, GlobalState, {}>(mappedProps, actions)(devicePageWithRouter);\nexport default ConnectedDevicePage;\n","import React, { Component} from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\n\nimport { GlobalState } from \"../../store\";\nimport Button from \"../button\";\nimport { TouchLinkDevice } from \"../../types\";\nimport { genDeviceDetailsLink } from \"../../utils\";\nimport cx from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { TouchlinkApi } from \"../../actions/TouchlinkApi\";\n\n\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class TouchlinkPage extends Component<TouchlinkApi & GlobalState, {}> {\n    onIdentifyClick = (device: TouchLinkDevice): void => {\n        const { touchlinkIdentify } = this.props;\n        touchlinkIdentify(device);\n    }\n\n    onResetClick = (device: TouchLinkDevice): void => {\n        const { touchlinkReset } = this.props;\n        touchlinkReset(device);\n    }\n\n    renderTouchlinkDevices() {\n        const { touchlinkDevices, devices, touchlinkIdentifyInProgress, touchlinkResetInProgress } = this.props;\n        const touchlinkInProgress = touchlinkIdentifyInProgress || touchlinkResetInProgress;\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table align-middle\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">ieee_address</th>\n                            <th scope=\"col\">friendly_name</th>\n                            <th scope=\"col\">channel</th>\n                            <th scope=\"col\">&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {touchlinkDevices.map((touchlinkDevice, idx) => (\n                            <tr key={touchlinkDevice.ieee_address}>\n                                <td>{idx + 1}</td>\n                                <td>{\n                                    devices.has(touchlinkDevice.ieee_address) ?\n                                        (<Link to={genDeviceDetailsLink(touchlinkDevice.ieee_address)}>{touchlinkDevice.ieee_address}</Link>) : touchlinkDevice.ieee_address}</td>\n                                <td>{devices.get(touchlinkDevice.ieee_address)?.friendly_name}</td>\n                                <td>{touchlinkDevice.channel}</td>\n                                <td>\n                                    <div className=\"btn-group float-right\" role=\"group\" aria-label=\"Basic example\">\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Identify\" className=\"btn btn-primary\" onClick={this.onIdentifyClick}><i\n                                            className={cx(\"fa\", { \"fa-exclamation-triangle\": !touchlinkIdentifyInProgress, \"fas fa-circle-notch fa-spin\": touchlinkIdentifyInProgress })} /></Button>\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Factory reset\" className=\"btn btn-danger\" onClick={this.onResetClick}><i\n                                            className={cx(\"fa\", { \"fa-broom\": !touchlinkResetInProgress, \"fas fa-circle-notch fa-spin\": touchlinkResetInProgress })} /></Button>\n                                    </div>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n    renderNoDevices() {\n        const { touchlinkScan } = this.props;\n        return (\n            <Button className=\"btn btn-primary mx-auto d-block\" onClick={touchlinkScan}>Scan</Button>\n        );\n    }\n    render() {\n        const { touchlinkDevices, touchlinkScanInProgress, touchlinkScan } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card mt-2\">\n                    <div className=\"card-header allign-middle\">\n                        Detected {touchlinkDevices.length} touchlink devices.\n                        <Button title=\"Rescan\" className=\"btn btn-primary btn-sm float-right\" onClick={touchlinkScan}><i className=\"fa fa-sync\" /></Button>\n                    </div>\n\n                    <div>\n                        <div className=\"card-body\">\n                            {touchlinkScanInProgress ? (\n                                <div className=\"d-flex justify-content-center\">\n                                    <div className=\"spinner-border\" role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            ) : touchlinkDevices.length === 0 ? this.renderNoDevices() : this.renderTouchlinkDevices()}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mappedProps = [\"touchlinkDevices\", \"devices\", \"touchlinkScanInProgress\", \"touchlinkIdentifyInProgress\", \"touchlinkResetInProgress\"];\n\nexport default connect<{}, {}, GlobalState, TouchlinkApi>(mappedProps, actions)(TouchlinkPage);\n","import React, { useState, ChangeEvent, InputHTMLAttributes, useEffect } from \"react\";\n\nimport Button from \"../button\";\nimport RangeEditor from \"../range-editor/range-editor\";\n\ninterface UniversalEditorProps {\n    values?: unknown[];\n    onChange(arg1: unknown): void;\n}\n\nconst togglePairs = new Map<string | boolean, string | boolean>([\n    ['ON', 'OFF'],\n    ['OFF', 'ON'],\n    ['OPEN', 'CLOSE'],\n    ['CLOSE', 'OPEN'],\n    ['LOCK', 'UNLOCK'],\n    ['UNLOCK', 'LOCK'],\n    [true, false],\n    [false, true]\n]);\n\nconst BluringInput: React.FunctionComponent<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>> = (props) => {\n    const { onChange, value, ...rest } = props;\n    const [internalValue, setInternalValue] = useState(value);\n    useEffect(() => {\n        setInternalValue(value);\n    }, [value]);\n\n\n    return <input\n        value={internalValue}\n        onBlur={() => onChange && onChange({ target: { value: internalValue } } as ChangeEvent<HTMLInputElement>)}\n        onChange={e => setInternalValue(e.target.value)}\n        {...rest} />\n}\n\nconst UniversalEditor: React.FunctionComponent<InputHTMLAttributes<unknown> & UniversalEditorProps> = (props) => {\n    const { value, values, onChange, disabled, name, ...rest } = props;\n\n    const isToggleParameter = togglePairs.has(value as string | boolean);\n\n\n    if (values) {\n        return (<select className=\"form-select\"\n            disabled={disabled}\n            value={value as string}\n            onChange={e => onChange(e.target.value)}>\n            {values.map(val => <option key={val as string} value={val as string}>{val as string}</option>)}\n        </select>)\n    }\n    switch (typeof value) {\n        case \"boolean\":\n            return (\n                <div className=\"form-check form-switch\">\n                    <input type=\"checkbox\" className=\"form-check-input\"\n                        disabled={disabled}\n                        checked={value as boolean}\n                        onChange={e => onChange(e.target.checked)}\n                        {...rest} />\n                </div>\n            );\n        case \"number\":\n            return (<div className=\"row\">\n                <div className=\"col-9\">\n                    <RangeEditor disabled={disabled} value={value} onChange={v => onChange(v)} {...rest} />\n                </div>\n                <div className=\"col-3\">\n                    <input type=\"number\" step=\"any\" className=\"form-control col-2\"\n                        disabled={disabled}\n                        value={value as number}\n                        onChange={e => onChange(e.target.valueAsNumber)}\n                        {...rest} />\n                </div>\n\n\n            </div >);\n        default:\n            if (isToggleParameter) {\n                return (\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <Button<string | boolean> title=\"Toggle\" value=\"Toggle\"\n                                className=\"btn btn-primary\"\n                                disabled={disabled}\n                                item={togglePairs.get(value as string | boolean)}\n                                onClick={payload => onChange(payload)}>\n                                <i className=\"fa fa-exchange-alt\" />\n                            </Button>\n                        </div>\n                        <div className=\"col-9\">\n                            <BluringInput type=\"text\" className=\"form-control\"\n                                disabled={disabled}\n                                value={value as string}\n                                onChange={e => onChange(e.target.value)}\n                                {...rest}\n                            />\n                        </div>\n                    </div>\n                );\n            }\n            return (<BluringInput type=\"text\" className=\"form-control\"\n                disabled={disabled}\n                value={value as string}\n                onChange={e => onChange(e.target.value)}\n                {...rest} />);\n\n\n    }\n};\nexport default UniversalEditor;","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions, { UtilsApi } from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport get from \"lodash/get\";\nimport UniversalEditor from \"../universal-editor\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Button from \"../button\";\nimport Form from '@rjsf/bootstrap-4';\nimport cx from \"classnames\";\nimport { JSONSchema7 } from \"json-schema\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport uiSchemas from \"./uiSchema.json\";\nimport \"./style.global.scss\";\nimport { BridgeApi } from \"../../actions/BridgeApi\";\n\n\n\nexport const logLevelSetting = {\n    key: 'log_level',\n    path: 'log_level',\n    title: 'Log level',\n    description: 'Logging level',\n    values: ['debug', 'info', 'warn', 'error']\n};\nconst settings = [\n    {\n        key: 'last_seen',\n        path: 'config.advanced.last_seen',\n        title: 'Last seen',\n        description: 'Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message',\n        values: ['disable', 'ISO_8601', 'ISO_8601_local', 'epoch']\n    },\n    {\n        key: 'elapsed',\n        path: 'config.advanced.elapsed',\n        title: 'Elapsed',\n        description: 'Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg'\n    },\n    { ...logLevelSetting },\n    {\n        key: 'homeassistant',\n        path: 'config.homeassistant',\n        title: 'Homeassistant support',\n        description: 'Home Assistant integration (MQTT discovery)'\n    }\n]\ntype SettingsTab = \"settings\" | \"bridge\" | \"about\" | \"experimental-settings\";\n\ntype SettigsKeys = string;\ntype UrlParams = {\n    tab?: SettingsTab;\n};\ntype SettingsPageProps = RouteComponentProps<UrlParams>;\n\ndeclare const FRONTEND_VERSION: string; //injected by webpack.DefinePlugin\n\ntype SettingsPageState = {\n    keyName: SettigsKeys;\n}\n\nconst ROOT_KEY_NAME = 'main';\n\n\nconst ingoredFields = ['groups', 'devices', 'device_options', 'ban', 'whitelist'];\n\n\n\nconst validJsonSchemasAsTabs = ['object', 'array'];\n\nconst removePropertiesFromSchema = (names: string[], schema: JSONSchema7 = {}, config: object = {}) => {\n\n    if (schema.required) {\n        schema.required = schema.required.filter(item => names.includes(item));\n    }\n\n    for (const name of names) {\n        if (schema.properties) {\n            delete schema.properties[name];\n        }\n        delete config[name];\n    }\n\n    return { schema, config };\n}\n\nconst tabs = [\n    {\n        title: 'Settings',\n        url: `/settings/settings`\n    },\n    {\n        title: 'Raw',\n        url: `/settings/bridge`\n    },\n    {\n        title: 'About',\n        url: `/settings/about`\n    },\n    {\n        title: 'Experimental Settings',\n        url: `/settings/experimental-settings`\n    },\n];\n\n\nconst isValidKeyToRenderAsTab = (key: string, value: JSONSchema7): boolean => (validJsonSchemasAsTabs.includes(value.type as string) && !ingoredFields.includes(key)) || (value && value.oneOf ? value.oneOf.length > 0 : false);\nexport class SettingsPage extends Component<SettingsPageProps & BridgeApi & GlobalState & UtilsApi, SettingsPageState> {\n    state = {\n        keyName: ROOT_KEY_NAME\n    }\n    updateConfig = (name: string, value: unknown): void => {\n        const { updateConfigValue } = this.props;\n        updateConfigValue(name, value);\n    }\n    renderCategoriesTabs() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                {tabs.map(tab => <li key={tab.url} className=\"nav-item\">\n                    <NavLink className=\"nav-link\" activeClassName=\"active\" to={tab.url}>{tab.title}</NavLink>\n                </li>)}\n            </ul>\n        )\n    }\n    render() {\n        return (\n            <>\n                {this.renderCategoriesTabs()}\n                <div className=\"tab-content\">\n                    <div className=\"tab-pane fade show active\">\n                        <div className=\"container\">\n                            {this.renderSwitcher()}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    renderSwitcher() {\n        const { match } = this.props;\n        const { tab } = match.params;\n        switch (tab) {\n            case \"settings\":\n                return this.renderSettings();\n            case \"bridge\":\n                return this.renderBridgeInfo();\n            case \"about\":\n                return this.renderAbout();\n            case \"experimental-settings\":\n                return this.renderExperimentalSettings();\n            default:\n                return <Redirect to={`/settings/settings`} />;\n        }\n    }\n    renderAbout() {\n        const { bridgeInfo } = this.props;\n        const isZigbee2mqttDevVersion = bridgeInfo.version?.match(/^\\d+\\.\\d+\\.\\d+$/) === null;\n        const zigbee2mqttVersion = isZigbee2mqttDevVersion ?\n            bridgeInfo.version :\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/Koenkk/zigbee2mqtt/releases/tag/${bridgeInfo.version}`}>{bridgeInfo.version}</a>;\n        const zigbee2mqttCommit = bridgeInfo.commit ?\n            <>commit: <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/Koenkk/zigbee2mqtt/commit/${bridgeInfo.commit}`}>{bridgeInfo.commit}</a></> :\n            null;\n\n        const rows = [\n            { title: 'Zigbee2MQTT version', content: <>{zigbee2mqttVersion} {zigbee2mqttCommit}</> },\n            { title: 'Coordinator type', content: <>{bridgeInfo.coordinator?.type ?? 'Unknown'}</> },\n            { title: 'Coordinator revision', content: <>{bridgeInfo.coordinator?.meta?.revision ?? 'Unknown'}</> },\n            { title: 'Frontend version', content: FRONTEND_VERSION },\n        ];\n\n        return <div className=\"mt-2\">\n            {\n                rows.map(row => <dl key={row.title} className=\"row\">\n                    <dt className=\"col-sm-3\">{row.title}</dt>\n                    <dd className=\"col-sm-9\">{row.content}</dd>\n                </dl>)\n            }\n        </div>\n    }\n    renderBridgeInfo() {\n        const { bridgeInfo } = this.props;\n        return <pre>{JSON.stringify(bridgeInfo, null, 4)}</pre>\n    }\n\n    renderSettings() {\n        const { bridgeInfo, exportState, restartBridge } = this.props;\n        return <><div className=\"mt-2\">\n            {\n                !isEmpty(bridgeInfo) && settings.map(setting => (\n                    <div key={setting.key} className=\"row border-bottom pt-1\">\n                        <div className=\"col mb-3\">\n                            <label htmlFor={setting.key} className=\"form-label\">{setting.title}</label>\n                            <UniversalEditor\n                                disabled={get(bridgeInfo, setting.path) === undefined}\n                                value={get(bridgeInfo, setting.path) as string | ReadonlyArray<string> | number}\n                                values={setting.values}\n                                onChange={(value) => this.updateConfig(setting.key, value)}\n                            />\n                            <div className=\"form-text\">{setting.description}</div>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n            <Button className=\"btn btn-primary d-block mt-2\" onClick={exportState}>Download state</Button>\n            <Button className=\"btn btn-danger d-block mt-2\" onClick={restartBridge} promt>Restart</Button>\n        </>\n    }\n    onSettingsSave = ({ formData }) => {\n        const { updateBridgeConfig } = this.props;\n        const { keyName } = this.state;\n        if (keyName === ROOT_KEY_NAME) {\n            updateBridgeConfig(formData);\n        } else {\n            updateBridgeConfig({ [keyName]: formData });\n        }\n    }\n\n    getSettingsTabs() {\n        const { bridgeInfo: { config_schema: configSchema = {properties: {}} } } = this.props;\n        const tabs = Object.entries<JSONSchema7>(configSchema.properties as unknown as ArrayLike<JSONSchema7>)\n            .filter(([key, value]) => isValidKeyToRenderAsTab(key, value))\n            .map(([key, value]) => ({\n                name: key,\n                title: value.title ?? key\n            }));\n        tabs.unshift({\n            name: ROOT_KEY_NAME,\n            title: 'Main'\n        });\n        return tabs;\n    }\n    getSettingsInfo() {\n        const { keyName } = this.state;\n        const { bridgeInfo: { config_schema: configSchema, config: originalConfig } } = this.props;\n\n        let configAndSchema = removePropertiesFromSchema(ingoredFields, cloneDeep(configSchema), cloneDeep(originalConfig) as object);\n\n        let currentSchema: JSONSchema7 = configAndSchema.schema;\n        let currentConfig = configAndSchema.config[keyName] as object;\n\n        if (keyName === ROOT_KEY_NAME) {\n            const ignoreTabNames = this.getSettingsTabs().map(tab => tab.name);\n            configAndSchema = removePropertiesFromSchema(ignoreTabNames, configAndSchema.schema, configAndSchema.config)\n            currentSchema = configAndSchema.schema;\n            currentConfig = configAndSchema.config;\n        } else {\n            currentConfig = configAndSchema.config[keyName] as object;\n            if (configAndSchema.schema.properties) {\n                currentSchema = configAndSchema.schema.properties[keyName] as JSONSchema7;\n            }\n        }\n        return { currentSchema, currentConfig };\n    }\n    renderSettingsTabs() {\n        const tabs = this.getSettingsTabs();\n        const { keyName } = this.state;\n        return <ul className=\"nav nav-pills nav-fill\">\n            {tabs.map(tab => <li key={tab.name} className=\"nav-item\">\n                <a className={cx(\"nav-link\", { active: keyName === tab.name })} aria-current=\"page\" href=\"#\" onClick={(e) => { this.setState({ keyName: tab.name }); e.preventDefault() }}>{tab.title}</a>\n            </li>)}\n        </ul>;\n    }\n    renderExperimentalSettings() {\n        const { keyName } = this.state;\n        const { currentSchema, currentConfig } = this.getSettingsInfo();\n\n        return <>{this.renderSettingsTabs()}\n            <Form key={keyName} schema={currentSchema}\n                formData={currentConfig}\n                onSubmit={this.onSettingsSave}\n                uiSchema={uiSchemas[keyName]}\n            /></>\n    }\n}\nconst SettingsPageWithRouter = withRouter(SettingsPage);\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedSettingsPage = connect<{}, {}, GlobalState, BridgeApi>(mappedProps, actions)(SettingsPageWithRouter);\nexport default ConnectedSettingsPage;\n","import React, { FunctionComponent, RefObject, useRef, useState } from 'react';\n\nimport { GlobalState } from '../../store';\nimport actions from '../../actions/actions';\nimport { connect } from 'unistore/react';\nimport Button from '../button';\nimport cx from \"classnames\";\nimport { Link, NavLink } from 'react-router-dom';\nimport useComponentVisible from '../../hooks/useComponentVisible';\nimport { Device } from '../../types';\nimport style from \"./style.css\";\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { BridgeApi } from '../../actions/BridgeApi';\n\nconst urls = [\n    {\n        href: '/',\n        title: 'Devices',\n        exact: true\n    },\n    {\n        href: '/dashboard',\n        title: 'Dashboard (experimental)'\n    },\n    {\n        href: '/map',\n        title: 'Map'\n    },\n    {\n        href: '/settings',\n        title: 'Settings'\n    },\n    {\n        href: '/groups',\n        title: 'Groups'\n    },\n    {\n        href: '/ota',\n        title: 'OTA'\n    },\n    {\n        href: '/touchlink',\n        title: 'Touchlink'\n    },\n    {\n        href: '/logs',\n        title: 'Logs'\n    }\n];\ntype StartStopJoinButtonProps = {\n    devices: Map<string, Device>;\n}\nconst StartStopJoinButton: FunctionComponent<StartStopJoinButtonProps & Pick<BridgeApi, 'setPermitJoin'> & Pick<GlobalState, 'bridgeInfo'>> = ({ devices, setPermitJoin, bridgeInfo }) => {\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n    const [selectedRouter, setSelectedRouter] = useState<Device>({} as Device);\n    const routers: JSX.Element[] = [];\n    const selectAndHide = (device: Device) => { setSelectedRouter(device); setIsComponentVisible(false) }\n    devices.forEach((device) => {\n        if (device.type == \"Router\") {\n            routers.push(<li key={device.friendly_name}>\n                <Button<Device> item={device} className=\"dropdown-item\" onClick={selectAndHide}>{device.friendly_name}</Button>\n            </li>)\n        }\n    });\n    const onBtnClick = () => {\n        setPermitJoin(!bridgeInfo.permit_join, selectedRouter);\n    }\n    return (\n        <div className=\"input-group w-auto\">\n            <button onClick={onBtnClick} type=\"button\" className=\"btn btn-outline-secondary\">{bridgeInfo.permit_join ? \"Disable join\" : \"Permit join\"} ({selectedRouter?.friendly_name ?? \"All\"})</button>\n            {routers.length ? (<><Button<boolean> type=\"button\" onClick={setIsComponentVisible} item={!isComponentVisible} className=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                <span className=\"visually-hidden\">Toggle Dropdown</span>\n            </Button>\n                <ul ref={ref as RefObject<HTMLUListElement>} className={cx('dropdown-menu', style['scrollable-menu'], { show: isComponentVisible })}>\n                    <li key='all'>\n                        <Button className=\"dropdown-item\" onClick={selectAndHide}>All</Button>\n                    </li>\n                    {routers}\n                </ul></>) : null}\n\n        </div>\n    );\n}\n\ntype PropsFromStore = {\n    devices: Map<string, Device>;\n    bridgeInfo: object;\n}\nconst NavBar: FunctionComponent<PropsFromStore & BridgeApi & Pick<GlobalState, 'bridgeInfo'>> = (props) => {\n    const { devices, setPermitJoin, bridgeInfo, restartBridge } = props;\n    const ref = useRef<HTMLDivElement>();\n    const [navbarIsVisible, setnavbarIsVisible] = useState<boolean>(false);\n    useOnClickOutside(ref, () => {\n        setnavbarIsVisible(false);\n    });\n    return (<nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n        <div ref={ref as React.MutableRefObject<HTMLDivElement>} className=\"container-fluid\">\n            <Link onClick={() => setnavbarIsVisible(false)} className=\"navbar-brand\" to=\"/\">Zigbee2MQTT</Link>\n            <button onClick={() => { setnavbarIsVisible(!navbarIsVisible) }} className=\"navbar-toggler\" type=\"button\">\n                <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className={cx(\"navbar-collapse collapse\", { show: navbarIsVisible })}>\n                <ul className=\"navbar-nav mb-2 mb-md-0\">\n                    {\n                        urls.map(url =>\n                            <li key={url.href} className=\"nav-item\">\n                                <NavLink onClick={() => setnavbarIsVisible(false)} exact={url.exact} className=\"nav-link\" to={url.href} activeClassName=\"active\">\n                                    {url.title}\n                                </NavLink>\n                            </li>)\n                    }\n                </ul>\n                <StartStopJoinButton\n                    devices={devices}\n                    setPermitJoin={setPermitJoin}\n                    bridgeInfo={bridgeInfo}\n                />\n            </div>\n            {bridgeInfo.restart_required ? <Button onClick={restartBridge} promt className=\"btn btn-danger\">Restart</Button>: null}\n        </div>\n    </nav>)\n}\nconst mappedProps = [\"bridgeInfo\", \"devices\"];\nconst ConnectedNavBar = connect<{}, {}, PropsFromStore, BridgeApi>(mappedProps, actions)(NavBar);\nexport default ConnectedNavBar;\n\n","import { useState, useEffect, useRef } from 'react';\n\nexport default function useComponentVisible(initialIsVisible: boolean) {\n    const [isComponentVisible, setIsComponentVisible] = useState(\n        initialIsVisible\n    );\n    const ref = useRef<HTMLElement>(null);\n\n    const handleHideDropdown = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            setIsComponentVisible(false);\n        }\n    };\n\n    const handleClickOutside = (event: MouseEvent) => {\n        if (ref.current && !ref.current.contains(event.target as Node)) {\n            setIsComponentVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleHideDropdown, true);\n        document.addEventListener(\"click\", handleClickOutside, true);\n        return () => {\n            document.removeEventListener(\"keydown\", handleHideDropdown, true);\n            document.removeEventListener(\"click\", handleClickOutside, true);\n        };\n    });\n\n    return { ref, isComponentVisible, setIsComponentVisible };\n}","// extracted by mini-css-extract-plugin\nexport default {\"scrollable-menu\":\"_36Sntvyj-B3gg7Xj6xLUaY\"};","import {  useEffect } from 'react';\n\nexport function useOnClickOutside(ref, handler) {\n  useEffect(\n    () => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}","import React, { ChangeEvent, useState } from \"react\";\nimport { useInputChange } from \"../../hooks/useInputChange\";\nimport Button from \"../button\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\n\ninterface RenameGroupFormProps {\n  name: string;\n  onRename(oldName: string, newName: string): void;\n}\n\nexport function RenameGroupForm(props: RenameGroupFormProps) {\n  const { name, onRename } = props;\n  const [modalIsOpened, setModalIsOpened] = useState(false);\n\n  const [renameGroupForm, handleInputChange] = useInputChange({ friendlyName: name });\n\n  return (\n    <>\n      <Modal isOpen={modalIsOpened}>\n        <ModalHeader>\n          <h3>Rename group</h3>\n          <small>{name}</small>\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Friendly name</label>\n            <input name=\"friendlyName\" onChange={handleInputChange as (event: ChangeEvent<HTMLInputElement>) => void} type=\"text\" className=\"form-control\" value={renameGroupForm['friendlyName']} />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setModalIsOpened(false)}>Close</button>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => { onRename(name, renameGroupForm['friendlyName']); setModalIsOpened(false) }}>Save changes</button>\n        </ModalFooter>\n      </Modal>\n      <Button<void> className=\"btn btn-secondary\" onClick={() => setModalIsOpened(true)} title=\"Rename group\"><i className=\"fa fa-edit\" /></Button>\n    </>\n  )\n}\n\n","import { ChangeEvent, useState } from 'react'\ntype KVP = { [key: string]: string };\nexport const useInputChange = (initialState: KVP) => {\n  const [input, setInput] = useState<KVP>(initialState);\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => setInput({\n    ...input,\n    [e.currentTarget.name]: e.currentTarget.value\n  })\n\n  return [input, handleInputChange]\n}","import React, { ChangeEvent, Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\n\nimport { GlobalState, Group, GroupAddress } from \"../../store\";\nimport Button from \"../button\";\nimport { Device, Endpoint } from \"../../types\";\nimport { genDeviceDetailsLink, getEndpoints } from \"../../utils\";\nimport style from './style.css';\nimport cx from 'classnames';\nimport EndpointPicker from \"../endpoint-picker\";\nimport DevicePicker from \"../device-picker\";\nimport { Link } from \"react-router-dom\";\nimport DeviceImage from \"../device-image\";\nimport { RenameGroupForm } from \"./RenameForm\";\nimport { GroupsApi } from \"../../actions/GroupsApi\";\n\n\ninterface GroupsPageState {\n    newGroupName: string;\n    newGroupId?: number;\n}\n\n\ninterface AddDeviceToGroupProps {\n    devices: Map<string, Device>;\n    group: Group;\n    addDeviceToGroup(deviceName: string, groupName: string): void;\n}\n\ninterface AddDeviceToGroupState {\n    device?: string;\n    endpoint?: Endpoint;\n}\n\ninterface DeviceGroupRowProps {\n    rowNumber: number;\n    groupAddress: GroupAddress;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroupRow extends Component<DeviceGroupRowProps, {}> {\n    getDeviceObj(): Device {\n        const { groupAddress, devices } = this.props;\n        return devices.get(groupAddress.ieee_address) as Device;\n    }\n    render() {\n        const { rowNumber, groupAddress, removeDeviceFromGroup } = this.props;\n        const device = this.getDeviceObj();\n\n        return <tr>\n            <th scope=\"row\">{rowNumber + 1}</th>\n            <td className={style[\"device-pic\"]}>\n                <DeviceImage className={cx(style[\"device-image\"])} device={device} />\n            </td>\n            <td><Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link></td>\n            <td>{groupAddress.ieee_address}</td>\n            <td>{groupAddress.endpoint}</td>\n            <td>{device && <Button<string> promt item={device.friendly_name} onClick={removeDeviceFromGroup} className=\"btn btn-danger btn-sm float-right\"><i className=\"fa fa-trash\" /></Button>}</td>\n        </tr>;\n    }\n}\ninterface DeviceGroupPropts {\n    group: Group;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(groupFriendlyName: string, deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroup extends Component<DeviceGroupPropts, {}> {\n    onRemove = (deviceFriendlyName: string): void => {\n        const { group, removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(group.friendly_name, deviceFriendlyName);\n    }\n    render() {\n        const { group, devices } = this.props;\n        return <table className=\"table table-sm\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Pic</th>\n                    <th scope=\"col\">friendlyName</th>\n                    <th scope=\"col\">ieee_addr</th>\n                    <th scope=\"col\">Endpoint</th>\n                    <th scope=\"col\" className=\"text-right\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                {group.members.map((groupMemebershipInfo, idx) => <DeviceGroupRow key={groupMemebershipInfo.ieee_address} removeDeviceFromGroup={this.onRemove} rowNumber={idx} devices={devices} groupAddress={groupMemebershipInfo} />)}\n            </tbody>\n        </table>;\n    }\n}\n\nclass AddDeviceToGroup extends Component<AddDeviceToGroupProps, AddDeviceToGroupState> {\n    state: Readonly<AddDeviceToGroupState> = {};\n\n\n    onSubmit = (): void => {\n        const { addDeviceToGroup, group } = this.props;\n        const { device, endpoint } = this.state;\n\n        addDeviceToGroup(endpoint ? `${device}/${endpoint}` : device as string, group.friendly_name);\n\n    }\n    onDeviceSelect = (device: Device): void => {\n        const endpoints = getEndpoints(device);\n        this.setState({ device: device.ieee_address, endpoint: endpoints[0] });\n    }\n\n    onEpChange = (endpoint: Endpoint): void => {\n        this.setState({ endpoint });\n    }\n    render() {\n        const { device, endpoint } = this.state;\n        const { devices } = this.props;\n        const deviceObj = devices.get(device as string) as Device;\n\n        const endpoints = getEndpoints(deviceObj);\n\n        return <form className=\"row\">\n\n            <div className=\"col\">\n                <div className=\"input-group mb-3\">\n                    <DevicePicker type=\"device\" value={device as string} devices={devices} onChange={this.onDeviceSelect} />\n                    <EndpointPicker values={endpoints} value={endpoint as Endpoint} onChange={this.onEpChange} />\n                </div>\n\n            </div>\n\n            <div className=\"col\">\n                <Button<void> type=\"button\" onClick={this.onSubmit} className=\"btn btn-primary\">Add to group</Button>\n            </div>\n\n\n        </form>\n    }\n}\n\nexport class GroupsPage extends Component<GroupsApi & GlobalState, GroupsPageState> {\n    state: GroupsPageState = {\n        newGroupName: '',\n        newGroupId: undefined\n    }\n\n\n    changeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value } as unknown as GroupsPageState);\n    }\n\n    onGroupCreateSubmit = (): void => {\n        const { newGroupName, newGroupId } = this.state;\n        const { createGroup } = this.props;\n        createGroup(newGroupName, newGroupId);\n    }\n\n    renderGroupCreationForm() {\n        const { newGroupName, newGroupId } = this.state;\n        return (\n            <form className=\"row mt-2\">\n                <div className=\"input-group  mb-2\">\n                    <label htmlFor=\"newGroupName\" className=\"sr-only\">Group name</label>\n                    <input onChange={this.changeHandler} value={newGroupName} required type=\"text\" name=\"newGroupName\" className=\"form-control\" id=\"newGroupName\" placeholder=\"new group name\" />\n\n                    <label htmlFor=\"newGroupName\" className=\"sr-only\">Group id</label>\n                    <input onChange={this.changeHandler} value={newGroupId === undefined ? '' : newGroupId} type=\"number\" name=\"newGroupId\" className=\"form-control\" id=\"newGroupId\" placeholder=\"enter group id if necessary\" />\n\n                    <Button<void> onClick={this.onGroupCreateSubmit} className=\"btn btn-primary form-control\">Create group</Button>\n                </div>\n\n            </form>\n        )\n    }\n    removeGroup = (friendlyName: string): void => {\n        const { removeGroup } = this.props;\n        removeGroup(friendlyName);\n    }\n    removeDeviceFromGroup = (groupFriendlyName: string, deviceFriendlyName: string): void => {\n        const { removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(deviceFriendlyName, groupFriendlyName);\n    }\n    renameGroup = (oldName: string, newName: string) => {\n        const { renameGroup } = this.props;\n        renameGroup(oldName, newName);\n    }\n    renderGroups() {\n        const { groups, devices, addDeviceToGroup } = this.props;\n        return (\n            <div id=\"accordion\">\n                {\n                    groups.map(group => (\n                        <div key={group.id} className=\"card mb-1\">\n                            <div className=\"card-header\" id={`heading${group.id}`}>\n                                <h5 className=\"mb-0\">\n                                    <button className=\"btn btn-link btn-sm\">\n                                        {group.friendly_name} (#{group.id})\n                                    </button>\n                                    <div className=\"btn-group float-right btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n\n                                        <Button<string> promt title=\"Remove group\" item={group.friendly_name} onClick={this.removeGroup} className=\"btn btn-danger\"><i className=\"fa fa-trash\" /></Button>\n                                        <RenameGroupForm name={group.friendly_name} onRename={this.renameGroup} />\n                                    </div>\n                                </h5>\n                            </div>\n\n                            <div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        <DeviceGroup group={group} devices={devices} removeDeviceFromGroup={this.removeDeviceFromGroup} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-footer\">\n                                <AddDeviceToGroup addDeviceToGroup={addDeviceToGroup} devices={devices} group={group} />\n                            </div>\n                        </div>\n                    )).reverse()\n                }\n\n            </div>\n        )\n    }\n\n    render() {\n        return <div className=\"container\">\n            {this.renderGroupCreationForm()}\n            {this.renderGroups()}\n        </div>\n\n    }\n}\n\nconst mappedProps = [\"groups\", \"devices\"];\nconst ConnectedGroupsPage = connect<{}, {}, GlobalState, GroupsApi>(mappedProps, actions)(GroupsPage);\nexport default ConnectedGroupsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"device-pic\":\"_2p1XqBiO9XLlCB-lT60VCH\",\"device-image\":\"_3Z1i8qUrV2sErNF0__pVZt\"};","import React, { MouseEvent, ThHTMLAttributes} from \"react\";\n\n\n\nimport { SortDirection } from \"../../types\";\nimport isEqual from \"lodash/isEqual\";\n\n\ninterface ActionTHProps<T> {\n    column: T | T[];\n    current: T | T[];\n    currentDirection: SortDirection;\n    onClick?(arg1: T | T[]): void;\n}\n\nexport default class ActionTH<T> extends React.Component<ActionTHProps<T> & Omit<ThHTMLAttributes<HTMLTableHeaderCellElement>, 'onClick'>, {}> {\n    onClick = (event: MouseEvent): void => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { column, onClick } = this.props;\n        onClick && onClick(column);\n    };\n\n    renderArrow () {\n        const { currentDirection, current, column } = this.props;\n        if (isEqual(current, column)) {\n            if (currentDirection == \"asc\") {\n                return <i className={`fa fa-sort-amount-down-alt`} />;\n            }\n            return <i className={`fa fa-sort-amount-down`} />;\n        }\n        return <i className={`fa fa-sort-amount-down invisible`} />;\n    }\n\n    render () {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, onClick, current, column, currentDirection, ...rest } = this.props;\n        return (<th {...rest}>\n            <span className=\"btn btn-link\" onClick={this.onClick}>{children}</span>\n            {this.renderArrow()}\n        </th>);\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"action-column\":\"_1AmFhCTIk_ifBlEJGnLJuK\",\"device-pic\":\"_1KD_wxLENsmTnroATY4BrA\",\"device-image\":\"_1kMXLbhsSotmS-uYUbIFl0\"};","\nimport React from \"react\";\nimport { SortColumn } from \".\";\nimport { SortDirection } from \"../../types\";\nimport ActionTH from \"./ActionTH\";\nimport style from \"./style.css\";\n\ntype TableHeaderProps = {\n    sortColumn: SortColumn | SortColumn[];\n    sortDirection: SortDirection;\n    onSortChange(column: SortColumn | SortColumn[], sortDir?: SortDirection): void;\n    lastSeenIsAvaliable: boolean;\n}\nexport const TableHeader = (props: TableHeaderProps) => {\n    const { sortColumn, sortDirection, onSortChange, lastSeenIsAvaliable } = props;\n\n    return (\n        <thead>\n            <tr className=\"text-nowrap\">\n                <th>#</th>\n                <th>Pic</th>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.friendly_name\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Friendly name</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.ieee_address\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>IEEE address</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.definition.vendor\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange} title=\"definition.vendor\">Manufacturer</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.definition.model\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Model</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.linkquality\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>LQI</ActionTH>\n                {lastSeenIsAvaliable && <ActionTH<SortColumn> className={style[\"action-column\"]} column={[\"state.last_seen\", \"state.elapsed\"]}\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Last seen</ActionTH>}\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.battery\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Power</ActionTH>\n                <th>&nbsp;</th>\n            </tr>\n        </thead>\n    )\n}\n","\nimport React from \"react\";\nimport style from \"./style.css\";\nimport { Link } from \"react-router-dom\";\nimport { Device, DeviceState } from \"../../types\";\nimport { genDeviceDetailsLink, lastSeen, toHex } from \"../../utils\";\nimport  DeviceControlGroup from \"../device-control\";\nimport DeviceImage from \"../device-image\";\nimport { DisplayValue } from \"../display-value/DisplayValue\";\nimport PowerSource from \"../power-source\";\nimport { VendorLink, ModelLink } from \"../vendor-links/verndor-links\";\ntype TableRowProps = {\n    device: Device;\n    deviceState: DeviceState;\n    id: number;\n    lastSeenIsAvaliable: boolean;\n}\nexport const TableRow = (props: TableRowProps) => {\n    const { device, deviceState, id, lastSeenIsAvaliable } = props;\n    return <tr key={device.friendly_name} title={deviceState.update?.state == \"available\" ? 'Avaliable OTA update' : device.definition?.description}>\n    <td className=\"font-weight-bold\">{id + 1}</td>\n    <td className={style[\"device-pic\"]}>\n        <DeviceImage className={style[\"device-image\"]} device={device} deviceStatus={deviceState} />\n    </td>\n    <td>\n        <Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link>\n    </td>\n    <td>{device.ieee_address} ({toHex(device.network_address, 4)})</td>\n    <td className=\"text-truncate text-nowrap position-relative\"><VendorLink device={device} /></td>\n    <td title={device?.definition?.description}><ModelLink device={device} /></td>\n    <td><DisplayValue value={deviceState?.linkquality} name=\"linkquality\"/></td>\n    {lastSeenIsAvaliable && <td>{lastSeen(deviceState.last_seen, deviceState.elapsed)}</td>}\n    <td className=\"text-left\">\n        <PowerSource source={device.power_source} battery={deviceState?.battery as number} batteryLow={deviceState.battery_low as boolean} />\n    </td>\n    <td>\n        <DeviceControlGroup device={device} state={deviceState} />\n    </td>\n</tr>\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport { Device, SortDirection, DeviceState } from \"../../types\";\nimport { Notyf } from \"notyf\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions from \"../../actions/actions\";\n\nimport isEqual from \"lodash/isEqual\";\nimport orderBy from \"lodash/orderBy\";\nimport Spinner from \"../spinner\";\nimport { TableHeader } from \"./TableHeader\";\nimport { TableRow } from \"./TableRow\";\n\n\n\nexport type SortColumn =\n    | \"device.network_address\"\n    | \"device.friendly_name\"\n    | \"device.ieee_address\"\n    | \"device.definition.vendor\"\n    | \"device.definition.model\"\n    | \"state.linkquality\"\n    | \"state.last_seen\"\n    | \"state.elapsed\"\n    | \"state.battery\";\n\n\ninterface ZigbeeTableState {\n    sortDirection: SortDirection;\n    sortColumn: SortColumn | SortColumn[];\n    currentTime: number;\n    sortedTableData: ZigbeeTableData[];\n    error?: object;\n}\n\ninterface ZigbeeTableData {\n    device: Device;\n    state: DeviceState;\n}\n\nconst storeKey = \"ZigbeeTableState\";\nconst longLoadingTimeout = 15 * 1000;\n\nexport class ZigbeeTable extends Component<GlobalState, ZigbeeTableState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortDirection: \"desc\",\n            sortColumn: \"device.network_address\",\n            currentTime: Date.now(),\n            sortedTableData: []\n        };\n    }\n\n    restoreState(): void {\n        const { sortColumn, sortDirection } = this.state;\n\n        const storedState = localStorage.getItem(storeKey);\n        if (storedState) {\n            try {\n                const restored: Pick<ZigbeeTableState, \"sortDirection\" | \"sortColumn\"> = JSON.parse(storedState);\n                this.setState(restored);\n            } catch (e) {\n                new Notyf().error(e.toString());\n            }\n        } else {\n            this.onSortChange(sortColumn, sortDirection);\n        }\n    }\n\n    saveState = (): void => {\n        const { sortDirection, sortColumn } = this.state;\n        const storeData = {\n            sortDirection,\n            sortColumn\n        };\n        //in private mode localstorage access can throw exceptions\n        try {\n            localStorage.setItem(storeKey, JSON.stringify(storeData));\n        } catch (e) {\n            new Notyf().error(e.toString());\n        }\n    };\n    handleLongLoading = () => {\n        const { devices } = this.props;\n\n        if (devices.size == 0) {\n            const error = <Fragment>\n                <strong>Loading devices takes too long time.</strong>\n                <div>Consider reading <a href=\"https://www.zigbee2mqtt.io/information/frontend.html\">documentation</a></div>\n            </Fragment>;\n            this.setState({ error });\n        }\n    }\n    componentDidMount(): void {\n        setTimeout(this.handleLongLoading, longLoadingTimeout);\n        this.restoreState();\n    }\n\n    static getDerivedStateFromProps(props: Readonly<GlobalState>, state: ZigbeeTableState): Partial<ZigbeeTableState> {\n        const { sortColumn, sortDirection } = state;\n        const { devices, deviceStates } = props;\n        const tableData: ZigbeeTableData[] = [];\n        devices.forEach((device) => {\n            if (device.type !== \"Coordinator\") {\n                tableData.push({\n                    device,\n                    state: deviceStates.get(device.friendly_name) ?? {} as DeviceState\n\n                });\n            }\n        });\n        return { sortedTableData: orderBy<ZigbeeTableData>(tableData, sortColumn, [sortDirection]) };\n    }\n\n\n    onSortChange = (column: SortColumn | SortColumn[], sortDir?: SortDirection): void => {\n        const { sortColumn } = this.state;\n        let { sortDirection } = this.state;\n\n        if (isEqual(sortColumn, column)) {\n            if (sortDir) {\n                sortDirection = sortDir;\n            } else if (sortDirection == \"asc\") {\n                sortDirection = \"desc\";\n            } else {\n                sortDirection = \"asc\";\n            }\n        }\n\n        this.setState({ sortColumn: column, sortDirection }, this.saveState);\n    };\n\n    renderError() {\n        const { error } = this.state;\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <div className=\"d-flex align-items-center\">\n                {error}\n            </div>\n        </div>);\n    }\n\n    render() {\n        const { error } = this.state;\n        const { devices } = this.props;\n        if (devices.size) {\n            return this.renderDevicesTable();\n        }\n        if (error) {\n            return this.renderError();\n        }\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <Spinner />\n        </div>);\n    }\n    lastSeenIsAvaliable(): boolean {\n        const { bridgeInfo } = this.props;\n        return bridgeInfo?.config?.advanced?.elapsed || bridgeInfo?.config?.advanced?.last_seen != \"disable\";\n    }\n\n\n\n    renderDevicesTable() {\n        const { sortedTableData, sortColumn, sortDirection } = this.state;\n        return (\n            <div className=\"row no-gutters table-responsive\">\n                <table className=\"table align-middle col-12\">\n                    <TableHeader\n                        lastSeenIsAvaliable={this.lastSeenIsAvaliable()}\n                        sortColumn={sortColumn}\n                        sortDirection={sortDirection}\n                        onSortChange={this.onSortChange}\n                    />\n                    <tbody>\n                        {sortedTableData.map(({ device, state }, id) => <TableRow\n                            key={device.friendly_name}\n                            device={device}\n                            deviceState={state}\n                            id={id}\n                            lastSeenIsAvaliable={this.lastSeenIsAvaliable()}\n                        />)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"devices\", \"deviceStates\", \"bridgeInfo\"];\nconst ConnectedZigbeePage = connect<{}, ZigbeeTableState, GlobalState, {}>(mappedProps, actions)(ZigbeeTable);\nexport default ConnectedZigbeePage;\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport cx from \"classnames\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport UniversalEditor from \"../universal-editor\";\nimport { logLevelSetting } from \"../settings\";\nimport get from \"lodash/get\";\nimport { BridgeApi } from \"../../actions/BridgeApi\";\n\n\n\ntype LogsPageState = {\n    search: string;\n    logLevel: string;\n}\nconst ALL = 'all';\n\nconst Highlighted = ({ text = '', highlight = '' }) => {\n    if (!highlight.trim()) {\n        return <span>{text}</span>\n    }\n    const regex = new RegExp(`(${escapeRegExp(highlight)})`, 'gi')\n    const parts = text.split(regex)\n    return (\n        <span>\n            {parts.filter(part => part).map((part, i) => (\n                regex.test(part) ? <mark key={i}>{part}</mark> : <span key={i}>{part}</span>\n            ))}\n        </span>\n    )\n}\n\nexport class LogsPage extends Component<GlobalState & BridgeApi, LogsPageState> {\n    state = { search: '', logLevel: ALL }\n    updateConfig = (name: string, value: unknown): void => {\n        const { updateConfigValue } = this.props;\n        updateConfigValue(name, value);\n    }\n    renderSearch() {\n        const { search } = this.state;\n        const { bridgeInfo } = this.props;\n        const logLevels = [...logLevelSetting.values];\n        logLevels.unshift(ALL);\n\n        return <form className=\"row row-cols-lg-auto g-3 align-items-center\">\n            <div className=\"col-12\">\n                <label htmlFor=\"log-level\" className=\"form-label\">Show only</label>\n                <select id=\"log-level\" className=\"form-select\" onChange={e => this.setState({ logLevel: e.target.value })}>\n                    {logLevels.map(level => <option key={level} value={level}>{level}</option>)}\n                </select>\n            </div>\n            <div className=\"col-12\">\n                <label htmlFor=\"search-filter\" className=\"form-label\">Filter by text</label>\n                <input id=\"search-filter\" className=\"form-control col-10\" placeholder=\"Enter search criteria\" value={search} onChange={(e) => this.setState({ search: e.target.value })} type=\"text\"></input>\n            </div>\n            <div className=\"col-12\">\n                <label htmlFor={logLevelSetting.key} className=\"form-label\">Configuration log level</label>\n                <UniversalEditor\n                    disabled={get(bridgeInfo, logLevelSetting.path) === undefined}\n                    value={get(bridgeInfo, logLevelSetting.path) as string | ReadonlyArray<string> | number}\n                    values={logLevelSetting.values}\n                    onChange={(value) => this.updateConfig(logLevelSetting.key, value)}\n                />\n            </div>\n        </form>;\n    }\n    render() {\n        let { logs } = this.props;\n        const { search, logLevel } = this.state;\n\n        const _search = new RegExp(escapeRegExp(search), 'gi');\n\n        logs = logs\n            .filter(l => (logLevel === ALL || l.level === logLevel) && (!search || _search.test(l.message)))\n            .sort();\n\n        return <div className=\"container-fluid d-lg-flex flex-column h-100 pt-2\">\n            {this.renderSearch()}\n            {logs.length == 0 ? <h1>You don&apos;t have {logLevel === ALL ? 'any' : logLevel} logs</h1> : null}\n            <div className=\"overflow-auto\">\n            {\n                logs.map((l, idx) => <div key={idx}>\n                    {logLevel === ALL && <><span className={cx(\"badge\", {\n                        'bg-danger': l.level === 'error',\n                        'bg-warning': l.level === 'warning',\n                        'bg-info': l.level === 'info',\n                        'bg-secondary': ['error', 'warning', 'info'].includes(l.level) === false,\n                    }, \"text-capitalize\")}>{l.level}</span>&nbsp;</>}<code>\n                        <Highlighted text={l.message} highlight={search}></Highlighted>\n                    </code></div>)\n            }\n            </div>\n        </div>\n    }\n}\n\nconst mappedProps = [\"logs\", \"bridgeInfo\"];\n\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(LogsPage);\n","\nimport React, { Component, FunctionComponent } from \"react\";\n\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { OtaApi } from \"../../actions/OtaApi\";\nimport { GlobalState } from \"../../store\";\nimport Button from \"../button\";\nimport { genDeviceDetailsLink, toHHMMSS } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport { Device, DeviceState } from \"../../types\";\nimport { VendorLink, ModelLink } from \"../vendor-links/verndor-links\";\n\n\ntype OtaRowProps = {\n    device: Device;\n    state: DeviceState;\n}\n\nconst StateCell: FunctionComponent<OtaRowProps & OtaApi> = (props) => {\n    const { device, state, checkOTA, updateOTA } = props;\n    switch (state?.update?.state) {\n        case \"updating\":\n            return (<><div className=\"progress\">\n                <div className=\"progress-bar progress-bar-striped progress-bar-animated\" style={{ width: `${state.update.progress}%` }}>\n                    {state.update.progress}%</div>\n            </div>\n                <div>Remaining time {toHHMMSS(state.update.remaining)}</div>\n            </>\n            );\n        case \"available\":\n            return <Button<string> className=\"btn btn-danger btn-sm\" onClick={updateOTA} item={device.friendly_name} title=\"Update OTA\" promt>Update OTA</Button>\n        default:\n            return <Button<string> className=\"btn btn-primary btn-sm\" onClick={checkOTA} item={device.friendly_name} title=\"Check OTA\">Check OTA</Button>\n\n\n    }\n}\nconst OtaRow: FunctionComponent<OtaRowProps & OtaApi> = (props) => {\n    const { device, state, ...rest } = props;\n    return <tr>\n        <td><Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link></td>\n\n        <td className=\"text-truncate text-nowrap position-relative\"><VendorLink device={device} /></td>\n        <td title={device?.definition?.description}><ModelLink device={device} /></td>\n        <td>\n            <StateCell device={device} state={state} {...rest} />\n        </td>\n    </tr>\n}\n\n\nclass OtaPage extends Component<GlobalState & OtaApi, {}> {\n    getAllOtaDevices() {\n        const { devices } = this.props;\n        return Array.from(devices).filter(([, device]) => device?.definition?.supports_ota)\n    }\n    checkAllOTA = () => {\n        const { checkOTA } = this.props;\n        const otaDevices = this.getAllOtaDevices();\n        otaDevices.forEach(([, d]) => checkOTA(d.friendly_name));\n    }\n    render() {\n        const { deviceStates, checkOTA, updateOTA } = this.props;\n        const otaApi = { checkOTA, updateOTA };\n        const otaDevices = this.getAllOtaDevices();\n\n        return <table className=\"table\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Friendly name</th>\n                    <th>Manufacturer</th>\n                    <th>Model</th>\n                    <th><Button className=\"btn btn-danger btn-sm\" onClick={this.checkAllOTA} promt>Check all OTA</Button></th>\n                </tr>\n            </thead>\n            <tbody>\n                {otaDevices.length === 0 ? <tr><td colSpan={4}>You don&apos;t have any devices that support OTA</td></tr> : null}\n                {otaDevices.map(([ieeeAddr, device]) => (\n                    <OtaRow key={ieeeAddr} device={device} state={deviceStates.get(device.friendly_name) as DeviceState} {...otaApi} />\n                ))}\n            </tbody>\n        </table>\n    }\n}\n\nconst mappedProps = [\"devices\", \"deviceStates\"];\n\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(OtaPage);\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Button from \"./button\";\nimport store from \"../store\";\nimport { download } from \"../utils\";\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\ntype ErrorBoundaryProps = RouteComponentProps<{}>;\n\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    state: Readonly<ErrorBoundaryState> = {};\n\n    static getDerivedStateFromError(error: Error) {\n        return { hasError: true, error };\n    }\n\n    donwloadState = () => {\n        download(store.getState(), 'state.json');\n    }\n\n    render() {\n        const { error } = this.state;\n\n        if (error) {\n            const githubUrlParams = {\n                title: `Got error: ${error.message}`,\n                body: [\n                    `DESCRIBE HERE WHAT HAPPENED AND WHAT YOU EXPECTED TO HAPPEN`,\n                    \"\\n\\n\\n\\n\\n\",\n\n                    `**Current url**: ${window.location.toString()}`,\n                    `**Previous url**: ${document.referrer}`,\n                    \"\\n\",\n                    `**Error type**: ${error?.name}`,\n                    `**Error message**: ${error?.message}`,\n                    \"\\n\\n\",\n                    error?.stack\n                ].join(\"\\n\")\n            } as Record<string, string>;\n\n\n            const githubUrl = `https://github.com/nurikk/z2m-frontend/issues/new?${new URLSearchParams(githubUrlParams).toString()}`\n            return <div className=\"container\">\n\n                <h1 className=\"text-danger\">Hello, you&apos;ve found a bug. Congratulations!</h1>\n                <ol>\n                    <li><strong>Calm down</strong></li>\n                    <li><strong>Raise a github issue <a target=\"_blank\" rel=\"noopener noreferrer\" href={githubUrl}>here</a></strong></li>\n                    <li><strong><span className=\"btn btn-link p-0\" onClick={this.donwloadState}>Download this file</span> and attach to the issue</strong></li>\n                    <li><strong>Take a screenshot of this page and attach to the issue</strong></li>\n                </ol>\n                <div>\n                    <div>{error.name}</div>\n                    <div>{error.message}</div>\n                    <pre>{error.stack}</pre>\n                </div>\n            </div>\n\n        }\n        return this.props.children;\n    }\n\n    componentDidUpdate(prevProps: ErrorBoundaryProps) {\n        const { location: { pathname } } = this.props;\n        const { location: { pathname: prevPathname } } = prevProps;\n        if (prevPathname !== pathname) {\n            this.setState({ error: undefined });\n        }\n    }\n}\n\n","import PowerSource from '../../components/power-source';\nimport React from 'react';\nimport styles from './DeviceFooter.scss';\nimport { Device, DeviceDefinition, DeviceState, GenericExposedFeature } from '../../types';\nimport { lastSeen } from '../../utils';\n\n\ntype Props = {\n    device: Device;\n    deviceState: DeviceState;\n};\n\nconst footerFeatures = [\n    \"linkquality\"\n];\n\nconst DeviceFooter: React.FC<Props> = ({ device, deviceState }) => {\n    const {\n        last_seen: lastSeenTime,\n        linkquality,\n    } = deviceState;\n    const { exposes } = device.definition as DeviceDefinition;\n    const rederedFeatures = [] as JSX.Element[];\n    (exposes as GenericExposedFeature[])\n        .filter(e => footerFeatures.includes(e.name))\n        .forEach(e => {\n            switch (e.name) {\n                case \"linkquality\":\n                    rederedFeatures.push(<span key=\"linkquality\" className=\"me-1\"><i className=\"fa fa-signal fa-fw\" /> {linkquality} LQI</span>);\n                    break;\n                default:\n                    break;\n            }\n        });\n\n    rederedFeatures.push(<PowerSource key={\"power\"} source={device.power_source} battery={deviceState.battery as number} />);\n    return (\n        <footer className={`card-footer ${styles.footer}`}>\n            <div className=\"row justify-content-between flex-nowrap\">\n                <div title=\"last update\" className={`col text-truncate`}>\n                    {lastSeen(lastSeenTime)}\n                </div>\n                <div className=\"col col-auto text-truncate\">\n                    {rederedFeatures}\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default DeviceFooter;\n","import React from 'react';\nimport { CompositeFeature } from '../../types';\nimport cx from \"classnames\";\nimport { BaseFeatureProps } from '../features/base';\nimport DeviceFooter from './DeviceFooter';\n\nimport styles from './DashboardDevice.scss';\n\nimport { Link } from 'react-router-dom';\nimport { genDeviceDetailsLink } from '../../utils';\n\nimport Composite from '../features/composite/composite';\nimport DeviceImage from '../device-image';\n\ntype Props = BaseFeatureProps<CompositeFeature>;\n\nconst genericRendererIgnoredNames = ['linkquality', 'battery', 'battery_low'];\n\nconst DashboardDevice: React.FC<Props> = ({ onChange, onRead, device, deviceState, feature: { features }, featureWrapperClass }) => {\n\n    const filteredFeatures = features\n        // .filter(({ property, access }) => deviceState[property] !== undefined || (access & FeatureAccessMode.ACCESS_WRITE))\n        .filter(({ name }) => !genericRendererIgnoredNames.includes(name))\n\n    return (\n        <div className=\"col-xl-3 col-lg-4 col-sm-6 col-12 mb-3\">\n            <div className={`${styles.card} card`}>\n                <div className=\"card-header text-truncate\">\n                    <Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link>\n                </div>\n                <div className={`${styles.cardBody} card-body row`}>\n                    <DeviceImage device={device} className={cx(styles.deviceImage, 'col col-1')} />\n                    <div className=\"col col-11\">\n                        <Composite feature={{ features: filteredFeatures } as CompositeFeature}\n                            type=\"composite\"\n                            device={device}\n                            deviceState={deviceState}\n                            onChange={onChange}\n                            onRead={onRead}\n                            featureWrapperClass={featureWrapperClass}\n                            minimal={true}\n                        />\n                    </div>\n                </div>\n                <DeviceFooter\n                    device={device}\n                    deviceState={deviceState}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardDevice;\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"bZ7OvdEtCQEqsLP9B5vk3\",\"cardBody\":\"_9GoFRy3Sbc7q-NdGCStta\",\"deviceImage\":\"_2sZwYIX5ipSoyWG2H7AU79\",\"exposes\":\"YK86TuNaxBWMzsQJ2Nf7l\"};","import camelCase from \"lodash/camelCase\";\nimport startCase from \"lodash/startCase\";\nimport React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { FeatureAccessMode } from \"../../types\";\nimport { FetatureWrapperProps } from \"../features/composite/FeatureWrapper\";\nimport styles from \"./DashboardFeatureWrapper.scss\";\n\n\nconst getTemperatureIcon = (temperature: number) => {\n    let icon = 'fa-thermometer-empty';\n    if (temperature >= 30) {\n        icon = 'fa-thermometer-full';\n    } else if (temperature >= 25) {\n        icon = 'fa-thermometer-three-quarters';\n    } else if (temperature >= 20) {\n        icon = 'fa-thermometer-half';\n    } else if (temperature >= 15) {\n        icon = 'fa-thermometer-quarter';\n    }\n    return icon;\n};\n\n\n\nconst typeToClassMap = {\n    humidity: ['text-info', 'fa-tint'],\n    illuminance: ['fa-sun'],\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    illuminance_lux: ['fa-sun'],\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    soil_moisture: ['fa-fill-drip']\n};\nconst getGenericFeatureIcon = (name: string, value: unknown): string => {\n    let classes = [] as string[];\n    switch (name) {\n        case 'temperature':\n            classes.push(getTemperatureIcon(value as number));\n            classes.push('text-danger');\n            break;\n        case 'contact':\n            if (value) {\n                classes.push('fa-door-closed text-muted')\n            } else {\n                classes.push('fa-door-open text-primary');\n            }\n            break;\n        case 'occupancy':\n            classes.push('fa-walking');\n            if (value) {\n                classes.push('text-warning');\n            }\n            break;\n\n        case 'water_leak':\n            classes.push('fa-water');\n            if (value) {\n                classes.push('text-primary');\n            }\n            break;\n        default:\n            classes = [...classes, ...(typeToClassMap[name] ?? [])];\n            break;\n    }\n    if (!classes.length) {\n        classes.push('invisible');\n    }\n    return classes.join(' ');\n}\n\nexport const DashboardFeatureWrapper: FunctionComponent<PropsWithChildren<FetatureWrapperProps>> = (props) => {\n    const { children, feature, onRead, deviceState = {} } = props;\n    const isColor = feature.name?.startsWith(\"color_\"); //hardcode for color\n    const isReadable = (feature.access & FeatureAccessMode.ACCESS_READ) || isColor;\n    // const { feature, deviceState } = props;\n    const icon = getGenericFeatureIcon(feature.name, deviceState[feature.property]);\n\n    return <div className={styles.entity}>\n        {icon && <div className={styles.icon}>\n            <i className={`fa fa-fw ${icon}`} />\n        </div>}\n        <div className={styles.title}>{startCase(camelCase(feature.name))}</div>\n        <div className={styles.value}>{children}</div>\n    </div>\n    // return <div className=\"row border-bottom pt-1\" >\n    //   <div className=\"col-12 col-md-3\">\n    //     <label className=\"col-form-label w-100\">\n    //       <div className=\"d-flex justify-content-between\">\n    //         <strong title={JSON.stringify(feature)}>{feature.name}</strong>\n    //         {isReadable ? (\n    //           <Button<CompositeFeature | GenericExposedFeature> item={feature} onClick={(item) => {\n    //             onRead(feature.endpoint as Endpoint, { [item.property]: \"\" })\n    //           }} className=\"btn btn-primary btn-sm\"><i className=\"fa fa-sync\"></i></Button>\n    //         ) : null}\n    //       </div>\n    //       {feature.description ? <small className=\"d-block text-muted\">{feature.description}</small> : null}\n    //     </label>\n    //   </div>\n    //   <div className=\"col-12 col-md-9 d-flex align-items-center\">\n    //     {children}\n    //   </div>\n    // </div>\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"entity\":\"_3vDO0eQKmoNZIQosHcrbGF\",\"icon\":\"_2Q_DIKrip62Fo7A4H0I_g7\",\"title\":\"_3x4PvPBrHUW901XxjqRzAq\",\"value\":\"aR8to4EF-EXQK6qZWTVdS\"};","import React, { FunctionComponent, PropsWithChildren } from 'react';\n\n\nimport { connect } from 'unistore/react';\n\n\nimport DashboardDevice from './DashboardDevice';\nimport { DeviceState, CompositeFeature } from '../../types';\nimport actions from '../../actions/actions';\nimport { StateApi } from \"../../actions/StateApi\";\nimport { GlobalState } from '../../store';\nimport { DashboardFeatureWrapper } from './DashboardFeatureWrapper';\n\n\n\n\ntype Props = Pick<GlobalState, 'devices' | 'deviceStates'> & StateApi;\n\n\n\n\nconst Dashboard: React.FC<Props> = (props) => {\n    const { setDeviceState, getDeviceState } = props;\n    return (\n\n        <div className=\"container-fluid\">\n            <div className=\"row my-4 align-items-stretch\">\n                {Array.from(props.devices).filter(([, device]) => device.supported).map(([key, device]) => {\n                    const deviceState = props.deviceStates.get(device.friendly_name) ?? ({} as DeviceState);\n                    return (\n                        <DashboardDevice\n                            key={key}\n                            feature={{ features: device.definition?.exposes } as CompositeFeature}\n                            device={device}\n                            deviceState={deviceState}\n                            onChange={(endpoint, value) =>\n                                setDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                            }\n                            onRead={(endpoint, value) =>\n                                getDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                            }\n                            featureWrapperClass={DashboardFeatureWrapper}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n\n    );\n};\n\nconst mappedProps = ['devices', 'deviceStates'];\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(Dashboard);\n","import \"notyf/notyf.min.css\";\nimport './styles/styles.global.scss';\n\n\nimport React, { Component, FunctionComponent } from 'react';\n\nimport ConnectedMap from \"./components/map\";\n\nimport {\n    Switch,\n    Route,\n    HashRouter\n} from \"react-router-dom\";\n\nimport ConnectedDevicePage from \"./components/device-page\";\nimport TouchlinkPage from \"./components/touchlink-page\";\n\nimport store from \"./store\";\nimport { Provider } from \"unistore/react\";\nimport api from './api';\n\n\nimport ConnectedSettingsPage from \"./components/settings\";\nimport NavBar from \"./components/navbar\";\nimport ConnectedGroupsPage from \"./components/groups\";\nimport ConnectedZigbeePage from \"./components/zigbee\";\nimport LogsPage from \"./components/logs-page\";\nimport OtaPage from \"./components/ota-page\";\nimport ReactDOM from \"react-dom\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport DashboardPage from \"./components/dashboard-page\";\n\nconst ConnectedDevicePageWrap: FunctionComponent<{ dev: string }> = ({ dev }) => (\n    <ConnectedDevicePageWrap dev={dev} />\n);\n\n\napi.connect();\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Main extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <HashRouter>\n                    <NavBar />\n                    <Switch>\n                        <Route path=\"/ota\" render={(props) => <ErrorBoundary {...props}><OtaPage /></ErrorBoundary>} />\n                        <Route path=\"/map\" render={(props) => <ErrorBoundary {...props}><ConnectedMap /></ErrorBoundary>} />\n                        <Route path=\"/device/:dev/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedDevicePage /></ErrorBoundary>} />\n                        <Route path=\"/settings/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedSettingsPage /></ErrorBoundary>} />\n                        <Route path=\"/groups\" render={(props) => <ErrorBoundary {...props}><ConnectedGroupsPage /></ErrorBoundary>} />\n                        <Route path=\"/logs\" render={(props) => <ErrorBoundary {...props}><LogsPage /></ErrorBoundary>} />\n                        <Route path=\"/touchlink\" render={(props) => <ErrorBoundary {...props}><TouchlinkPage /></ErrorBoundary>} />\n                        <Route path=\"/dashboard\" render={(props) => <ErrorBoundary {...props}><DashboardPage /></ErrorBoundary>} />\n                        <Route path=\"/\" render={(props) => <ErrorBoundary {...props}><ConnectedZigbeePage /></ErrorBoundary>} />\n                    </Switch>\n                </HashRouter>\n            </Provider >\n\n        );\n    }\n}\n\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}