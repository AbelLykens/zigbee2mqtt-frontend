class MyExampleExtension_TS_ {
    constructor(zigbee, mqtt, state, publishEntityState, eventBus, settings, logger) {
        logger.info('Loaded  MyExampleExtension_TS_');
        mqtt.publish('example/extension', 'hello from MyExampleExtension_TS_');
        this.mqttBaseTopic = settings.get().mqtt.base_topic;
        this.eventBus = eventBus;
        this.mqtt = mqtt;
        this.eventBus.on('stateChange', this.onStateChange.bind(this), this.constructor.name);
    }

    async onStateChange(data) {
        const { ID, from, to, reason, change } = data;
        // console.log({ID, change});
        const myRemoteIeeeAddre= '0x00158d000224154d'; // change this
        const myLampIeeAddr = '0x00124b001e73227f'; // change this
        //example how to toggle state
        if (ID === myRemoteIeeeAddre) { //state changed for myRemote (clicked a button)
            if (change.action === 'single') {
                this.mqtt.onMessage(`${this.mqttBaseTopic}/${myLampIeeAddr}/set`, JSON.stringify({state: 'toggle'}));
            }
        }
    }

    async onMQTTMessage(topic, message) {
        // console.log({topic, message});
    }

    async stop() {
        this.eventBus.removeListenersExtension(this.constructor.name);
    }
}

module.exports = MyExampleExtension_TS_;
