{"version":3,"sources":["webpack://zigbee2mqtt-frontend/./src/components/map/map.css?4978","webpack://zigbee2mqtt-frontend/./src/components/map/links.tsx","webpack://zigbee2mqtt-frontend/./src/utils.ts","webpack://zigbee2mqtt-frontend/./src/components/device-image/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/nodes.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/types.ts","webpack://zigbee2mqtt-frontend/./src/store.ts","webpack://zigbee2mqtt-frontend/./src/api.ts","webpack://zigbee2mqtt-frontend/./src/actions/BridgeApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/DeviceApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/GroupsApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/StateApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/OtaApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/BindApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/TouchlinkApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/actions.ts","webpack://zigbee2mqtt-frontend/./src/components/button/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/consts.ts","webpack://zigbee2mqtt-frontend/./src/components/spinner.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/modal/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-control/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/vendor-links/verndor-links.tsx","webpack://zigbee2mqtt-frontend/./src/components/power-source/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/info.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/endpoint-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/cluster-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/bind-row.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/bind.tsx","webpack://zigbee2mqtt-frontend/./src/components/attribute-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/reporting-row.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/reporting.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/states.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/type-guards.ts","webpack://zigbee2mqtt-frontend/./src/types.ts","webpack://zigbee2mqtt-frontend/./src/components/display-value/DisplayValue.tsx","webpack://zigbee2mqtt-frontend/./src/components/toggle/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/base.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/binary/binary.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/climate/climate.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/cover/cover.tsx","webpack://zigbee2mqtt-frontend/./src/components/color-editor/color-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/color/color.tsx","webpack://zigbee2mqtt-frontend/./src/components/enum-editor/enum-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/enum/enum.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/light/light.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/lock/lock.tsx","webpack://zigbee2mqtt-frontend/./src/components/range-editor/range-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/numeric/numeric.tsx","webpack://zigbee2mqtt-frontend/./src/components/textual-editor/textual-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/textual/textual.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/switch/switch.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/Feature.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/composite.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/FeatureWrapper.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/exposes.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/clusters.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/settings.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/touchlink-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/settings/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/navbar/index.tsx","webpack://zigbee2mqtt-frontend/./src/hooks/useComponentVisible.tsx","webpack://zigbee2mqtt-frontend/./src/components/navbar/style.css?01da","webpack://zigbee2mqtt-frontend/./src/hooks/useOnClickOutside.tsx","webpack://zigbee2mqtt-frontend/./src/components/groups/RenameForm.tsx","webpack://zigbee2mqtt-frontend/./src/hooks/useInputChange.ts","webpack://zigbee2mqtt-frontend/./src/components/groups/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/groups/style.css?e996","webpack://zigbee2mqtt-frontend/./src/components/zigbee/ActionTH.tsx","webpack://zigbee2mqtt-frontend/./src/components/zigbee/style.css?5857","webpack://zigbee2mqtt-frontend/./src/components/zigbee/TableHeader.tsx","webpack://zigbee2mqtt-frontend/./src/components/zigbee/TableRow.tsx","webpack://zigbee2mqtt-frontend/./src/components/zigbee/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/logs-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/ota-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/ErrorBoundary.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DeviceFooter.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardDevice.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardDevice.scss?8dc3","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardFeatureWrapper.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/state-notifier/StateNotifier.tsx","webpack://zigbee2mqtt-frontend/./src/index.tsx"],"names":["Link","props","linkType","id","rest","className","strokeWidth","fill","LinkLabel","link","linkqualities","join","links","ref","useRef","useLayoutEffect","current","selectAll","data","length","map","sourceIeeeAddr","targetIeeeAddr","key","xlinkHref","genDeviceDetailsLink","deviceIdentifier","toHex","input","padding","repeat","toString","substr","toUpperCase","lastSeen","elapsed","diff","undefined","Date","now","parse","sanitizeGraph","inGraph","nodes","Map","forEach","node","ieeeAddr","sort","a","b","relationship","src","source","dst","target","linkId","repeatedLink","get","type","push","linkquality","relationships","set","console","warn","Array","from","values","randomString","len","Math","random","replacer","value","originalObject","this","dataType","entries","serialize","JSON","stringify","download","filename","blob","Blob","url","window","URL","createObjectURL","document","createElement","body","appendChild","href","setTimeout","click","revokeObjectURL","removeChild","getEndpoints","obj","endpoints","keys","members","g","endpoint","stringifyWithPreservingUndefinedAsNull","k","v","genericDeiviceImageFallback","device","AVALIABLE_GENERATORS","deviceName","definition","model","replace","modelName","model_id","useState","imageGenerators","setimageGenerators","deviceStatus","onImageError","newGenerators","shift","otaSpinner","update","state","title","interviewSpinner","interviewing","unseccessfullInterview","interview_completed","onError","getStarShape","innerCircleArms","innerRadius","outerRadius","angle","PI","totalArms","points","i","r","cos","sin","createRef","onMouseOut","onMouseOver","onDblClick","componentDidMount","render","deviceType","cn","onDoubleClick","width","height","friendlyName","Component","toggle","updateDrag","simulation","root","dragForce","drag","on","event","d","active","alphaTarget","restart","fx","x","fy","y","call","componentDidUpdate","Node","ZigbeeRelationship","str","initialState","TOKEN_LOCAL_STORAGE_ITEM_NAME","AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME","notyf","blacklistedMessages","showNotity","msg","message","level","status","isResponseWithStatus","error","success","requests","transactionNumber","send","topic","payload","debug","startsWith","transactionRndPreffix","promise","Promise","resolve","reject","socket","transaction","urlProvider","token","localStorage","getItem","prompt","setItem","searchParams","append","procsessBridgeMessage","bridgeConfig","bridgeInfo","bridgeState","dev","Object","ieee_address","devices","groups","newLogs","slice","logs","every","val","test","response","networkGraphIsLoading","networkGraph","payloadData","touchlinkScanInProgress","touchlinkDevices","found","touchlinkIdentifyInProgress","touchlinkResetInProgress","resolvePromises","onClose","e","code","removeItem","location","reload","onMessage","deviceStates","newDeviceStates","connect","addEventListener","has","delete","apiUrl","host","pathname","Api","protocol","setPermitJoin","permit","friendly_name","updateBridgeConfig","options","restartBridge","renameDevice","to","homeassistantRename","removeDevice","force","block","configureDevice","name","setDeviceOptions","createGroup","group","removeGroup","addDeviceToGroup","removeDeviceFromGroup","renameGroup","oldName","newName","setStateValue","setDeviceState","getDeviceState","checkOTA","updateOTA","bindOp","operation","params","addBind","removeBind","touchlinkScan","touchlinkIdentify","touchlinkReset","store","networkMapRequest","setState","routes","exportState","configureReport","config","onClick","item","promt","confirmed","confirm","children","linkTypes","NeigbhorIsParent","NeigbhorIsAChild","NeigbhorIsASibling","NoneOfTheAbove","role","_calc","fn","offset","s","t","accessor","atan2","parentOrChild","linkStrregth","includes","distancesMap","BrokenLink","Router2Router","Coordinator2Router","Coordinator2EndDevice","EndDevice2Router","getDistance","ticked","transform","linkLabel","apply","x1","y1","x2","slope","attr","computeLink","applyX","applyY","processHighlights","selectedNode","linkedByIndex","Set","n","add","l","neighboring","computeOpacity","style","o","svgRef","visibleLinks","legendIsVisible","updateNodes","container","filter","concat","everything","extent","scaleExtent","zoomHandler","onRequestClick","onLinkTypeFilterChange","stateVisibleLinks","checked","inValue","parseInt","updateForces","distance","strength","initPage","getBoundingClientRect","renderMap","viewBox","renderMessage","renderMapControls","onChange","htmlFor","Fragment","MapComponent","ModalHeader","ModalBody","ModalFooter","el","split","classList","componentWillUnmount","openModal","closeModal","remove","isOpen","prevProps","display","BodyEnd","isRenameModalOpened","isDeviceRemovalModalOpened","renameParams","isHassRename","removeParams","onRenameClick","onRemoveClick","toggleRenameModal","toggleDeviceRemovalModal","onHassEntityIdChange","onFriendlyNameChange","onDeviceRemovalParamChange","renderRenameButton","homeassistant","renderDeviceRemovalButton","checks","label","check","DeviceControlGroup","normalizeModel","re","RegExp","VendorLink","supported","encodeURIComponent","vendor","toLowerCase","rel","ModelLink","acnchor","battery","batteryLow","showLevel","batteryClass","markdownLinkRegex","displayProps","if","result","exec","description","content","supports","network_address","power_source","battery_low","prop","DeviceInfo","onSelect","find","hidden","devicesOptions","getDeviceDisplayName","groupOptions","disabled","hasOnlyOneEP","ep","unshift","PickerType","clusterDescriptions","genPowerCfg","genScenes","genOnOff","genLevelCtrl","lightingColorCtrl","closuresWindowCovering","genMultistateInput","genGroups","genOta","touchlink","genIdentify","msTemperatureMeasurement","msIlluminanceMeasurement","msRelativeHumidity","msPressureMeasurement","msSoilMoisture","isClusterGroup","clusters","pickerId","pickerType","MULTIPLE","renderMultiPicker","renderSinglePicker","cluster","stateRule","setSourceEp","sourceEp","setDestination","destination","setDestinationEp","destinationEp","setClusters","onBindOrUnBindClick","action","onUnBind","onBind","getBidningParams","getDerivedStateFromProps","targeDevice","isValidRule","valid","targetType","sourceEndpoints","rule","getTarget","destinationEndpoints","possibleClusters","destEndpoint","output","isNew","rule2key","bidingRules","bindings","targetId","convertBidningsIntoNiceStructure","renderBody","idx","Bind","attrs","clusterDefinition","attributes","getClusters","availableClusters","requiredRuleFileds","field","setCluster","setAttribute","attribute","changeHandler","applyRule","onApply","disableRule","maximum_report_interval","SINGLE","minimum_report_interval","required","placeholder","reportable_change","reportingRules","reportings","configured_reportings","reportingRule","Reporting","deviceState","States","isLightFeature","feature","isCompositeFeature","FeatureAccessMode","booleansMap","contact","occupancy","water_leak","tamper","_default","DisplayValue","mapValue","ControlButton","valueOn","valueOff","minimal","valueExists","showOnOffButtons","BaseViewer","property","unit","NoAccessError","access","ACCESS_WRITE","ACCESS_STATE","stepsConfiguration","position","tilt","toRGB","sourceFormat","X","Z","Y","hue","saturation","rgbToTargetFormat","targetFormat","hex","pridePallete","format","steps","currentColor","setCurrentColor","useEffect","step","backgroundColor","minWidth","features","innerFeature","color","isPrimitive","selectedValue","brightness","inputY","yRange","xRange","xMin","xMax","yMin","kelvin","min","max","currentValue","setCurrentValue","showRange","valueAsNumber","onMouseUp","onBlur","presets","valueMax","valueMin","Feature","onRead","FeatureWrapper","genericParams","featureWrapperClass","wrapperParams","isBinaryFeature","isNumericFeature","isTextualFeature","isEnumFeature","isSwitchFeature","isCoverFeature","isLockFeature","isColorFeature","isClimateFeature","onApplyClick","f","groupedFeatures","epName","featuresGroup","isColor","isReadable","ACCESS_READ","exposes","Exposes","ClustersComp","tree","epData","uiSchema","updateConfig","formData","configSchema","deviceConfig","device_options","schema","definitions","onSubmit","DeviceSettings","renderContent","match","tab","getDeviceLinks","activeClassName","devicePageWithRouter","DevicePage","onIdentifyClick","onResetClick","renderTouchlinkDevices","touchlinkInProgress","scope","touchlinkDevice","channel","renderNoDevices","TouchlinkPage","ROOT_KEY_NAME","ingoredFields","validJsonSchemasAsTabs","removePropertiesFromSchema","names","properties","tabs","keyName","onSettingsSave","renderCategoriesTabs","renderSwitcher","renderTools","renderBridgeInfo","renderAbout","renderSettings","zigbee2mqttVersion","version","zigbee2mqttCommit","commit","rows","coordinator","meta","revision","row","getSettingsTabs","oneOf","getSettingsInfo","originalConfig","configAndSchema","currentSchema","currentConfig","ignoreTabNames","renderSettingsTabs","preventDefault","SettingsPageWithRouter","SettingsPage","urls","exact","StartStopJoinButton","initialIsVisible","isComponentVisible","setIsComponentVisible","handleHideDropdown","handleClickOutside","contains","removeEventListener","useComponentVisible","selectedRouter","setSelectedRouter","routers","selectAndHide","permit_join","show","navbarIsVisible","setnavbarIsVisible","handler","listener","useOnClickOutside","restart_required","RenameGroupForm","onRename","modalIsOpened","setModalIsOpened","setInput","currentTarget","useInputChange","renameGroupForm","handleInputChange","getDeviceObj","groupAddress","rowNumber","onRemove","deviceFriendlyName","groupMemebershipInfo","DeviceGroupRow","onDeviceSelect","onEpChange","deviceObj","newGroupName","newGroupId","onGroupCreateSubmit","groupFriendlyName","renderGroupCreationForm","renderGroups","DeviceGroup","AddDeviceToGroup","reverse","GroupsPage","stopPropagation","column","renderArrow","currentDirection","TableHeader","sortColumn","sortDirection","onSortChange","lastSeenIsAvaliable","TableRow","last_seen","storeKey","saveState","storeData","handleLongLoading","size","sortDir","currentTime","sortedTableData","restoreState","storedState","restored","tableData","renderError","renderDevicesTable","advanced","ZigbeeTable","ALL","TextWrapper","text","Highlighted","highlight","trim","regex","parts","part","logLevels","search","logLevel","renderSearch","_search","LogsPage","StateCell","secs","progress","remaining","floor","OtaRow","date_code","software_build_id","checkAllOTA","getAllOtaDevices","supports_ota","otaApi","otaDevices","colSpan","OtaPage","donwloadState","getDerivedStateFromError","hasError","githubUrlParams","referrer","stack","githubUrl","URLSearchParams","footerFeatures","lastSeenTime","rederedFeatures","typeToClassMap","humidity","illuminance","pressure","co2","voltage","power","energy","frequency","smoke","radiation_dose_per_hour","radioactive_events_per_minute","power_factor","color_xy","color_hs","color_temp","illuminance_lux","soil_moisture","DashboardFeatureWrapper","icon","temperature","classes","getGenericFeatureIcon","genericRendererIgnoredNames","whitelistFeatureNames","whitelistFeatureTypes","nullish","onlyValidFeaturesForDashboard","filteredOutFeature","isArray","filteredFeatures","modalOpened","setModalOpened","path","Main","getElementById"],"mappings":"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","file":"main.2e03bc3fa3ebb0ea8096.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"_1TK12NlMUcpu0IZGw5KG9F\",\"img\":\"-vLZFy4QqTaA5Lql2j7WL\",\"node\":\"_3VABKCYaUBV0N55MRkEiCg\",\"link\":\"_2MMYgLsCQ5mPT-AJSdZ4Uz\",\"linkLabel\":\"EFSV-Lj6sJyoW14QA3ig0\",\"links\":\"_3m9RTJKJZqiJx1UmLLzi4\",\"nodes\":\"_1RxBn1bAxqYxk5W0mPwZMS\",\"EndDevice\":\"JhUbmgThutQMk8laPcsxg\",\"Coordinator\":\"_3F14ZWmKtSPPHai2y_MRRj\",\"Router\":\"_1I1ZcuMgRbn_B5HXF9Z2mw\",\"BrokenLink\":\"_3FeEi6FG3R9pYpboNF-OBu\",\"Coordinator2Router\":\"_2cFMSmedVqD5hjj2K7XpsQ\",\"Router2Coordinator\":\"_3KnTt0kzrMwLh56UMBBqwe\",\"Router2Router\":\"_3HeSfltIQjH_mQxhaoHnCs\",\"Coordinator2EndDevice\":\"_2zGuiMZ7r-Z4mfRvCVQEAp\",\"EndDevice2Coordinator\":\"_35uGMHQCj1Sx5FyJk5-Ec1\",\"Router2EndDevice\":\"_1nD8O-bIFFZWctv6x4zD8j\",\"EndDevice2Router\":\"_2tVxslI3DwN1gBA6s3V24b\",\"foreignObject\":\"_1PgTRqMkYD7R1RqIF7R5ni\",\"offline\":\"_3goiiMv86rV5wazL6jDpjU\",\"controls\":\"RIAc5GeET4TLTKyCVy7yK\"};","import { LinkI } from \"./types\";\nimport React, { FunctionComponent, RefObject, useLayoutEffect, useRef } from \"react\";\nimport style from \"./map.css\";\nimport cx from \"classnames\";\nimport { select } from \"d3-selection\";\n\ninterface LinkProps {\n    link: LinkI;\n    id?: string;\n}\n\nconst Link: FunctionComponent<LinkProps> = props => {\n    const { link: { linkType }, id, ...rest } = props;\n    return <path\n        id={id}\n        className={cx(style.link, style[linkType])}\n        strokeWidth={1}\n        fill=\"transparent\"\n        {...rest}\n    />;\n};\n\ninterface LinkLabelProps extends LinkProps {\n    xlinkHref: string;\n}\n\nconst LinkLabel: FunctionComponent<LinkLabelProps> = props => {\n    const { link } = props;\n    return <text className={style.linkLabel}>{link.linkqualities.join('/')}</text>;\n};\n\ninterface LinksPros {\n    links: LinkI[];\n}\n\nconst Links: FunctionComponent<LinksPros> = props => {\n    const { links } = props;\n    const ref = useRef<SVGGElement>();\n    useLayoutEffect(() => {\n        select(ref.current as SVGGElement).selectAll(`.${style.link}`).data(links);\n        select(ref.current as SVGGElement).selectAll(`.${style.linkLabel}`).data(links);\n    }, [links.length]);\n\n    return (\n        <g ref={ref as RefObject<SVGGElement>} className={style.links}>\n            {links.map((link: LinkI) => <Link\n                id={`edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                key={`link${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                link={link}\n            />)}\n            {links.map((link: LinkI) => (\n                <LinkLabel\n                    xlinkHref={`#edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                    key={`label${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                    link={link}\n                />\n            ))}\n        </g>\n    );\n};\nexport default Links;\n","\nimport { Device, Endpoint } from \"./types\";\nimport { GraphI, LinkI, NodeI } from \"./components/map/types\";\nimport { format, TDate } from 'timeago.js';\nimport { Group } from \"./store\";\n\nexport const genDeviceDetailsLink = (deviceIdentifier: string | number): string => (`/device/${deviceIdentifier}`);\n\nexport const toHex = (input: number, padding = 4): string => {\n    return `0x${(`${'0'.repeat(padding)}${input.toString(16)}`).substr(-1 * padding).toUpperCase()}`;\n};\n\n\nexport const toHHMMSS = (secs: number): string => {\n    if (!secs) {\n        return 'N/A';\n    }\n    const hours = Math.floor(secs / 3600);\n    const minutes = Math.floor(secs / 60) % 60;\n    const seconds = Math.floor(secs % 60);\n\n    return [hours, minutes, seconds]\n        .map(v => v < 10 ? `0${v}` : v)\n        .filter((v, i) => v !== \"00\" || i > 0)\n        .join(\":\");\n};\n\nexport type CallbackHandler<T> = (err: boolean, res: T) => void;\nexport interface ApiResponse<T> {\n    success: boolean;\n    result: T;\n}\n\nexport const lastSeen = (lastSeen?: string | number, elapsed?: number): string => {\n    if (!lastSeen && !elapsed) {\n        return \"N/A\";\n    }\n    let diff: TDate;\n    if (elapsed !== undefined) {\n        diff = Date.now() - elapsed;\n    } else {\n        if (typeof lastSeen === \"string\") {\n            diff = Date.parse(lastSeen);\n        } else {\n            diff = new Date(lastSeen as number);\n        }\n    }\n    return format(diff);\n};\n\n\nexport const sanitizeGraph = (inGraph: GraphI): GraphI => {\n    const nodes = {};\n    const links = new Map<string, any>();\n\n    inGraph.nodes.forEach(node => {\n        nodes[node.ieeeAddr] = node;\n    });\n\n    inGraph.links.sort((a, b) => a.relationship - b.relationship).forEach(link => {\n        const src: NodeI = nodes[link.source.ieeeAddr];\n        const dst: NodeI = nodes[link.target.ieeeAddr];\n        if (src && dst) {\n            const linkId = [link.source.ieeeAddr, link.target.ieeeAddr].sort().join('');\n            const repeatedLink = links.get(linkId);\n            const linkType = [src.type, dst.type].join('2');\n            if (repeatedLink) {\n                repeatedLink.linkqualities.push(link.linkquality);\n                repeatedLink.relationships.push(link.relationship);\n            } else {\n                links.set(linkId, { ...link, ...{ source: link.source.ieeeAddr, linkType, target: link.target.ieeeAddr, linkqualities: [link.linkquality], relationships: [link.relationship] } });\n            }\n        } else {\n            console.warn(\"Broken link\", link);\n        }\n    });\n\n    inGraph.links = Array.from(links.values());\n    return inGraph;\n};\n\nexport const getDeviceDisplayName = (device: Device): string => {\n    return `${device.friendly_name} ${device.definition?.model ? `(${device.definition?.model})` : ''}`;\n};\n\nexport const randomString = (len: number): string => Math.random().toString(36).substr(2, len);\n\nexport const isSecurePage = (): boolean => location.protocol === 'https:';\n\n\nexport const scale = (inputY: number, yRange: Array<number>, xRange: Array<number>): number => {\n    const [xMin, xMax] = xRange;\n    const [yMin, yMax] = yRange;\n\n    const percent = (inputY - yMin) / (yMax - yMin);\n    const outputX = percent * (xMax - xMin) + xMin;\n\n    return outputX;\n};\n\n\n\n\nfunction replacer(key: string, value: object) {\n    const originalObject = this[key];\n    if (originalObject instanceof Map) {\n        return {\n            dataType: 'Map',\n            value: Array.from(originalObject.entries()),\n        };\n    } else {\n        return value;\n    }\n}\n\nfunction reviver(key: string, value: { dataType: string; value: Iterable<readonly [unknown, unknown]>; }) {\n    if (typeof value === 'object' && value !== null) {\n        if (value.dataType === 'Map') {\n            return new Map(value.value);\n        }\n    }\n    return value;\n}\n\nexport const serialize = (data: object) => {\n    return JSON.stringify(data, replacer);\n}\n\nexport const deSerialize = (str: string) => {\n    return JSON.parse(str, reviver);\n}\n\n\nexport const download = (data: object, filename: string): void => {\n    const blob = new Blob([serialize(data)], { type: 'octet/stream' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.href = url;\n    a.download = filename;\n\n    setTimeout(() => {\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n    }, 1);\n\n}\n\nexport const sanitizeZ2MDeviceName = (deviceName?: string): string => deviceName ? deviceName.replace(/:|\\s|\\//g, \"-\") : \"NA\";\n\n\nexport const getEndpoints = (obj: Device | Group): Endpoint[] => {\n    if (!obj) {\n        return [];\n    } else if ((obj as Device).endpoints) {\n        return Array.from((obj as Device).endpoints.keys());\n    } else if ((obj as Group).members) {\n        return (obj as Group).members.map(g => g.endpoint);\n    }\n    return [];\n}\n\n\nexport const stringifyWithPreservingUndefinedAsNull = (data: object): string => JSON.stringify(data, (k, v) => v === undefined ? null : v)\n\n\n\nexport const isOnlyOneBitIsSet = (b: number): number | boolean => {\n    return b && !(b & (b - 1));\n}\n","import React, { FunctionComponent, ImgHTMLAttributes, useState } from \"react\";\nimport genericDevice from \"../../images/generic-zigbee-device.png\";\nimport { Device, DeviceState } from \"../../types\";\nimport cx from \"classnames\";\nimport { sanitizeZ2MDeviceName } from \"../../utils\";\ntype DeviceImageProps = {\n    device: Device;\n    deviceStatus?: DeviceState;\n    type?: \"img\" | \"svg\";\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst genericDeiviceImageFallback = (device: Device): string => genericDevice;\nconst genSlsDeviceImageUrlZ2M = (device: Device): string => `https://www.zigbee2mqtt.io/images/devices/${sanitizeZ2MDeviceName(device?.definition?.model)}.jpg`;\n\nconst sanitizeModelIDForImageUrl = (modelName: string): string => modelName?.replace(\"/\", \"_\");\n\nexport const genSlsDeviceImageUrlSLS = (device: Device): string => (`https://slsys.github.io/Gateway/devices/png/${sanitizeModelIDForImageUrl(device.model_id)}.png`);\n\n\nconst AVALIABLE_GENERATORS = [\n    genSlsDeviceImageUrlZ2M, genSlsDeviceImageUrlSLS, genericDeiviceImageFallback\n]\n\nconst DeviceImage: FunctionComponent<DeviceImageProps & ImgHTMLAttributes<HTMLDivElement | SVGImageElement>> = (props) => {\n    const [imageGenerators, setimageGenerators] = useState(AVALIABLE_GENERATORS);\n    const { device, deviceStatus, type = \"img\", className, ...rest } = props;\n    let src = genericDeiviceImageFallback(device);\n    if (device?.definition?.model && imageGenerators.length) {\n        src = imageGenerators[0](device);\n    }\n\n    const onImageError = () => {\n        const newGenerators = [...imageGenerators];\n        newGenerators.shift();\n        setimageGenerators(newGenerators);\n    };\n    const otaSpinner = deviceStatus?.update?.state === \"updating\" ? <i title=\"Updating firmware\" className=\"fa fa-sync fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const interviewSpinner = device.interviewing ? <i title=\"Interviewing\" className=\"fa fa-spinner fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const unseccessfullInterview = !device.interviewing && !device.interview_completed ? <i title=\"Interview failed\" className=\"fa fa-exclamation-triangle position-absolute top-0 right-0 text-danger\" /> : null;\n    switch (type) {\n        case \"svg\":\n            return src ? <image {...rest} onError={onImageError} href={src} /> : null;\n        case \"img\":\n        default:\n            return src ? <div className={cx(className, \"position-relative\")} {...rest}>\n                <img onError={onImageError} src={src} className={\"position-relative\"} />\n                {interviewSpinner}\n                {otaSpinner}\n                {unseccessfullInterview}\n            </div> : null;\n    }\n}\nexport default DeviceImage;","import React, { Component, createRef, RefObject } from \"react\";\nimport { LinkI, NodeI } from \"./types\";\nimport cx from \"classnames\";\nimport style from \"./map.css\";\nimport { MouseEventsResponderNode } from \".\";\nimport { Device } from \"../../types\";\nimport DeviceImage from \"../device-image\";\nimport { Simulation } from \"d3-force\";\nimport { select } from \"d3-selection\";\nimport { drag } from \"d3-drag\";\n\n\nexport const getStarShape = (innerCircleArms: number, innerRadius: number, outerRadius: number): string => {\n    const centerX = 15;\n    const centerY = 15;\n\n    const angle = Math.PI / innerCircleArms;\n    const angleOffsetToCenterStar = 60;\n    const totalArms = innerCircleArms * 2;\n    let points = \"\";\n    for (let i = 0; i < totalArms; i++) {\n        const isEvenIndex = i % 2 == 0;\n        const r = isEvenIndex ? outerRadius : innerRadius;\n        const currX = centerX + Math.cos(i * angle + angleOffsetToCenterStar) * r;\n        const currY = centerY + Math.sin(i * angle + angleOffsetToCenterStar) * r;\n        points += `${currX}, ${currY} `;\n    }\n    return points;\n};\n\ninterface NodeProps extends MouseEventsResponderNode {\n    node: NodeI;\n}\n\nconst offlineTimeout = 3600 * 2;\n\nexport const isOnline = (device: Device): boolean => {\n\n    return true; //Date.now() - device.lastSeen < offlineTimeout;\n};\n\nclass Node extends Component<NodeProps, {}> {\n    ref = createRef<SVGElement>();\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { node } = this.props;\n        select(current as SVGElement).data([node]);\n    }\n\n    onMouseOut = (): void => {\n        const { node, onMouseOut } = this.props;\n        this.ref && this.ref.current && onMouseOut && onMouseOut(node, this.ref.current);\n    };\n\n    onMouseOver = (): void => {\n        const { node, onMouseOver } = this.props;\n        this.ref && this.ref.current && onMouseOver && onMouseOver(node, this.ref.current);\n    };\n\n    onDblClick = (): void => {\n        const { node, onDblClick } = this.props;\n        this.ref && this.ref.current && onDblClick && onDblClick(node, this.ref.current);\n    };\n\n    render() {\n\n        const { node } = this.props;\n        const { onMouseOver, onMouseOut, onDblClick } = this;\n        const deviceType = node.type as string;\n        const cn = cx(style.node, style[deviceType]); //{ [style.offline]: !isOnline(node.device, time) }\n        return (<g className={cn}\n            ref={this.ref as RefObject<SVGImageElement>}\n            onMouseOver={onMouseOver}\n            onMouseOut={onMouseOut}\n            onDoubleClick={onDblClick}\n        >\n            {\n                node.type === \"Coordinator\" ? (\n                    <polygon\n                        points={getStarShape(5, 5, 14) as string}\n                    />\n                ) : (\n                        <DeviceImage\n                            type=\"svg\"\n                            width={32}\n                            height={32}\n                            device={node as unknown as Device}\n                            className={`${style.img}`}\n                        />\n                    )\n            }\n            <text>{node.friendlyName}</text>\n\n        </g>);\n\n    }\n}\n\ninterface NodesProps extends MouseEventsResponderNode {\n    root: SVGElement;\n    nodes: NodeI[];\n    simulation: Simulation<NodeI, LinkI>;\n}\n\ntype NodesState = {\n    toggle: boolean;\n}\n\nexport default class Nodes extends Component<NodesProps, NodesState> {\n    state: Readonly<NodesState> = {\n        toggle: false\n    }\n    updateDrag(): void {\n        const { simulation, root } = this.props;\n        const dragForce = drag<SVGCircleElement, NodeI>()\n            .on(\"start\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0.3).restart();\n                }\n\n                d.fx = d.x;\n                d.fy = d.y;\n            })\n            .on(\"drag\", ({ x, y }, d) => {\n                d.fx = x;\n                d.fy = y;\n            })\n            .on(\"end\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0);\n                }\n                d.fx = undefined;\n                d.fy = undefined;\n            });\n        select(root).selectAll<SVGCircleElement, NodeI>(`.${style.node}`)\n            .call(dragForce);\n    }\n\n    componentDidMount(): void {\n        this.updateDrag();\n    }\n\n    componentDidUpdate(): void {\n        this.updateDrag();\n    }\n\n\n\n    render() {\n        const { nodes, onMouseOut, onMouseOver } = this.props;\n        return (\n            <g className={style.nodes}>\n                {nodes.map((node: NodeI) => (\n                    <Node\n                        onMouseOut={onMouseOut}\n                        onMouseOver={onMouseOver}\n                        key={node.ieeeAddr}\n                        node={node}\n                    />\n                ))}\n            </g>\n        );\n    }\n}\n","import { SimulationLinkDatum, SimulationNodeDatum } from \"d3-force\";\nimport { DeviceType, DeviceDefinition } from \"../../types\";\n\nexport interface NodeI extends SimulationNodeDatum {\n    ieeeAddr: string;\n    friendlyName?: string;\n    type?: DeviceType;\n    failed?: string[];\n    lastSeen?: number;\n    definition?: DeviceDefinition;\n}\n\nexport type LinkType =\n    \"Coordinator2EndDevice\" |\n    \"EndDevice2Coordinator\" |\n\n    \"Coordinator2Router\" |\n    \"Router2Coordinator\" |\n\n    \"EndDevice2Router\" |\n    \"Router2EndDevice\" |\n\n    \"Router2Router\" |\n\n    \"BrokenLink\";\n\nexport interface Source extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\n\nexport interface Target extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\nexport enum ZigbeeRelationship {\n    NeigbhorIsParent,\n    NeigbhorIsAChild,\n    NeigbhorIsASibling,\n    NoneOfTheAbove,\n    NeigbhorIsAFormerChild\n}\n\nexport interface LinkI extends SimulationLinkDatum<NodeI> {\n    source: Source;\n    target: Target;\n    linkquality: number;\n    linkqualities: number[];\n    depth: number;\n    routes: unknown[];\n    sourceIeeeAddr: string;\n    targetIeeeAddr: string;\n    sourceNwkAddr: number;\n    lqi: number;\n    relationship: ZigbeeRelationship;\n    relationships: ZigbeeRelationship[];\n    linkType: LinkType;\n}\n\nexport interface GraphI {\n    nodes: NodeI[];\n    links: LinkI[];\n}\n","import createStore from \"unistore\";\nimport devtools from \"unistore/devtools\";\nimport initialState from './initialState.txt';\n\n\nimport { Device, DeviceState, BridgeConfig, BridgeInfo, TouchLinkDevice, BridgeState } from \"./types\";\nimport { GraphI } from \"./components/map/types\";\nimport { deSerialize } from \"./utils\";\n\nexport interface GroupAddress {\n    endpoint: number;\n    ieee_address: string;\n}\n\nexport interface Group {\n    id: number;\n    friendly_name: string;\n    members: GroupAddress[];\n}\n\nexport interface LogMessage {\n    level: \"error\" | \"info\" | \"warning\";\n    message: string;\n}\n\nexport interface GlobalState {\n    devices: Map<string, Device>;\n    deviceStates: Map<string, DeviceState>;\n    touchlinkDevices: TouchLinkDevice[];\n    touchlinkScanInProgress: boolean;\n    touchlinkIdentifyInProgress: boolean;\n    touchlinkResetInProgress: boolean;\n    networkGraph: GraphI;\n    networkGraphIsLoading: boolean;\n    groups: Group[];\n    bridgeConfig: BridgeConfig;\n    bridgeInfo: BridgeInfo;\n    bridgeState: BridgeState;\n    logs: LogMessage[];\n};\nconst _store = createStore(deSerialize(initialState) as GlobalState);\nconst store = process.env.NODE_ENV === 'production' ?  _store : devtools(_store);\n\nexport default store;\n","import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport store, { Group, LogMessage } from \"./store\";\nimport { BridgeConfig, BridgeInfo, TouchLinkDevice, Device, DeviceState, BridgeState } from './types';\nimport { sanitizeGraph, isSecurePage, randomString, stringifyWithPreservingUndefinedAsNull } from \"./utils\";\nimport { Notyf } from \"notyf\";\nimport { GraphI } from \"./components/map/types\";\n\nimport orderBy from \"lodash/orderBy\";\n\n\nconst MAX_LOGS_RECORDS_IN_BUFFER = 100;\nconst TOKEN_LOCAL_STORAGE_ITEM_NAME = \"z2m-token\";\nconst AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME = \"z2m-auth\";\nconst UNAUTHORIZED_ERROR_CODE = 4401;\n\nconst notyf = new Notyf();\n\ninterface Message {\n    topic: string;\n    payload: string | object | object[] | string[];\n}\n\nconst blacklistedMessages: RegExp[] = [\n    /MQTT publish/\n];\n\nconst isLogMessage = (msg: LogMessage | ResponseWithStatus): msg is LogMessage => {\n    return (msg as LogMessage).level !== undefined && (msg as LogMessage).message !== undefined;\n}\n\nconst isResponseWithStatus = (msg: LogMessage | ResponseWithStatus): msg is ResponseWithStatus => {\n    return (msg as ResponseWithStatus).status !== undefined;\n}\n\nconst showNotity = (data: LogMessage | ResponseWithStatus): void => {\n    let message = \"\", level = \"\";\n    if (isLogMessage(data)) {\n        message = data.message;\n        level = data.level;\n    } else if (isResponseWithStatus(data)) {\n        switch (data.status) {\n            case \"error\":\n                level = \"error\";\n                message = data.error as string;\n                break;\n            default:\n                break;\n        }\n    }\n\n    switch (level) {\n        case \"error\":\n        case \"warning\":\n            notyf.error(message);\n            break;\n        case \"info\":\n            notyf.success(message);\n            break;\n\n        default:\n            break;\n    }\n};\n\ninterface ResponseWithStatus {\n    status: \"ok\" | \"error\";\n    data: unknown;\n    error?: string;\n    transaction?: string;\n}\ninterface TouchllinkScanResponse extends ResponseWithStatus {\n    data: {\n        found: TouchLinkDevice[];\n    };\n}\ninterface Callable {\n    (): void;\n}\n\nclass Api {\n    url: string;\n    socket: ReconnectingWebSocket;\n    requests: Map<string, [Callable, Callable]> = new Map<string, [Callable, Callable]>();\n    transactionNumber = 1;\n    transactionRndPreffix: string;\n    constructor(url: string) {\n        this.url = url;\n        this.transactionRndPreffix = randomString(5);\n    }\n    send = (topic: string, payload: object): Promise<void> => {\n        console.debug(\"Calling API\", { topic, payload });\n\n        if (topic.startsWith('bridge/request/')) {\n            const transaction = `${this.transactionRndPreffix}-${this.transactionNumber++}`;\n            const promise = new Promise<void>((resolve, reject) => {\n                this.requests.set(transaction, [resolve, reject]);\n            });\n            this.socket.send(stringifyWithPreservingUndefinedAsNull({ topic, payload: { ...payload, transaction } }));\n            return promise;\n        } else {\n            this.socket.send(stringifyWithPreservingUndefinedAsNull({ topic, payload }));\n            return Promise.resolve();\n        }\n    }\n\n    urlProvider = async () => {\n        const url = new URL(this.url)\n        let token = localStorage.getItem(TOKEN_LOCAL_STORAGE_ITEM_NAME);\n        const authRequired = !!localStorage.getItem(AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME);\n        if (authRequired) {\n            if (!token) {\n                token = prompt(\"enter your z2m admin token\");\n                localStorage.setItem(TOKEN_LOCAL_STORAGE_ITEM_NAME, token as string);\n            }\n            url.searchParams.append(\"token\", token as string);\n        }\n        return url.toString();\n    }\n\n    connect(): void {\n        this.socket = new ReconnectingWebSocket(this.urlProvider);\n        this.socket.addEventListener(\"message\", this.onMessage);\n        this.socket.addEventListener(\"close\", this.onClose);\n    }\n    private procsessBridgeMessage = (data: Message): void => {\n        switch (data.topic) {\n            case \"bridge/config\":\n                store.setState({\n                    bridgeConfig: data.payload as BridgeConfig\n                });\n                break;\n\n            case \"bridge/info\":\n                store.setState({\n                    bridgeInfo: data.payload as BridgeInfo\n                });\n                break;\n\n            case \"bridge/state\":\n                store.setState({\n                    bridgeState: data.payload as BridgeState\n                });\n                break;\n\n            case \"bridge/devices\":\n                {\n                    const devicesMap = new Map();\n                    orderBy((data.payload as Device[]), \"friendly_name\").forEach((device) => {\n                        const dev = { ...device };\n                        dev.endpoints = new Map(Object.entries(device.endpoints));\n                        devicesMap.set(device.ieee_address, dev);\n                    });\n                    store.setState({\n                        devices: devicesMap\n                    })\n                }\n                break;\n\n            case \"bridge/groups\":\n                store.setState({\n                    groups: data.payload as Group[]\n                })\n                break;\n\n            case \"bridge/event\":\n                break;\n\n            case \"bridge/logging\":\n                {\n                    const { logs } = store.getState();\n                    const newLogs = [...logs.slice(-MAX_LOGS_RECORDS_IN_BUFFER)];\n                    newLogs.push(data.payload as LogMessage);\n                    store.setState({ logs: newLogs });\n                    const log = data.payload as LogMessage;\n                    if (blacklistedMessages.every(val => !val.test(log.message))) {\n                        showNotity(log);\n                    }\n                }\n                break;\n\n            case \"bridge/response/networkmap\":\n                {\n                    const response = data.payload as ResponseWithStatus;\n                    if (response.status == \"ok\") {\n                        const { value } = response.data as { value: unknown };\n                        store.setState({\n                            networkGraphIsLoading: false,\n                            networkGraph: sanitizeGraph(value as GraphI)\n                        });\n                    } else {\n                        store.setState({ networkGraphIsLoading: false });\n                    }\n                }\n                break;\n\n\n            case \"bridge/response/touchlink/scan\":\n                {\n                    const { status, data: payloadData } = data.payload as TouchllinkScanResponse;\n                    if (status === \"ok\") {\n                        store.setState({ touchlinkScanInProgress: false, touchlinkDevices: payloadData.found });\n                    } else {\n                        store.setState({ touchlinkScanInProgress: false });\n                    }\n                }\n                break;\n\n            case \"bridge/response/touchlink/identify\":\n                store.setState({ touchlinkIdentifyInProgress: false });\n                break;\n\n            case \"bridge/response/touchlink/factory_reset\":\n                store.setState({ touchlinkResetInProgress: false });\n                break;\n\n            default:\n                break;\n        }\n        if (data.topic.startsWith(\"bridge/response/\")) {\n            showNotity(data.payload as ResponseWithStatus);\n            this.resolvePromises(data.payload as ResponseWithStatus);\n        }\n    }\n\n    private resolvePromises(message: ResponseWithStatus): void {\n        const { transaction, status } = message;\n        if (transaction !== undefined && this.requests.has(transaction)) {\n            const [resolve, reject] = this.requests.get(transaction) as [Callable, Callable];\n            if (status == \"ok\" || status == undefined) {\n                resolve();\n            } else {\n                reject();\n            }\n            this.requests.delete(transaction);\n        }\n    }\n\n    private onClose = (e: CloseEvent): void => {\n        if (e.code === UNAUTHORIZED_ERROR_CODE) {\n            localStorage.setItem(AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME, \"true\");\n            localStorage.removeItem(TOKEN_LOCAL_STORAGE_ITEM_NAME);\n            notyf.error(\"Unauthorized\");\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000);\n        }\n    }\n\n    private onMessage = (event: MessageEvent): void => {\n        let data = {} as Message;\n        try {\n            data = JSON.parse(event.data) as Message;\n        } catch (e) {\n            notyf.error(e.message);\n            notyf.error(event.data);\n        }\n\n        if (data.topic.startsWith(\"bridge/\")) {\n            this.procsessBridgeMessage(data);\n        } else {\n            const { deviceStates } = store.getState();\n            const newDeviceStates = new Map(deviceStates);\n            newDeviceStates.set(data.topic, { ...newDeviceStates.get(data.topic), ...(data.payload as DeviceState) });\n            store.setState({ deviceStates: newDeviceStates });\n        }\n    }\n}\nconst apiUrl = `${window.location.host}${document.location.pathname}api`;\nconst api = new Api(`${isSecurePage() ? 'wss' : 'ws'}://${apiUrl}`);\nexport default api;\n","import api from \"../api\";\nimport { Device } from \"../types\";\n\nexport interface BridgeApi {\n    setPermitJoin(permit: boolean, device: Device): Promise<void>;\n    updateBridgeConfig(options: object): Promise<void>;\n    restartBridge(): Promise<void>;\n}\n\n\nexport default {\n    setPermitJoin(state, permit = true, device: Device): Promise<void> {\n        return api.send(\"bridge/request/permit_join\", { value: permit, device: device?.friendly_name });\n    },\n    updateBridgeConfig(state, options: object): Promise<void> {\n        return api.send('bridge/request/options', { options });\n    },\n    restartBridge(state): Promise<void> {\n        return api.send('bridge/request/restart', {});\n    },\n}\n","import api from \"../api\";\n\nexport interface DeviceApi {\n    renameDevice(\n        old: string,\n        newName: string,\n        homeassistantRename: boolean\n    ): Promise<void>;\n    removeDevice(dev: string, force: boolean, block: boolean): Promise<void>;\n    configureDevice(name: string): Promise<void>;\n\n    setDeviceOptions(id: string, options: object): Promise<void>;\n}\n\n\nexport default {\n    renameDevice: (\n        state,\n        from: string,\n        to: string,\n        homeassistantRename: boolean\n    ): Promise<void> => {\n        return api.send(\"bridge/request/device/rename\", {\n            from,\n            to,\n            'homeassistant_rename': homeassistantRename,\n        });\n    },\n    removeDevice: (\n        state,\n        dev: string,\n        force: boolean,\n        block: boolean\n    ): Promise<void> => {\n        return api.send(\"bridge/request/device/remove\", { id: dev, force, block });\n    },\n\n    configureDevice: (state, name: string): Promise<void> => {\n        return api.send(\"bridge/request/device/configure\", { id: name });\n    },\n\n    setDeviceOptions: (state, id: string, options: object): Promise<void> => {\n        return api.send(\"bridge/request/device/options\", { id, options });\n    }\n}\n","import api from \"../api\";\n\nexport interface GroupsApi {\n    createGroup(name: string, id?: number): Promise<void>;\n    removeGroup(name: string): Promise<void>;\n    addDeviceToGroup(device: string, group: string): Promise<void>;\n    removeDeviceFromGroup(device: string, group: string): Promise<void>;\n    renameGroup(oldName: string, newName: string): Promise<void>;\n}\n\n\nexport default {\n    createGroup: (state, group: string, id: number): Promise<void> => {\n        const payload = {\n            'friendly_name': group\n        };\n        if (id) {\n            payload['id'] = id;\n        }\n        return api.send(\"bridge/request/group/add\", payload);\n    },\n\n    removeGroup: (state, group: string): Promise<void> => {\n        return api.send(\"bridge/request/group/remove\", { id: group });\n    },\n\n    addDeviceToGroup: (state, device: string, group: string): Promise<void> => {\n        return api.send(\"bridge/request/group/members/add\", { group, device });\n    },\n\n    removeDeviceFromGroup: (\n        state,\n        device: string,\n        group: string\n    ): Promise<void> => {\n        return api.send(\"bridge/request/group/members/remove\", { device, group });\n    },\n    renameGroup: (state, oldName: string, newName: string): Promise<void> => {\n        return api.send(\"bridge/request/group/rename\", { from: oldName, to: newName });\n    },\n}\n","import api from \"../api\";\n\nexport interface StateApi {\n    setStateValue(dev: string, name: string, value: unknown): Promise<void>;\n    setDeviceState(dev: string, value: object): Promise<void>;\n    getDeviceState(dev: string, value: object): Promise<void>;\n}\n\nexport default {\n    setStateValue(\n        state,\n        dev: string,\n        name: string,\n        value: string | number | boolean\n    ): Promise<void> {\n        return api.send(`${dev}/set`, { [name]: value });\n    },\n    setDeviceState(state, dev: string, value: object) {\n        return api.send(`${dev}/set`, value);\n    },\n    getDeviceState(state, dev: string, value: object) {\n        return api.send(`${dev}/get`, value);\n    },\n}\n","import api from \"../api\";\n\nexport interface OtaApi {\n    checkOTA(deviceName: string): Promise<void>;\n    updateOTA(deviceName: string): Promise<void>;\n}\nexport default {\n    checkOTA: (state, deviceName: string): Promise<void> => {\n        return api.send(\"bridge/request/device/ota_update/check\", { id: deviceName });\n    },\n    updateOTA: (state, deviceName: string): Promise<void> => {\n        return api.send(\"bridge/request/device/ota_update/update\", { id: deviceName });\n    },\n}\n","import api from \"../api\";\nimport { Cluster } from \"../types\";\n\nexport type BindParams = {\n    from: string;\n    to: string;\n    clusters: Cluster[];\n}\nexport interface BindApi {\n    addBind(params: BindParams): Promise<void>;\n    removeBind(params: BindParams): Promise<void>;\n}\n\ntype BindOperation = \"bind\" | \"unbind\";\nconst bindOp = (operation: BindOperation, params: object) => {\n    return api.send(`bridge/request/device/${operation}`, params);\n}\nexport default {\n    addBind: (state, params: BindParams): Promise<void> => bindOp(\"bind\", params),\n    removeBind: (state, params: BindParams): Promise<void> => bindOp(\"unbind\", params),\n}\n","import api from \"../api\";\nimport store from \"../store\";\nimport { TouchLinkDevice } from \"../types\";\n\n\nexport interface TouchlinkApi {\n    touchlinkScan(): Promise<void>;\n    touchlinkIdentify(device: TouchLinkDevice): Promise<void>;\n    touchlinkReset(device: TouchLinkDevice): Promise<void>;\n}\n\nexport default {\n    touchlinkScan(state): Promise<void> {\n        store.setState({ touchlinkScanInProgress: true, touchlinkDevices: [] });\n        return api.send(\"bridge/request/touchlink/scan\", { value: true });\n    },\n    touchlinkIdentify(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkIdentifyInProgress: true });\n        return api.send(\"bridge/request/touchlink/identify\", device);\n\n    },\n    touchlinkReset(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkResetInProgress: true });\n        return api.send(\"bridge/request/touchlink/factory_reset\", device);\n    },\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { GlobalState } from \"../store\";\nimport { Store } from \"unistore\";\n\nimport { ReportingConfig } from \"../types\";\nimport api from \"../api\";\nimport { download } from \"../utils\";\nimport bridgeActions from \"./BridgeApi\";\nimport deviceActions from \"./DeviceApi\";\nimport groupActions from \"./GroupsApi\";\nimport stateActions from \"./StateApi\";\nimport otaActions from \"./OtaApi\";\nimport bindActions from \"./BindApi\";\nimport touchlinkActions from \"./TouchlinkApi\";\n\nexport interface UtilsApi {\n    exportState(): Promise<void>;\n}\n\nexport interface MapApi {\n    networkMapRequest(): Promise<void>;\n}\nexport interface ReportingApi {\n    configureReport(device: string, config: ReportingConfig): Promise<void>;\n}\n\nconst actions = (store: Store<GlobalState>): object => ({\n    ...bridgeActions,\n    ...deviceActions,\n    ...groupActions,\n    ...stateActions,\n    ...otaActions,\n    ...bindActions,\n    ...touchlinkActions,\n\n    networkMapRequest: (state): Promise<void> => {\n        store.setState({ networkGraphIsLoading: true, networkGraph: { nodes: [], links: [] } });\n        return api.send(\"bridge/request/networkmap\", { type: \"raw\", routes: false });\n    },\n\n    exportState(state): Promise<void> {\n        download(state, 'state.json');\n        return Promise.resolve();\n    },\n    configureReport(state, device: string, config: ReportingConfig): Promise<void> {\n        return api.send('bridge/request/device/configure_reporting', {\n            id: device,\n            ...config\n        });\n    }\n});\nexport default actions;\n","import React, { ButtonHTMLAttributes, Component } from \"react\";\n\ninterface ButtonProps<T> {\n    item?: T;\n    onClick?(arg1: T): void;\n    promt?: boolean | string;\n}\n\nexport default class Button<T> extends Component<ButtonProps<T> & Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'onClick'>, {}> {\n    onClick = (): void => {\n        const { item, onClick, promt } = this.props;\n        let confirmed = true;\n        if (promt) {\n            confirmed = confirm(typeof promt === \"string\" ? promt : \"Are you sure?\");\n        }\n        confirmed && onClick && onClick(item as T);\n    };\n\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, item, promt, ...rest } = this.props;\n        return <button type=\"button\" {...rest} onClick={this.onClick}>{children}</button>;\n    }\n}","import { ZigbeeRelationship } from \"./types\";\n\ninterface LinkType {\n  title: string;\n  relationship: ZigbeeRelationship;\n}\nexport const linkTypes: LinkType[] = [\n  {\n      title: 'IsParent',\n      relationship: ZigbeeRelationship.NeigbhorIsParent\n  },\n  {\n      title: 'IsAChild',\n      relationship: ZigbeeRelationship.NeigbhorIsAChild\n  },\n  {\n      title: 'IsASibling',\n      relationship: ZigbeeRelationship.NeigbhorIsASibling\n  },\n  {\n      title: 'NoneOfTheAbove',\n      relationship: ZigbeeRelationship.NoneOfTheAbove\n  }\n];","import React, { FunctionComponent } from \"react\";\n\nconst Spinner: FunctionComponent = () => {\n  return <div className=\"d-flex align-items-center\">\n    <strong>Loading, please wait.</strong>\n    <div className=\"spinner-border me-2\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n}\nexport default Spinner;","import React, { ChangeEvent, Component, createRef, Fragment } from \"react\";\nimport Links from \"./links\";\nimport Nodes, { getStarShape } from \"./nodes\";\nimport { GraphI, LinkI, NodeI, Source, Target, ZigbeeRelationship } from \"./types\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions, { MapApi } from \"../../actions/actions\";\n\nimport Button from \"../button\";\nimport { ForceLink, forceLink, forceCollide, forceCenter, forceSimulation, forceX, forceY } from \"d3-force\";\nimport { select, selectAll, Selection, ValueFn } from \"d3-selection\";\nimport { forceManyBodyReuse } from \"d3-force-reuse\"\nimport { zoom, zoomIdentity, ZoomTransform } from \"d3-zoom\";\nimport { linkTypes } from \"./consts\";\nimport Spinner from \"../spinner\";\nimport intersection from \"lodash/intersection\";\nimport style from \"./map.css\";\nimport cx from \"classnames\";\nexport interface MouseEventsResponderNode {\n    onMouseOver?: (arg0: NodeI, el: SVGElement) => void;\n    onMouseOut?: (arg0: NodeI, el: SVGElement) => void;\n    onDblClick?: (arg0: NodeI, el: SVGElement) => void;\n}\n\ninterface MapState {\n    selectedNode?: NodeI;\n    width: number;\n    height: number;\n    visibleLinks: ZigbeeRelationship[];\n    legendIsVisible: boolean;\n}\nconst angle = (s: Source, t: Target) => Math.atan2(((t.y as number) - (s.y as number)), (t.x as number) - (s.x as number));\n\n\nconst _calc = (params: { offset: number; s: Source; t: Target; accessor: string }, fn: (n: number) => number): number => {\n    const { offset, s, t, accessor } = params;\n    return offset * fn(angle(s, t)) + (s[accessor] as number);\n}\nconst xpos = (offset: number, s: Source, t: Target) => _calc({ offset, s, t, accessor: 'x' }, Math.cos);\nconst ypos = (offset: number, s: Source, t: Target) => _calc({ offset, s, t, accessor: 'y' }, Math.sin);\n\n\n\nconst parentOrChild = [ZigbeeRelationship.NeigbhorIsAChild, ZigbeeRelationship.NeigbhorIsParent];\nconst linkStrregth = (d: LinkI) => {\n    if (d.linkType === \"Router2Router\") {\n        return 1;\n    }\n    if (parentOrChild.includes(d.relationship)) {\n        return 0.5;\n    }\n\n    return 0;\n}\n\nconst distancesMap = {\n    BrokenLink: 450,\n    Router2Router: 200,\n    Coordinator2Router: 200,\n    Coordinator2EndDevice: 50,\n    EndDevice2Router: 50\n};\n\n\nconst getDistance = (d: LinkI): number => {\n    return distancesMap[d.linkType] ?? 200;\n    // const depth = ~~(Math.min(4, d.depth));\n    // return 50 * depth + distance;\n};\n\nconst computeLink = (d: LinkI, transform: ZoomTransform): string => {\n    const src = d.source;\n    const dst = d.target;\n    const [x1, y1] = transform.apply([src.x as number, src.y as number]);\n    const [x2, y2] = transform.apply([dst.x as number, dst.y as number]);\n    return `M ${x1} ${y1} L ${x2} ${y2}`;\n}\n\ntype SelNode = Selection<SVGElement, NodeI, SVGElement, {}>;\ntype SelLink = Selection<SVGElement, LinkI, SVGElement, {}>;\n\ntype TickedParams = {\n    transform: ZoomTransform;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n    links: LinkI[];\n}\nconst ticked = ({ transform, node, link, linkLabel, links }: TickedParams): void => {\n    links.forEach(function (d) {\n        const [x1, y1] = transform.apply([d.source.x as number, d.source.y as number]),\n            [x2, y2] = transform.apply([d.target.x as number, d.target.y as number]),\n            slope = (y2 - y1) / (x2 - x1);\n\n        (d as unknown as NodeI).x = (x2 + x1) / 2;\n        (d as unknown as NodeI).y = (x2 - x1) * slope / 2 + y1;\n    });\n    link.attr(\"d\", (d) => computeLink(d, transform));\n    linkLabel\n        .attr('x', (d) => transform.applyX(xpos(100, d.source, d.target)))\n        .attr('y', (d) => transform.applyY(ypos(100, d.source, d.target)))\n\n    const imgXShift = 32 / 2;\n    const imgYShift = 32 / 2;\n    const computeTransform = (d: NodeI) => {\n        const [X, Y] = transform.apply([d.x as number, d.y as number]);\n        return `translate(${X - imgXShift}, ${Y - imgYShift})`;\n    }\n    node.attr(\"transform\", computeTransform as ValueFn<SVGElement, NodeI, string | number | boolean | null>);\n};\ntype ProcessHighlightsParams = {\n    networkGraph: GraphI;\n    links: LinkI[];\n    selectedNode?: NodeI;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n}\nconst processHighlights = ({ networkGraph, links, selectedNode, node, link, linkLabel }: ProcessHighlightsParams) => {\n    const linkedByIndex = new Set<string>();\n    networkGraph.nodes.forEach(n => linkedByIndex.add(n.ieeeAddr + \",\" + n.ieeeAddr));\n    links.forEach((l) => linkedByIndex.add(l.sourceIeeeAddr + \",\" + l.targetIeeeAddr));\n\n    const neighboring = (a: Source, b: Target): boolean => linkedByIndex.has(a.ieeeAddr + \",\" + b.ieeeAddr)\n    const computeOpacity = (l: LinkI) => (l.source === selectedNode || l.target === selectedNode ? 1 : 0.15);\n    if (selectedNode) {\n        node.style(\"opacity\", (o: NodeI) => neighboring(selectedNode, o) || neighboring(o, selectedNode) ? 1 : 0.15);\n        link.style(\"stroke-opacity\", computeOpacity);\n        linkLabel.style(\"opacity\", computeOpacity);\n    } else {\n        node.style(\"opacity\", 1);\n        link.style(\"stroke-opacity\", 1);\n        linkLabel.style(\"opacity\", 1);\n    }\n}\n\nexport class MapComponent extends Component<GlobalState & MapApi, MapState> {\n    ref = createRef<HTMLDivElement>();\n    svgRef = createRef<SVGSVGElement>();\n    simulation = forceSimulation<NodeI, LinkI>();\n    state: Readonly<MapState> = {\n        width: 0,\n        height: 0,\n        visibleLinks: parentOrChild,\n        legendIsVisible: true,\n    };\n    transform: ZoomTransform = zoomIdentity;\n\n    updateNodes = (): void => {\n        const { networkGraph } = this.props;\n        if (!networkGraph.nodes.length) {\n            return;\n        }\n        const { visibleLinks, selectedNode, width, height } = this.state;\n        const container = select<SVGElement, {}>(this.svgRef.current as SVGElement);\n        const node = container.selectAll<SVGElement, NodeI>(`.${style.node}`);\n        const link = container.selectAll<SVGElement, LinkI>(`.${style.link}`);\n        const linkLabel = container.selectAll<SVGElement, LinkI>(`.${style.linkLabel}`);\n\n        const links = networkGraph.links.filter(l => intersection(visibleLinks, l.relationships).length);\n        this.simulation.nodes(networkGraph.nodes.concat(links as unknown as NodeI[]));\n        this.simulation.force<ForceLink<NodeI, LinkI>>(\"link\")?.links(links);\n        this.simulation.on(\"tick\", () => ticked({ transform: this.transform, node, link, linkLabel, links }));\n\n\n        //add zoom capabilities\n        const everything = container.selectAll<SVGGeometryElement, NodeI>('.everything');\n        const zoomHandler = zoom()\n            .extent([[0, 0], [width, height]])\n            .scaleExtent([1 / 10, 8])\n            .on(\"zoom\", ({ transform }) => {\n                everything.attr(\"transform\", transform);\n            });\n        zoomHandler(container);\n\n        processHighlights({ networkGraph, links, selectedNode, node, link, linkLabel });\n        node.on(\"click\", (event, d: NodeI) => {\n            const { selectedNode } = this.state;\n            this.setState({ selectedNode: selectedNode ? null as unknown as NodeI : d });\n        });\n        this.simulation.alphaTarget(0.03).restart();\n    }\n\n\n    updateForces(width: number, height: number): void {\n        this.simulation = this.simulation\n            .force(\"link\", forceLink<NodeI, LinkI>().id(d => d.ieeeAddr).distance(getDistance).strength(linkStrregth))\n            .force(\"charge\", forceManyBodyReuse().strength(-700))\n            .force(\"collisionForce\", forceCollide())\n            .force(\"center\", forceCenter(width / 2, height / 2))\n            .force(\"x\", forceX().strength(0.1))\n            .force(\"y\", forceY().strength(0.2))\n    }\n\n    initPage(): void {\n        const { width, height } = (this.ref.current as HTMLDivElement).getBoundingClientRect();\n        this.setState({ width, height });\n        this.updateForces(width, height);\n    }\n\n    componentDidMount(): void {\n        this.initPage()\n    }\n\n    componentDidUpdate(): void {\n        this.updateNodes();\n    }\n\n    renderMap() {\n        const { width, height, visibleLinks } = this.state;\n\n        const { networkGraph } = this.props;\n        const links = networkGraph.links.filter(l => intersection(visibleLinks, l.relationships).length > 0);\n        return (\n            <svg ref={this.svgRef} viewBox={`0 0 ${width} ${height}`}>\n                <g className=\"everything\">\n                    <Links links={links} />\n                    <Nodes\n                        root={this.svgRef.current as SVGElement}\n                        nodes={networkGraph.nodes}\n                        simulation={this.simulation}\n                    />\n                </g>\n            </svg >\n        )\n    }\n    onRequestClick = (): void => {\n        const { networkMapRequest } = this.props;\n        networkMapRequest();\n    }\n    renderMessage() {\n        const { networkGraphIsLoading } = this.props;\n        return (\n            <div className=\"h-100 d-flex justify-content-center align-items-center\">\n                {\n                    networkGraphIsLoading ? (\n                        <div>\n                            <Spinner />\n                            <div>Depending on the size of your network this can take somewhere between 10 seconds and 2 minutes.</div>\n                        </div>\n\n                    ) : <Button onClick={this.onRequestClick} className=\"btn btn-primary d-block\">Load map</Button>\n                }\n            </div>\n        );\n    }\n    onLinkTypeFilterChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { visibleLinks: stateVisibleLinks } = this.state;\n        const { checked, value } = e.target;\n        const inValue = parseInt(value, 10);\n        let visibleLinks = [...stateVisibleLinks];\n        if (checked) {\n            visibleLinks.push(inValue);\n        } else {\n            visibleLinks = visibleLinks.filter((v) => v !== inValue);\n        }\n        this.setState({ visibleLinks });\n    }\n    renderMapControls() {\n        const { visibleLinks } = this.state;\n        return <div className={style.controls}>\n            {\n                linkTypes.map(linkType => (\n                    <div key={linkType.title} className=\"form-check form-check-inline\">\n                        <input onChange={this.onLinkTypeFilterChange} className=\"form-check-input\" type=\"checkbox\" id={linkType.title} value={linkType.relationship} checked={visibleLinks.includes(linkType.relationship)} />\n                        <label className=\"form-check-label\" htmlFor={linkType.title}>{linkType.title}</label>\n                    </div>\n                ))\n            }\n            {\n                <div className=\"btn-group btn-group-sm\" role=\"group\">\n                    <Button<void> title=\"Refresh data\" className=\"btn btn-primary\" onClick={this.onRequestClick}><i\n                        className=\"fa fa-sync\" /></Button>\n                </div>\n            }\n        </div>\n    }\n    render() {\n        const { networkGraph } = this.props;\n        const { legendIsVisible } = this.state;\n        return (\n            <div className={style.container} ref={this.ref}>\n                {networkGraph.nodes.length ? <Fragment>{this.renderMapControls()} {this.renderMap()}</Fragment> : this.renderMessage()}\n                <div className={cx(\"fixed-bottom\", { \"d-none\": !legendIsVisible })} onClick={() => this.setState({ legendIsVisible: false })}>\n                    <div className={cx(style.node, style.Coordinator)}>\n                        <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n                            <polygon points={getStarShape(5, 5, 14) as string} />\n                        </svg> is Coordinator</div>\n                    <div className={cx(style.node, style.EndDevice)}>Green means End Device</div>\n                    <div className={cx(style.node, style.Router)}>Blue means Router</div>\n\n                    <div>Solid lines are the link to the <span className={cx(style.node, style.Coordinator)}>Coordinator</span></div>\n                    <div>Dashed lines are the link with <span className={cx(style.node, style.Coordinator)}>Router</span></div>\n                    <div>Link quality is between 0 - 255, values with / represents multiple types of links</div>\n                    <div>Click on me to hide</div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mappedProps = [\"networkGraph\", \"networkGraphIsLoading\"];\nconst ConnectedMap = connect<{}, MapState, GlobalState, {}>(mappedProps, actions)(MapComponent);\nexport default ConnectedMap;\n","import React, { Component, FunctionComponent, Fragment } from \"react\";\nimport cx from \"classnames\";\nimport ReactDOM from \"react-dom\";\n// import * as style from \"./style.css\";\n\n\nexport const ModalHeader: FunctionComponent<{}> = props => {\n    return <div className=\"modal-header\">{props.children}</div>;\n};\n\nexport const ModalBody: FunctionComponent<{}> = props => {\n    return <div className=\"modal-body\">{props.children}</div>;\n};\n\nexport const ModalFooter: FunctionComponent<{}> = props => {\n    return <div className=\"modal-footer\">{props.children}</div>;\n};\ninterface ModalProps {\n    isOpen?: boolean;\n}\ninterface ModalState {\n    modalShow: string;\n    display: string;\n}\n\n\nclass BodyEnd extends React.Component {\n    el: HTMLDivElement;\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n\n        'modal-backdrop fade show'.split(' ').map(className => this.el.classList.add(className));\n    }\n\n    componentDidMount() {\n        document.body.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        document.body.removeChild(this.el);\n    }\n\n    render() {\n        return ReactDOM.createPortal(\n            this.props.children,\n            this.el,\n        );\n    }\n}\nclass Modal extends Component<ModalProps, {}> {\n\n\n\n    openModal = () => {\n        document.body.classList.add(\"modal-open\");\n    }\n\n    closeModal = () => {\n        document.body.classList.remove(\"modal-open\");\n    }\n\n    componentDidMount() {\n        this.props.isOpen ? this.openModal() : this.closeModal();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.isOpen !== this.props.isOpen) {\n            this.props.isOpen ? this.openModal() : this.closeModal();\n        }\n    }\n\n    render() {\n        const { isOpen } = this.props;\n        return (\n            isOpen && <div\n                className={`modal fade show`}\n                style={{ display: 'block' }}\n            >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">{this.props.children}</div>\n                </div>\n                <BodyEnd />\n            </div >\n        );\n    }\n}\n\nexport default Modal;\n\n\n\n// interface Props {\n//     onOk(): void;\n//     onCancel(): void;\n// }\n// const Modal: FunctionComponent<Props> = (props: Props) => {\n//     const { onOk, onCancel } = props;\n//     return (\n//         <Fragment>\n\n//             <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n//                 Launch demo modal\n// </button>\n//             <div className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n//                             <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n//                                 <span aria-hidden=\"true\">&times;</span>\n//                             </button>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             ...\n//                         </div>\n//                         <div className=\"modal-footer\">\n//                             <button onClick={onOk} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n//                             <button onClick={onCancel} type=\"button\" className=\"btn btn-primary\">Ok</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </Fragment>\n//     );\n// };\n\n// export default Modal;\n","import React, { ChangeEvent, Component } from \"react\";\nimport Button from \"../button\";\nimport { Device, DeviceState } from \"../../types\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { DeviceApi } from \"../../actions/DeviceApi\";\nimport cx from \"classnames\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\nimport { GlobalState } from \"../../store\";\ninterface DeviceControlGroupProps {\n    device: Device;\n    state?: DeviceState;\n}\ninterface DeviceRenameParams {\n    friendlyName: string;\n    isHassRename: boolean;\n}\ninterface DeviceRemovalParams {\n    block: boolean;\n    force: boolean;\n}\n\n\ninterface DeviceControlGroupState {\n    isRenameModalOpened: boolean;\n    isDeviceRemovalModalOpened: boolean;\n    removeParams: DeviceRemovalParams;\n    renameParams: DeviceRenameParams;\n\n}\n\nexport class DeviceControlGroup extends Component<DeviceControlGroupProps & DeviceApi & GlobalState, DeviceControlGroupState> {\n    state = {\n        isRenameModalOpened: false,\n        isDeviceRemovalModalOpened: false,\n        renameParams: {\n            friendlyName: this.props.device.friendly_name,\n            isHassRename: false\n        },\n        removeParams: {\n            block: false,\n            force: false\n        }\n    }\n\n    onRenameClick = async (): Promise<void> => {\n        const { renameDevice, device } = this.props;\n        const { renameParams } = this.state;\n\n        await renameDevice(device.friendly_name, renameParams.friendlyName, renameParams.isHassRename);\n        this.setState({\n            isRenameModalOpened: false\n        });\n    };\n\n\n    onRemoveClick = (): void => {\n        const { removeDevice, device } = this.props;\n        const { removeParams } = this.state;\n        removeDevice(device.friendly_name, removeParams.force, removeParams.block);\n        this.setState({\n            isDeviceRemovalModalOpened: false\n        });\n    };\n\n    toggleRenameModal = (): void => {\n        const { isRenameModalOpened } = this.state;\n        this.setState({ isRenameModalOpened: !isRenameModalOpened });\n    }\n    toggleDeviceRemovalModal = (): void => {\n        const { isDeviceRemovalModalOpened } = this.state;\n        this.setState({ isDeviceRemovalModalOpened: !isDeviceRemovalModalOpened });\n    }\n\n    onHassEntityIdChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { checked } = e.target;\n        renameParams.isHassRename = checked;\n        this.setState({ renameParams });\n    }\n    onFriendlyNameChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { value } = e.target;\n        renameParams.friendlyName = value;\n        this.setState({ renameParams });\n    }\n\n    onDeviceRemovalParamChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { removeParams } = this.state;\n        const { checked, name } = e.target;\n        removeParams[name] = checked;\n        this.setState({ removeParams });\n    }\n    renderRenameButton() {\n        const { bridgeInfo, device } = this.props;\n        const { isRenameModalOpened, renameParams } = this.state;\n        return (<>\n            <Button<void> className=\"btn btn-primary\" onClick={this.toggleRenameModal} title=\"Rename device\"><i className=\"fa fa-edit\" /></Button>\n            <Modal isOpen={isRenameModalOpened}>\n                <ModalHeader>\n                    <h3>Rename device</h3>\n                    <small>{device.friendly_name}</small>\n                </ModalHeader>\n                <ModalBody>\n                    <div className=\"mb-3\">\n                        <label htmlFor={`fn${device.ieee_address}`} className=\"form-label\">Friendly name</label>\n                        <input id={`fn${device.ieee_address}`} onChange={this.onFriendlyNameChange} type=\"text\" className=\"form-control\" value={renameParams.friendlyName} />\n                    </div>\n                    {bridgeInfo?.config?.homeassistant ? (\n                        <div className=\"form-check form-switch\">\n                            <input className=\"form-check-input\" checked={renameParams.isHassRename} type=\"checkbox\" id={`hass${device.ieee_address}`} onChange={this.onHassEntityIdChange} />\n                            <label className=\"form-check-label\" htmlFor={`hass${device.ieee_address}`}>Update Home Assistant entity ID</label>\n                        </div>\n                    ) : null}\n                </ModalBody>\n                <ModalFooter>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleRenameModal}>Close</button>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onRenameClick}>Save changes</button>\n                </ModalFooter>\n            </Modal>\n        </>\n        )\n    }\n    renderDeviceRemovalButton() {\n        const { device } = this.props;\n        const { isDeviceRemovalModalOpened, removeParams } = this.state;\n        const checks = [\n            { label: 'Force remove', name: 'force', value: removeParams.force },\n            { label: 'Block from joining again', name: 'block', value: removeParams.block },\n        ];\n        return (\n            <><Modal isOpen={isDeviceRemovalModalOpened}>\n                <ModalHeader>\n                    <h3>Remove device</h3>\n                    <small>{device.friendly_name}</small>\n                </ModalHeader>\n                <ModalBody>\n                    {\n                        checks.map(check => {\n                            const id = `${check.name}${device.ieee_address}`;\n                            return <div key={check.name} className=\"form-check form-switch\">\n                                <input className=\"form-check-input\" name={check.name} checked={check.value} type=\"checkbox\" id={id} onChange={this.onDeviceRemovalParamChange} />\n                                <label className=\"form-check-label\" htmlFor={id}>{check.label}</label>\n                            </div>\n                        })\n                    }\n                </ModalBody>\n                <ModalFooter>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleDeviceRemovalModal}>Close</button>\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onRemoveClick}>Delete</button>\n                </ModalFooter>\n            </Modal>\n                <button onClick={this.toggleDeviceRemovalModal} className=\"btn btn-danger\" title=\"Remove device\"><i className={cx(\"fa\", \"fa-trash\")} /></button></>\n        )\n    }\n\n    render() {\n        const { device, configureDevice } = this.props;\n        return (\n            <div className=\"btn-group btn-group-sm\" role=\"group\">\n                {this.renderRenameButton()}\n                <Button<string> className=\"btn btn-warning\" onClick={configureDevice} item={device.friendly_name} title=\"Reconfigure\" promt><i className={cx(\"fa\", \"fa-retweet\")} /></Button>\n                {this.renderDeviceRemovalButton()}\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedDeviceControlGroup = connect<DeviceControlGroupProps, {}, GlobalState, DeviceApi>(mappedProps, actions)(DeviceControlGroup);\nexport default ConnectedDeviceControlGroup;\n\n","import React, { Fragment } from \"react\";\nimport { Device } from \"../../types\";\n\ntype VendorProps = {\n  device: Device;\n}\nconst normalizeModel = (model: string): string => {\n  const find = '[/| |:]';\n  const re = new RegExp(find, 'g');\n  return model.replace(re, '_');\n};\n\nexport const VendorLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  if (device.supported && device.definition) {\n    const url = `https://www.zigbee2mqtt.io/information/supported_devices.html#${encodeURIComponent(normalizeModel(device.definition.vendor?.toLowerCase()))}`;\n    return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{device.definition.vendor}</a>\n  }\n  return <Fragment>Unsupported</Fragment>;\n}\n\n\nexport const ModelLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  let url = 'https://www.zigbee2mqtt.io/how_tos/how_to_support_new_devices.html#how-to-support-new-devices';\n  let title = device.model_id;\n  if (device.supported && device.definition) {\n    const acnchor = [\n      encodeURIComponent(device.definition?.vendor?.toLowerCase()),\n      encodeURIComponent(device.definition?.model?.toLowerCase()),\n    ].join('-');\n    url = `https://www.zigbee2mqtt.io/devices/${encodeURIComponent(normalizeModel(device.definition?.model))}.html#${encodeURIComponent(normalizeModel(acnchor))}`;\n    title = device.definition.model;\n  }\n  return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{title}</a>\n}\n","import React, { Fragment, FunctionComponent } from \"react\";\nimport { PowerSource as PowerSourceType } from \"../../types\";\nimport style from \"./style.css\";\n\n\ninterface PowerSourceProps {\n    source: PowerSourceType;\n    battery?: number;\n    batteryLow?: boolean;\n    showLevel?: boolean;\n}\n\n\nconst PowerSource: FunctionComponent<PowerSourceProps> = ({ source, battery, batteryLow, showLevel, ...rest }) => {\n    let batteryClass = \"\";\n    let title = \"\";\n\n    switch (source) {\n        case \"Battery\":\n            title = 'Battery';\n            if (batteryLow !== undefined) {\n                batteryClass = batteryLow ? `fa-battery-empty animation-blinking text-danger` : 'fa-battery-full text-success';\n                title += batteryLow ? ' LOW' : ' OK';\n            }\n            if (battery !== undefined) {\n                if (battery >= 85) {\n                    batteryClass += \" fa-battery-full\";\n                } else if (battery >= 75) {\n                    batteryClass += \" fa-battery-three-quarters\";\n                } else if (battery >= 50) {\n                    batteryClass += \" fa-battery-half\";\n                } else if (battery >= 25) {\n                    batteryClass += \" fa-battery-quarter\";\n                } else if (battery >= 10) {\n                    batteryClass += ` fa-battery-empty animation-blinking`\n                } else {\n                    return <span className={`animation-blinking text-danger`} role=\"alert\">{battery}%</span>\n                }\n            }\n            title += `${battery ? `, power level ${battery}%` : \"\"}`;\n            if (!batteryClass) {\n                batteryClass = \"fa-question\";\n            }\n            return <Fragment>{showLevel ? <span className=\"pe-2\">Battery {battery !== undefined ? `${battery}%` : null}</span> : null}<i className={`fa ${batteryClass}`} title={title} {...rest} /></Fragment>;\n\n        case \"Mains (single phase)\":\n        case \"DC Source\":\n            return <i className={`fa fa-plug ${style.plug}`} title={source} {...rest} />;\n        default:\n            return <i className={`fa fa-question`} title={source} {...rest} />;\n    }\n};\n\nexport default PowerSource;\n","/* eslint-disable react/display-name */\nimport React, { Component, Fragment } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport { toHex, toHHMMSS } from \"../../utils\";\nimport DeviceControlGroup from \"../device-control\";\nimport cx from \"classnames\";\nimport style from \"./style.css\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport get from 'lodash/get';\nimport DeviceImage from \"../device-image\";\nimport { ModelLink, VendorLink } from \"../vendor-links/verndor-links\";\nimport PowerSource from \"../power-source\";\n\n\ntype DeviceInfoProps = {\n    device: Device;\n}\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\n// [Flower sensor](http://modkam.ru/?p=1700)\nconst markdownLinkRegex = /\\[(.*?)\\]\\((.*?)\\)/;\n\nconst displayProps = [\n    {\n        label: 'Friendly name',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><strong>{device.friendly_name}</strong></dd>,\n    },\n    {\n        key: 'type',\n        label: 'Device type'\n    },\n    {\n        key: 'model_id',\n        label: 'Zigbee model'\n    },\n    {\n        key: 'definition.description',\n        label: 'Description',\n        if: 'supported',\n        render: (device: Device) => {\n            const result = markdownLinkRegex.exec(device.definition?.description as string);\n            let content = <span>{device.definition?.description}</span>;\n            if (result) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const [all, title, link] = result;\n                content = <a target=\"_blank\" rel=\"noopener noreferrer\"href={link}>{title}</a>\n            }\n            return <dd className=\"col-12 col-md-7\">{content}</dd>\n        },\n    },\n    {\n        render: (device: Device) => <dd className=\"col-12 col-md-7\" ><p className={cx('mb-0', 'font-weight-bold', { 'text-danger': !device.supported, 'text-success': device.supported })}>{device.supported ? 'Supported' : 'Unsupported'}</p></dd>,\n        label: 'Support status'\n    },\n    {\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{device.definition?.supports}</dd>,\n        label: 'Supports',\n        if: 'definition.supports'\n    },\n    {\n        key: 'ieee_address',\n        label: 'IEEE address'\n    },\n    {\n        key: 'network_address',\n        label: 'Network address',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{toHex(device.network_address)}</dd>,\n    },\n    {\n        key: 'date_code',\n        label: 'Firmware build date',\n        if: 'date_code'\n    },\n    {\n        key: 'software_build_id',\n        label: 'Firmware version',\n        if: 'software_build_id'\n    },\n\n    {\n        key: 'definition.vendor',\n        label: 'Vendor',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><VendorLink device={device} /></dd>\n    },\n    {\n        key: 'definition.model',\n        label: 'Model',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><ModelLink device={device} /></dd>\n    },\n\n    {\n        label: 'Power source',\n        render: (device: Device, deviceStatus: DeviceState) => <dd className=\"col-12 col-md-7\"><PowerSource showLevel={true} source={device.power_source} battery={deviceStatus.battery as number} batteryLow={deviceStatus.battery_low as boolean} /></dd>\n    },\n    {\n        label: 'Interview completed',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{device.interview_completed ? 'Yes' : 'No'}</dd>\n    }\n];\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DeviceInfo extends Component<DeviceInfoProps & PropsFromStore, {}> {\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceStatus: DeviceState = deviceStates.get(device.friendly_name) ?? {} as DeviceState;\n        return (\n            <Fragment>\n                <div className=\"d-flex justify-content-center\">\n                    <DeviceImage className={`card-img-top w-auto ${style[\"device-pic\"]}`} device={device} deviceStatus={deviceStatus} />\n                </div>\n\n\n                {/* <h2 className=\"card-title\">{device.friendly_name} {device.type}</h2> */}\n\n\n                <dl className=\"row\">\n                    {\n                        displayProps.filter(prop => prop.if === undefined || get(device, prop.if, false)).map(prop => (\n                            <Fragment key={prop.label}>\n                                <dt className=\"col-12 col-md-5\">{prop.label}</dt>\n                                {prop.render ?\n                                    prop.render(device, deviceStatus) : <dd className=\"col-12 col-md-7\">{get(device, prop.key)}</dd>}\n\n                            </Fragment>\n                        ))\n                    }\n                </dl>\n\n\n                <DeviceControlGroup device={device} state={deviceStatus} />\n\n            </Fragment>\n        );\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceInfoPage = connect<DeviceInfoProps, {}, GlobalState, PropsFromStore>(mappedProps)(DeviceInfo);\nexport default ConnectedDeviceInfoPage;","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Device, ObjectType } from \"../../types\";\nimport { getDeviceDisplayName } from \"../../utils\";\nimport { Group } from \"../../store\";\n\ninterface DevicePickerProps {\n    type: ObjectType;\n    value: string | number;\n    label?: string;\n    devices: Map<string, Device>;\n    groups?: Group[];\n    onChange(device: Device | Group, type: ObjectType): void;\n}\nexport default class DevicePicker extends Component<DevicePickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange, devices, groups = [] } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n\n        if (devices.has(value)) {\n            onChange(devices.get(value) as Device, \"device\");\n        } else {\n            const group = groups.find(g => parseInt(value, 10) === g.id);\n            onChange(group as Group, \"group\");\n        }\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { devices, groups, value, type, label, onChange, ...rest } = this.props;\n        let options = [<option key=\"hidden\" hidden>Select device</option>];\n\n        const devicesOptions = [] as JSX.Element[];\n        devices.forEach((device) => {\n            devicesOptions.push(<option\n                title={device.definition?.description}\n                key={device.ieee_address}\n                value={device.ieee_address}\n            >{getDeviceDisplayName(device)}</option>);\n        });\n        if (groups && groups.length) {\n            const groupOptions = groups.map(group => <option\n                key={group.friendly_name}\n                value={group.id}>{group.friendly_name}\n            </option>);\n            options.push(<optgroup key=\"Groups\" label=\"Groups\">{groupOptions}</optgroup>);\n            options.push(<optgroup key=\"Devices\" label=\"Devices\">{devicesOptions}</optgroup>);\n        } else {\n            options = options.concat(devicesOptions);\n        }\n        return <div className=\"form-group\">\n            <label className=\"form-label\">{label}</label>\n            <select\n                value={value}\n                onChange={this.onSelect}\n                className=\"form-control\"\n                {...rest}\n            >{options}\n\n            </select>\n        </div>;\n\n    }\n}\n","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Endpoint } from \"../../types\";\n\n\n\ninterface EndpointPickerProps {\n    onChange(endpoint: Endpoint): void;\n    value: Endpoint;\n    label?: string;\n    values: Endpoint[];\n}\n\nexport default class EndpointPicker extends Component<EndpointPickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n        onChange(value);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { onSelect, value, values, disabled, onChange, label, ...rest } = this.props;\n        const hasOnlyOneEP = values.length == 1;\n\n        const options = values.map(ep => <option key={ep} value={ep}>{ep}</option>)\n        options.unshift(<option key=\"hidded\" hidden>Select endpoint</option>);\n        return <div className=\"form-group\">\n            {label && <label className=\"form-label\">{label}</label>}\n            <select disabled={value && hasOnlyOneEP || disabled}\n                value={value}\n                className=\"form-control\"\n                title={hasOnlyOneEP ? 'The only endpoint' : \"\"}\n                onChange={this.onSelect}\n                {...rest}>\n                {options}\n            </select>\n        </div>\n\n    }\n}\n","import React, { ChangeEvent, Component, InputHTMLAttributes } from \"react\";\nimport { Cluster } from \"../../types\";\nimport { randomString } from \"../../utils\";\nimport { label } from \"../map/map.module.css\";\n\n\n\nconst clusterDescriptions = {\n    genPowerCfg: \"PowerCfg\",\n    genScenes: \"Scenes\",\n    genOnOff: \"OnOff\",\n    genLevelCtrl: \"LevelCtrl\",\n    lightingColorCtrl: \"LColorCtrl\",\n    closuresWindowCovering: \"Closures\",\n    genMultistateInput: \"MultistateInput\",\n    genGroups: \"Groups\",\n    genOta: \"Ota\",\n    touchlink: \"Touchlink\",\n    genIdentify: \"Identify\",\n    msTemperatureMeasurement: \"Temperature\",\n    msIlluminanceMeasurement: \"Illuminance\",\n    msRelativeHumidity: \"Humidity\",\n    msPressureMeasurement: \"Pressure\",\n    msSoilMoisture: \"Soil Moisture\",\n}\n\nexport enum PickerType {\n    MULTIPLE,\n    SINGLE\n}\nexport interface ClusterGroup {\n    name: string;\n    clusters: Cluster[];\n}\ninterface ClusterPickerProps {\n    value: Cluster[] | Cluster;\n    label?: string;\n    onChange(arg1: Cluster[] | Cluster | undefined): void;\n    clusters: Cluster[] | ClusterGroup[];\n    pickerType: PickerType;\n}\ninterface ClusterPickerState {\n    pickerId: string;\n}\n\n\n\nfunction isClusterGroup(clusters: Cluster[] | ClusterGroup[]): clusters is ClusterGroup[] {\n\n    return clusters.length > 0 && typeof clusters[0] !== 'string';\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class ClusterPicker extends Component<ClusterPickerProps & Omit<InputHTMLAttributes<HTMLInputElement | HTMLSelectElement>, 'onChange'>, ClusterPickerState> {\n    state: Readonly<ClusterPickerState> = {\n        pickerId: randomString(5)\n    }\n\n    onChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>): void => {\n        const { onChange, pickerType } = this.props;\n        let { value } = this.props;\n        const { name } = e.target;\n        if (pickerType === PickerType.MULTIPLE) {\n            const { checked: isChecked } = e.target as HTMLInputElement;\n            if (isChecked) {\n                (value as Cluster[]).push(name);\n            } else {\n                value = (value as Cluster[]).filter(v => v !== name);\n            }\n        } else {\n            const { value: selectedValue } = e.target as HTMLInputElement;\n            value = selectedValue;\n        }\n        onChange(value);\n    }\n    render() {\n        const { pickerType } = this.props;\n        if (pickerType === PickerType.MULTIPLE) {\n            return this.renderMultiPicker();\n        } else {\n            return this.renderSinglePicker();\n        }\n    }\n    renderMultiPicker() {\n        const { pickerId } = this.state;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { clusters = [], value, pickerType, onChange, label, ...rest } = this.props;\n        let options = [] as JSX.Element[];\n        if (isClusterGroup(clusters)) {\n            //TODO: implement if necessary\n            console.warn(\"Not implemented\");\n        } else {\n            options = clusters.map(cluster => (\n                <div key={cluster} className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\"\n                        type=\"checkbox\"\n                        checked={value.includes(cluster)}\n                        name={cluster}\n                        id={`${pickerId}_${cluster}`}\n                        value={cluster}\n                        onChange={this.onChange}\n                        {...rest}\n                    />\n                    <label className=\"form-check-label\" htmlFor={`${pickerId}_${cluster}`} title={cluster}>{clusterDescriptions[cluster] ?? cluster}</label>\n                </div>\n            ));\n        }\n\n        return <div className=\"form-group\">\n            {label && <label className=\"form-label\">{label}</label>}\n            <div className=\"form-control border-0\">\n                {options}\n            </div>\n\n        </div>;\n    }\n\n    renderSinglePicker() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { clusters = [], onChange, pickerType, label, ...rest } = this.props;\n        const options = [<option key=\"hidden\" hidden>Select cluster</option>];\n        if (isClusterGroup(clusters)) {\n            clusters.forEach(group => {\n                const groupOptions = group.clusters.map(cluster => <option key={cluster} value={cluster}>{clusterDescriptions[cluster] ?? cluster}</option>)\n                if (groupOptions.length === 0) {\n                    groupOptions.push(<option key=\"none\" disabled>None</option>)\n                }\n                options.push(<optgroup key={group.name} label={group.name}>{groupOptions}</optgroup>);\n            });\n\n\n        } else {\n            clusters.forEach(cluster => {\n                options.push(<option key={cluster} value={cluster}>{clusterDescriptions[cluster] ?? cluster}</option>);\n            })\n        }\n        return (<div className=\"form-group\">\n            {label && <label className=\"form-label\">{label}</label>}\n            <select className=\"form-select\" onChange={this.onChange} {...rest}>\n                {options}\n            </select>\n        </div>)\n    }\n}\n","import React, { Component } from \"react\";\nimport { Device, Endpoint, Cluster, ObjectType } from \"../../types\";\nimport DevicePicker from \"../device-picker\";\nimport EndpointPicker from \"../endpoint-picker\";\nimport ClusterPicker, { PickerType } from \"../cluster-picker\";\nimport Button from \"../button\";\nimport { Group } from \"../../store\";\nimport { NiceBindingRule } from \"./bind\";\nimport { getEndpoints } from \"../../utils\";\nimport { BindParams } from \"../../actions/BindApi\";\n\n\n\n\ninterface BindRowProps {\n    rule: NiceBindingRule;\n    idx: number;\n    devices: Map<string, Device>;\n    groups: Group[];\n    device: Device;\n    onBind(params: BindParams): void;\n    onUnBind(params: BindParams): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface BindRowState {\n    stateRule: NiceBindingRule;\n}\nconst getTarget = (rule: NiceBindingRule, devices: Map<string, Device>, groups: Group[]): Device | Group => {\n    if (rule.target.type === \"group\") {\n        return groups.find(g => g.id === rule.target.id) as Group;\n    }\n    return devices.get(rule.target?.ieee_address as string) as Device;\n}\ntype Action = \"Bind\" | \"Unbind\";\nexport default class BindRow extends Component<BindRowProps, BindRowState> {\n    state: Readonly<BindRowState> = {\n        stateRule: {} as NiceBindingRule\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static getDerivedStateFromProps(props: Readonly<BindRowProps>, state: BindRowState): Partial<BindRowState> {\n        const { rule } = props;\n        return {\n            stateRule: rule\n        };\n    }\n    setSourceEp = (sourceEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.source.endpoint = sourceEp;\n        this.setState({ stateRule });\n    }\n\n    setDestination = (destination: Device | Group, type: ObjectType): void => {\n        const { stateRule } = this.state;\n        if (type === \"device\") {\n            const endpoints = getEndpoints(destination);\n            stateRule.target['ieee_address'] = (destination as Device)['ieee_address'];\n            stateRule.target.type = \"endpoint\";\n            stateRule.target.endpoint = endpoints[0];\n            delete stateRule.target.id;\n        } else if (type === \"group\") {\n            stateRule.target.id = (destination as Group).id;\n            stateRule.target.type = \"group\";\n            delete stateRule.target.ieee_address;\n        }\n        stateRule.clusters = [];\n        this.setState({ stateRule });\n    }\n\n    setDestinationEp = (destinationEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.target.endpoint = destinationEp;\n        stateRule.clusters = [];\n        this.setState({ stateRule });\n    }\n\n    setClusters = (clusters: Cluster[]): void => {\n        const { stateRule } = this.state;\n        stateRule.clusters = clusters;\n        this.setState({ stateRule });\n    }\n\n    getBidningParams(): { from: string; to: string; clusters: string[] } {\n        const { device, groups, devices } = this.props;\n        const { stateRule } = this.state;\n        const from = `${device.friendly_name}/${stateRule.source.endpoint}`;\n        let to = \"\";\n        if (stateRule.target.type === \"group\") {\n            const targetGroup = groups.find(group => group.id === stateRule.target.id) as Group;\n            to = `${targetGroup.friendly_name}`;\n        } else if (stateRule.target.type === \"endpoint\") {\n            const targeDevice = devices.get(stateRule.target?.ieee_address as string) as Device;\n            if (targeDevice.type === \"Coordinator\") {\n                to = `${targeDevice.friendly_name}`;\n            } else {\n                to = `${targeDevice.friendly_name}/${stateRule.target.endpoint}`;\n            }\n        }\n        return { from, to, clusters: stateRule.clusters };\n    }\n\n    onBindOrUnBindClick = (action: Action): void => {\n        const { onUnBind, onBind } = this.props;\n        const { from, to, clusters } = this.getBidningParams();\n        if (action == \"Bind\") {\n            onBind({ from, to, clusters });\n        } else {\n            onUnBind({ from, to, clusters });\n        }\n    }\n\n    isValidRule(): boolean {\n        const { stateRule } = this.state;\n        let valid;\n        if (stateRule.target.type == \"endpoint\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.ieee_address\n                && stateRule.target.endpoint\n                && stateRule.clusters.length > 0;\n        } else if (stateRule.target.type == \"group\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.id\n                && stateRule.clusters.length > 0;\n        }\n        return !!valid;\n    }\n\n    render() {\n        const { devices, groups, idx, device } = this.props;\n        const { stateRule } = this.state;\n\n        const targetType: ObjectType = stateRule.target.type === \"endpoint\" ? \"device\" : \"group\";\n\n        const sourceEndpoints = getEndpoints(device);\n        const target = getTarget(stateRule, devices, groups);\n        const destinationEndpoints = getEndpoints(target);\n\n        const possibleClusters: Set<Cluster> = new Set(stateRule.clusters);\n        const destEndpoint = device.endpoints.get(stateRule.source.endpoint);\n        if (destEndpoint) {\n            destEndpoint.clusters.output.forEach(cluster => possibleClusters.add(cluster));\n        }\n        return (\n            <div className=\"row pb-2 border-bottom\">\n                <div className=\"col-md-2\">\n                    <EndpointPicker label=\"Source EP\" disabled={!stateRule.isNew} values={sourceEndpoints} value={stateRule.source.endpoint} onChange={this.setSourceEp} />\n                </div>\n                <div className=\"col-md-2\">\n                    <DevicePicker label=\"Destination\" disabled={!stateRule.isNew} type={targetType} value={(stateRule.target.ieee_address || stateRule.target.id) as string} devices={devices} groups={groups} onChange={this.setDestination} />\n                </div>\n                <div className=\"col-md-2\">\n                    {stateRule.target.type === \"endpoint\" ? <EndpointPicker label=\"Destination EP\" disabled={!stateRule.isNew} values={destinationEndpoints} value={stateRule.target.endpoint as Endpoint} onChange={this.setDestinationEp} /> : null}\n                </div>\n                <div className=\"col-md-4\">\n                    <ClusterPicker label=\"Clusters\" pickerType={PickerType.MULTIPLE} clusters={Array.from(possibleClusters)} value={stateRule.clusters} onChange={this.setClusters} />\n                </div>\n                <div className=\"col-md-2\">\n                    <div className=\"form-group\">\n                        <label className=\"form-label\">Actions</label>\n                        <div className=\"form-control border-0\">\n                            <div className=\"btn-group btn-group-sm\">\n                                <Button<Action> item={\"Bind\"} disabled={!this.isValidRule()} title=\"Bind\" className=\"btn btn-primary\" onClick={this.onBindOrUnBindClick}>\n                                    Bind&nbsp;<i\n                                        className=\"fa fa-heart\" /></Button>\n                                <Button<Action> item={\"Unbind\"} disabled={!stateRule.isNew && !this.isValidRule()} title=\"Unbind\" className=\"btn btn-danger\" onClick={this.onBindOrUnBindClick}><i\n                                    className=\"fa fa-heart-broken\" />&nbsp;Unbind</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Device, Cluster, Endpoint } from \"../../types\";\nimport BindRow from \"./bind-row\";\nimport actions from \"../../actions/actions\";\nimport { BindApi } from \"../../actions/BindApi\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState, Group } from \"../../store\";\nimport { getEndpoints } from \"../../utils\";\n\n\ninterface PropsFromStore {\n    devices: Map<string, Device>;\n    groups: Group[];\n}\ninterface BindProps {\n    device: Device;\n}\n\nexport interface NiceBindingRule {\n    id?: number;\n    isNew?: number;\n    source: {\n        ieee_address: string;\n        endpoint: Endpoint;\n    };\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n    clusters: Cluster[];\n}\nconst rule2key = (rule: NiceBindingRule): string => `${rule.source.endpoint}-${rule.isNew}${rule.source.ieee_address}-${rule.target.id}-${rule.target.ieee_address}-${rule.clusters.join('-')}`;\nconst convertBidningsIntoNiceStructure = (device: Device): NiceBindingRule[] => {\n    const bindings = {};\n    device.endpoints.forEach((description, endpoint) => {\n        description.bindings\n            .forEach(b => {\n                let targetId = b.target.id ?? `${b.target.ieee_address}-${b.target.endpoint}`;\n\n                targetId = `${targetId}-${endpoint}`;\n\n                if (bindings[targetId]) {\n                    bindings[targetId].clusters.push(b.cluster);\n                } else {\n                    bindings[targetId] = {\n                        source: {\n                            // eslint-disable-next-line @typescript-eslint/camelcase\n                            ieee_address: device.ieee_address,\n                            endpoint\n                        },\n                        target: b.target,\n                        clusters: [b.cluster]\n                    }\n                }\n            });\n    });\n    return Object.values(bindings);\n}\ntype BindState = {\n    bidingRules: NiceBindingRule[];\n}\nexport class Bind extends Component<BindProps & PropsFromStore & BindApi, BindState> {\n    state: BindState = {\n        bidingRules: []\n    }\n    static getDerivedStateFromProps(props: Readonly<BindProps & PropsFromStore>): Partial<BindState> {\n        const { device } = props;\n        const endpoints = getEndpoints(device);\n        const bidingRules = convertBidningsIntoNiceStructure(device);\n        bidingRules.push({ isNew: Date.now(), target: {}, source: { 'ieee_address': device.ieee_address, endpoint: endpoints[0] }, clusters: [] } as unknown as NiceBindingRule);\n        return { bidingRules };\n    }\n    renderBody() {\n        const { device, devices, groups, removeBind, addBind } = this.props;\n        const { bidingRules } = this.state;\n        return bidingRules\n            .map((rule, idx) => <BindRow\n                key={rule2key(rule)}\n                rule={rule}\n                groups={groups}\n                onUnBind={removeBind}\n                onBind={addBind}\n                device={device}\n                idx={idx}\n                devices={devices} />)\n    }\n    render() {\n        return <div className=\"container-fluid\">\n            {this.renderBody()}\n        </div>;\n    }\n}\n\nconst mappedProps = [\"devices\", \"groups\"];\nconst ConnectedBindPage = connect<BindProps, {}, GlobalState, PropsFromStore & BindApi>(mappedProps, actions)(Bind);\nexport default ConnectedBindPage\n","import React, { ChangeEvent, Component, InputHTMLAttributes } from \"react\";\nimport { Attribute, Cluster } from \"../../types\";\n\nimport Clusters from \"zigbee-herdsman/dist/zcl/definition/cluster\"\n\ninterface AttributePickerProps {\n    cluster: Cluster;\n    value: Attribute;\n    label?: string;\n    onChange: (attr: Attribute) => void;\n}\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class AttributePicker extends Component<AttributePickerProps & Omit<InputHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n\n    onChange = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange } = this.props;\n        const { value } = e.target;\n        onChange(value);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { cluster, onChange, label, ...rest } = this.props;\n        let attrs = [] as string[];\n        const clusterDefinition = Clusters[cluster];\n        if (clusterDefinition) {\n            attrs = Object.keys(clusterDefinition.attributes);\n        }\n        const options = attrs.map(attr => <option key={attr} value={attr}>{attr}</option>);\n        options.unshift(<option key=\"none\" hidden>Select attribute</option>)\n        return (<div className=\"form-group\">\n            {label && <label className=\"form-label\">{label}</label>}\n            <select disabled={attrs.length === 0} className=\"form-control\" onChange={this.onChange} {...rest}>\n                {options}\n            </select>\n        </div>)\n    }\n}\n","import React, { ChangeEvent, Component } from \"react\";\nimport { Device, Endpoint, Cluster, Attribute } from \"../../types\";\n\nimport EndpointPicker from \"../endpoint-picker\";\nimport ClusterPicker, { ClusterGroup, PickerType } from \"../cluster-picker\";\n\nimport { NiceReportingingRule } from \"./reporting\";\nimport { getEndpoints } from \"../../utils\";\nimport AttributePicker from \"../attribute-picker\";\nimport Clusters from \"zigbee-herdsman/dist/zcl/definition/cluster\"\nimport Button from \"../button\";\n\n\ninterface ReportingRowProps {\n    rule: NiceReportingingRule;\n    device: Device;\n    onApply(rule: NiceReportingingRule): void;\n}\ninterface ReportingRowState {\n    stateRule: NiceReportingingRule;\n}\n\nconst getClusters = (device: Device, endpoint: Endpoint): ClusterGroup[] => {\n    let possibleClusters = Object.keys(Clusters);\n    let availableClusters = [] as Cluster[];\n    const ep = device.endpoints.get(endpoint);\n    if (ep) {\n        availableClusters = availableClusters.concat(ep.clusters.output);\n        possibleClusters = possibleClusters.filter(cluster => !availableClusters.includes(cluster))\n    }\n    return [\n        {\n            name: 'Avaliable',\n            clusters: availableClusters\n        },\n        {\n            name: 'Possible',\n            clusters: possibleClusters\n        }\n    ]\n}\nconst requiredRuleFileds = ['maximum_report_interval', 'minimum_report_interval', 'reportable_change', 'endpoint', 'cluster', 'attribute'];\nconst isValidRule = (rule: NiceReportingingRule): boolean => {\n    return requiredRuleFileds.every(field => rule[field] !== undefined)\n}\nexport default class ReportingRow extends Component<ReportingRowProps, ReportingRowState> {\n\n    state: Readonly<ReportingRowState> = {\n        stateRule: {} as NiceReportingingRule\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static getDerivedStateFromProps(props: Readonly<ReportingRowProps>, state: ReportingRowState): Partial<ReportingRowState> {\n        const { rule } = props;\n        return {\n            stateRule: rule\n        };\n    }\n\n    setSourceEp = (sourceEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.endpoint = sourceEp;\n        this.setState({ stateRule });\n    }\n    setCluster = (cluster: Cluster): void => {\n        const { stateRule } = this.state;\n        stateRule.cluster = cluster;\n        this.setState({ stateRule });\n    }\n\n    setAttribute = (attr: Attribute): void => {\n        const { stateRule } = this.state;\n        stateRule.attribute = attr;\n        this.setState({ stateRule });\n    }\n\n    changeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n        const { stateRule } = this.state;\n        const { name, value } = event.target;\n        stateRule[name] = value;\n        this.setState({ stateRule });\n    }\n\n    applyRule = (): void => {\n        const { onApply } = this.props;\n        const { stateRule } = this.state;\n        onApply(stateRule);\n    }\n\n    disableRule = (): void => {\n        const { onApply } = this.props;\n        const { stateRule } = this.state;\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        onApply({ ...stateRule, maximum_report_interval: 0xFFFF });\n    }\n\n\n    render() {\n        const { rule, device } = this.props;\n        const { stateRule } = this.state;\n        const sourceEndpoints = getEndpoints(device);\n\n        return (<div className=\"row pb-2 border-bottom\">\n\n            <div className=\"col-md-2\">\n                <EndpointPicker label=\"Endpoint\" disabled={!rule.isNew} values={sourceEndpoints} value={stateRule.endpoint} onChange={this.setSourceEp} />\n            </div>\n            <div className=\"col-md-2\">\n                <ClusterPicker label=\"Cluster\" disabled={!stateRule.endpoint} pickerType={PickerType.SINGLE} clusters={getClusters(device, stateRule.endpoint)} value={stateRule.cluster} onChange={this.setCluster} />\n            </div>\n            <div className=\"col-md-2\">\n                <AttributePicker label=\"Attribute\" value={stateRule.attribute} cluster={stateRule.cluster} onChange={this.setAttribute} />\n            </div>\n            <div className=\"col-md-2\">\n                <div className=\"form-group\">\n                    <label className=\"form-label\">Min rep interval</label>\n                    <input onChange={this.changeHandler} value={stateRule.minimum_report_interval} required type=\"number\" name=\"minimum_report_interval\" className=\"form-control\" />\n                </div>\n            </div>\n            <div className=\"col-md-1\">\n                <div className=\"form-group\">\n                    <label className=\"form-label\">Max rep interval</label>\n                    <input onChange={this.changeHandler} value={stateRule.maximum_report_interval} required type=\"number\" name=\"maximum_report_interval\" className=\"form-control\" />\n                </div>\n            </div>\n            <div className=\"col-md-1\">\n                <div className=\"form-group\">\n                    <label className=\"form-label\">Min rep change</label>\n                    <input placeholder=\"Enter 65535 to disable reporting\" onChange={this.changeHandler} value={stateRule.reportable_change} required type=\"number\" name=\"reportable_change\" className=\"form-control\" />\n                </div>\n\n            </div>\n            <div className=\"col-md-2\">\n                <div className=\"form-group\">\n                    <label className=\"form-label\">Actions</label>\n                    <div className=\"form-group\">\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            <Button<void> disabled={!isValidRule(stateRule)} className=\"btn btn-primary\" onClick={this.applyRule}>Apply</Button>\n                            {!stateRule.isNew ? <Button<void> promt className=\"btn btn-danger\" onClick={this.disableRule}>Disable</Button> : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>);\n    }\n}\n","import React, { Component } from \"react\";\nimport { Device, Cluster, Endpoint, Attribute } from \"../../types\";\n\nimport actions, { ReportingApi } from \"../../actions/actions\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState, Group } from \"../../store\";\nimport ReportingRow from \"./reporting-row\";\n\n\ninterface PropsFromStore {\n    devices: Map<string, Device>;\n    groups: Group[];\n}\ninterface ReportingProps {\n    device: Device;\n}\n\nexport interface NiceReportingingRule {\n    id?: number;\n    isNew?: number;\n    endpoint: Endpoint;\n\n    cluster: Cluster;\n    attribute: Attribute;\n    minimum_report_interval: number;\n    maximum_report_interval: number;\n    reportable_change: number;\n}\nconst convertBidningsIntoNiceStructure = (device: Device): NiceReportingingRule[] => {\n    const reportings: NiceReportingingRule[] = [];\n    device.endpoints.forEach((description, endpoint) => {\n        description.configured_reportings\n            .forEach(reportingRule => {\n                reportings.push({\n                    ...reportingRule,\n                    endpoint\n                } as NiceReportingingRule)\n            });\n    });\n    return reportings;\n}\ntype ReportingState = {\n    reportingRules: NiceReportingingRule[];\n}\n\nconst rule2key = (rule: NiceReportingingRule): string => `${rule.isNew}${rule.endpoint}${rule.cluster}-${rule.attribute}`;\n\nexport class Reporting extends Component<ReportingProps & PropsFromStore & ReportingApi, ReportingState> {\n    state: ReportingState = {\n        reportingRules: []\n    }\n    static getDerivedStateFromProps(props: Readonly<ReportingProps & PropsFromStore>): Partial<ReportingState> {\n        const { device } = props;\n        // const endpoints = getEndpoints(device);\n        const reportingRules = convertBidningsIntoNiceStructure(device);\n\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        reportingRules.push({ isNew: Date.now(), reportable_change: 0, minimum_report_interval: 60, maximum_report_interval: 3600 } as NiceReportingingRule);\n        return {\n            reportingRules\n        };\n    }\n\n    onApply = (rule: NiceReportingingRule) => {\n        const { configureReport, device } = this.props;\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        const { cluster, endpoint, attribute, minimum_report_interval, maximum_report_interval, reportable_change } = rule;\n        configureReport(`${device.friendly_name}/${endpoint}`, {\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            cluster, attribute, minimum_report_interval, maximum_report_interval, reportable_change\n        });\n    }\n    render() {\n        const { device } = this.props;\n        const { reportingRules } = this.state;\n\n        return (\n            <div className=\"container-fluid\">\n                {\n                    reportingRules.map((rule) =>\n                        <ReportingRow\n                            key={rule2key(rule)}\n                            rule={rule}\n                            device={device}\n                            onApply={this.onApply}\n                        />)\n                }\n\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"devices\", \"groups\"];\nconst ConnectedReportingPage = connect<ReportingProps, {}, GlobalState, PropsFromStore & ReportingApi>(mappedProps, actions)(Reporting);\nexport default ConnectedReportingPage\n","import React, { Component } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport actions from \"../../actions/actions\";\nimport { StateApi } from \"../../actions/StateApi\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n\n}\ninterface StatesProps {\n    device: Device;\n}\n\nclass States extends Component<StatesProps & PropsFromStore & StateApi, {}> {\n    setStateValue = (name: string, value: unknown): void => {\n        const { setStateValue, device } = this.props;\n        setStateValue(device.friendly_name, name, value);\n    };\n\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {};\n        return <pre>{JSON.stringify(deviceState, null, 4)}</pre>;\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\nconst ConnectedDeviceStates = connect<StatesProps, {}, GlobalState, StateApi>(mappedProps, actions)(States);\nexport default ConnectedDeviceStates;\n","\nimport { GenericExposedFeature, BinaryFeature, NumericFeature, EnumFeature, LightFeature, CompositeFeature, SwitchFeature, CoverFeature, LockFeature, ColorFeature, TextualFeature, ClimateFeature } from \"../../types\";\n\nexport function isBinaryFeature(feature: GenericExposedFeature | CompositeFeature): feature is BinaryFeature {\n  return feature.type === \"binary\";\n}\n\nexport function isNumericFeature(feature: GenericExposedFeature | CompositeFeature): feature is NumericFeature {\n  return feature.type === \"numeric\";\n}\nexport function isTextualFeature(feature: GenericExposedFeature | CompositeFeature): feature is TextualFeature {\n  return feature.type === \"text\";\n}\n\nexport function isEnumFeature(feature: GenericExposedFeature | CompositeFeature): feature is EnumFeature {\n  return feature.type === \"enum\";\n}\n\nexport function isLightFeature(feature: GenericExposedFeature | CompositeFeature): feature is LightFeature {\n  return feature.type === \"light\";\n}\nexport function isSwitchFeature(feature: GenericExposedFeature | CompositeFeature): feature is SwitchFeature {\n  return feature.type === \"switch\";\n}\n\nexport function isCoverFeature(feature: GenericExposedFeature | CompositeFeature): feature is CoverFeature {\n  return feature.type === \"cover\";\n}\n\nexport function isLockFeature(feature: GenericExposedFeature | CompositeFeature): feature is LockFeature {\n  return feature.type === \"lock\";\n}\n\nexport function isCompositeFeature(feature: GenericExposedFeature | CompositeFeature): feature is CompositeFeature {\n  return feature.type === \"composite\" && (feature.name !== \"color_xy\" && feature.name !== \"color_hs\");\n}\n\nexport function isColorFeature(feature: GenericExposedFeature | CompositeFeature): feature is ColorFeature {\n  return feature.type === \"composite\" && (feature.name == \"color_xy\" || feature.name == \"color_hs\");\n}\n\nexport function isClimateFeature(feature: GenericExposedFeature | CompositeFeature): feature is ClimateFeature {\n  return feature.type === \"climate\";\n}\n","import { JSONSchema7 } from \"json-schema\";\n\nexport type DeviceType = \"EndDevice\" | \"Router\" | \"Coordinator\";\n\n\ninterface OTAState {\n    state: \"available\" | \"updating\";\n    progress: number;\n    remaining: number;\n}\nexport type RGBColor = {\n    r: number;\n    g: number;\n    b: number;\n}\nexport type HueSaturationColor = {\n    hue: number;\n    saturation: number;\n}\n\nexport type XYColor = {\n    x: number;\n    y: number;\n}\nexport type AnyColor = RGBColor | XYColor | HueSaturationColor;\nexport interface DeviceState {\n    last_seen?: string | number;\n    elapsed?: number;\n    linkquality: number;\n    update?: OTAState;\n    [k: string]: string | number | boolean | OTAState | AnyColor | undefined;\n}\n\nexport type Cluster = string;\nexport type Attribute = string;\n\nexport type Endpoint = string | number;\n\n\n\n\nexport interface Meta {\n    revision: number;\n    transportrev: number;\n    product: number;\n    majorrel: number;\n    minorrel: number;\n    maintrel: number;\n}\n\nexport interface Coordinator {\n    type: string;\n    meta: Meta;\n}\n\nexport interface Network {\n    channel: number;\n    pan_id: number;\n    extended_pan_id: number[];\n}\n\nexport interface DeviceConfig {\n    [k: string]: object | string | number | boolean;\n}\nexport interface Z2MConfig {\n    homeassistant: boolean;\n    advanced: {\n        elapsed: boolean;\n        last_seen: 'disable' | 'ISO_8601' | 'ISO_8601_local' | 'epoch';\n        legacy_api: boolean;\n    };\n    devices: {\n        [key: string]: DeviceConfig;\n    };\n    device_options: DeviceConfig;\n    [k: string]: object | string | number | boolean;\n}\nexport interface BridgeConfig {\n    version: string;\n    commit: string;\n    coordinator: Coordinator;\n    network: Network;\n    log_level: string;\n    permit_join: boolean;\n\n}\nexport type BridgeState = \"online\" | \"offline\";\nexport interface BridgeInfo {\n    config?: Z2MConfig;\n    config_schema: JSONSchema7;\n    permit_join: boolean;\n    commit?: string;\n    version?: string;\n    coordinator?: {\n        meta?: {\n            revision?: string;\n        };\n        type?: string;\n    };\n    device_options: object;\n    restart_required: boolean;\n}\n\nexport type PowerSource = \"Battery\" | \"Mains (single phase)\" | \"DC Source\";\n\nexport type GenericFeatureType = \"numeric\" | \"binary\" | \"enum\" | \"text\";\nexport type ComposeiteFeatureType = \"fan\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"composite\" | \"climate\";\nexport type AllPossibleFeatures = GenericFeatureType & ComposeiteFeatureType;\n\n\nexport enum FeatureAccessMode {\n    NONE,\n    ACCESS_STATE = 0b001,\n    ACCESS_WRITE = 0b010,\n    ACCESS_READ = 0b100,\n}\nexport interface GenericExposedFeature {\n    type: GenericFeatureType;\n    name: string;\n    unit?: \"string\";\n    access: FeatureAccessMode;\n    endpoint?: Endpoint;\n    property: string;\n    description?: string;\n}\n\nexport interface BinaryFeature extends GenericExposedFeature {\n    type: \"binary\";\n    value_on: unknown;\n    value_off: unknown;\n    value_toggle?: unknown;\n}\n\nexport interface CompositeFeature extends Omit<GenericExposedFeature, \"type\"> {\n    type: ComposeiteFeatureType;\n    features: (GenericExposedFeature | CompositeFeature)[];\n}\n\nexport type GenericOrCompositeFeature = GenericExposedFeature | CompositeFeature;\n\nexport interface NumericFeaturePreset {\n    name: string;\n    value: number;\n    description?: string;\n}\nexport interface NumericFeature extends GenericExposedFeature {\n    type: \"numeric\";\n    value_min?: number;\n    value_max?: number;\n    presets?: NumericFeaturePreset[];\n}\n\nexport interface TextualFeature extends GenericExposedFeature {\n    type: \"text\";\n}\n\nexport interface EnumFeature extends GenericExposedFeature {\n    type: \"enum\";\n    values: unknown[];\n}\n\nexport interface LightFeature extends CompositeFeature {\n    type: \"light\";\n}\n\nexport interface SwitchFeature extends CompositeFeature {\n    type: \"switch\";\n}\n\nexport interface CoverFeature extends CompositeFeature {\n    type: \"cover\";\n}\n\nexport interface LockFeature extends CompositeFeature {\n    type: \"lock\";\n}\nexport interface FanFeature extends CompositeFeature {\n    type: \"fan\";\n}\n\nexport interface ClimateFeature extends CompositeFeature {\n    type: \"climate\";\n}\n\nexport interface ColorFeature extends CompositeFeature {\n    type: \"composite\";\n    name: \"color_xy\" | \"color_hs\";\n    features: NumericFeature[];\n}\n\nexport interface DeviceDefinition {\n    description: string;\n    model: string;\n    supports: string;\n    vendor: string;\n    exposes: GenericExposedFeature[] | CompositeFeature[];\n    supports_ota: boolean;\n}\nexport interface ReportingConfig {\n    cluster: Cluster;\n    attribute: Attribute;\n    maximum_report_interval: number;\n    minimum_report_interval: number;\n    reportable_change: number;\n}\nexport interface EndpointDescription {\n    bindings: BindRule[];\n    configured_reportings: ReportingConfig[];\n    clusters: {\n        input: Cluster[];\n        output: Cluster[];\n    };\n}\n\nexport interface Device {\n    ieee_address: string;\n    type: DeviceType;\n    network_address: number;\n    model: string;\n    friendly_name: string;\n    power_source: PowerSource;\n    model_id: string;\n    interviewing: boolean;\n    interview_completed: boolean;\n    software_build_id: number;\n    supported: boolean;\n    definition?: DeviceDefinition;\n    date_code: string;\n    endpoints: Map<Endpoint, EndpointDescription>;\n}\n\nexport type ObjectType = \"device\" | \"group\";\nexport interface BindRule {\n    cluster: Cluster;\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n\n}\nexport type SortDirection = \"asc\" | \"desc\";\n\nexport interface TouchLinkDevice {\n    ieee_address: string;\n    channel: number;\n}\n","import React from \"react\";\n\nimport cx from \"classnames\";\ntype DisplayValueProps = {\n    name: string;\n    value: unknown;\n}\n\nconst booleansMap = {\n    contact: new Map<boolean, string | JSX.Element>([\n        [true, 'Closed'],\n        [false, 'Open'],\n    ]),\n\n    occupancy: new Map([\n        [true, 'Occupied'],\n        [false, 'Clear']\n    ]),\n\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    water_leak: new Map<boolean, string | JSX.Element>([\n        [true, <span className={cx(\"text-danger\", \"animation-blinking\")} key=\"Leaking\">Leaking</span>],\n        [false, 'Clear']\n    ]),\n\n    tamper: new Map<boolean, string | JSX.Element>([\n        [true, <span className={cx(\"text-danger\", \"animation-blinking\")} key=\"tampered\">Tampered</span>],\n        [false, 'Clear']\n    ]),\n\n    _default: new Map([\n        [true, 'true'],\n        [false, 'false']\n    ])\n};\n\nexport function DisplayValue(props: DisplayValueProps) {\n    const { value, name } = props;\n    switch (typeof value) {\n        case 'boolean':\n            const mapValue = booleansMap[name] || booleansMap._default;\n            return <>{mapValue.get(value)}</>;\n        case \"undefined\":\n            return <>N/A</>;\n        case \"object\":\n            return <>{value === null ? 'null' : JSON.stringify(value)}</>;\n        case \"string\":\n            return <>{value === \"\" ? <small className=\"text-muted\">empty string</small> : value}</>;\n        default:\n            return <>{JSON.stringify(value)}</>;\n    }\n}\n","import React, { ChangeEvent, FunctionComponent } from \"react\";\n\nimport Button from \"../button\";\nimport { DisplayValue } from \"../display-value/DisplayValue\";\n\n\ntype ToggleProps = {\n    onChange(value: unknown): void;\n    value: unknown;\n    name: string;\n    valueOn: unknown;\n    valueOff: unknown;\n    minimal?: boolean;\n}\ntype ControlButtonProps = {\n    value: unknown;\n    onClick(value: unknown): void;\n    name: string;\n}\nconst ControlButton: FunctionComponent<ControlButtonProps> = (props) => {\n    const { value, onClick, name } = props;\n    return <Button<unknown> className=\"btn btn-link\" item={value} onClick={onClick}>\n        <DisplayValue value={value} name={name} />\n    </Button>\n}\n\nconst Toggle: FunctionComponent<ToggleProps> = (props) => {\n    const { onChange, value, valueOn, valueOff, minimal, name } = props;\n\n    const onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.checked ? valueOn : valueOff);\n    const valueExists = value !== undefined && value !== null;\n    const showOnOffButtons = !minimal || (minimal && !valueExists);\n    return (\n        <div>\n            {showOnOffButtons && <ControlButton value={valueOff} name={name} onClick={onChange} />}\n            {valueExists ? (\n                <div className=\"form-check form-switch form-check-inline align-middle me-0\">\n                    <input className=\"form-check-input\" type=\"checkbox\" checked={value === valueOn} onChange={onCheckboxChange} />\n                </div>\n            ) : <i className=\"fa fa-question\" title=\"Current value unknown\"></i>}\n            {showOnOffButtons && <ControlButton value={valueOn} name={name} onClick={onChange} />}\n\n        </div>\n    )\n}\n\nexport default Toggle;\n","\nimport React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { DeviceState, Device, Endpoint, GenericExposedFeature, CompositeFeature } from \"../../types\";\nimport { DisplayValue } from \"../display-value/DisplayValue\";\n\nimport { FetatureWrapperProps } from \"./composite/FeatureWrapper\";\n\nexport interface BaseFeatureProps<T> extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n    feature: T;\n    deviceState: DeviceState;\n    device: Device;\n    onChange(endpoint: Endpoint, value: object): void;\n    onRead(endpoint: Endpoint, value: object): void;\n    // featureWrapperClass: React.ComponentType<FetatureWrapperProps>;\n    featureWrapperClass: FunctionComponent<PropsWithChildren<FetatureWrapperProps>>;\n    minimal?: boolean;\n\n}\n\n\nexport const BaseViewer: FunctionComponent<BaseFeatureProps<GenericExposedFeature>> = (props) => {\n    const { feature: { property, unit, name}, deviceState } = props;\n    return <div><strong><DisplayValue value={deviceState[property]} name={name} /></strong>{unit ? <small className=\"text-muted ms-1\">{unit}</small> : null}</div>\n}\n\nexport const NoAccessError: FunctionComponent<BaseFeatureProps<GenericExposedFeature | CompositeFeature>> = ({ feature: { access } }) => <div className=\"alert alert-warning p-0\" role=\"alert\">Unknown acces {JSON.stringify(access, null, 4)}</div>;\n","import React, { FunctionComponent } from \"react\";\n\nimport { BinaryFeature, Endpoint, FeatureAccessMode } from \"../../../types\";\nimport Toggle from \"../../toggle\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype BinaryProps = BaseFeatureProps<BinaryFeature>;\n\nconst Binary: FunctionComponent<BinaryProps> = (props) => {\n    const { feature: { access, endpoint, name, property, value_off: valueOff, value_on: valueOn }, deviceState, onChange, minimal } = props;\n    if (access & FeatureAccessMode.ACCESS_WRITE) {\n        return <Toggle\n            onChange={(value) => onChange(endpoint as Endpoint, { [property]: value })}\n            value={deviceState[property]}\n            valueOn={valueOn}\n            valueOff={valueOff}\n            minimal={minimal}\n            name={name}\n        />\n    } else if (access & FeatureAccessMode.ACCESS_STATE) {\n        return <BaseViewer {...props} />\n    } else {\n        return <NoAccessError {...props} />\n    }\n}\nexport default Binary;\n","import React, { FunctionComponent } from \"react\";\nimport { ClimateFeature } from \"../../../types\";\n\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\n\ntype ClimateProps = BaseFeatureProps<ClimateFeature>\n\nconst Climate: FunctionComponent<ClimateProps> = (props) => <Composite type=\"climate\" {...props} />;\n\nexport default Climate;\n\n\n","import React, { FunctionComponent } from \"react\";\nimport { CoverFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\nconst stepsConfiguration = {\n  position: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, name: item + '' })),\n  tilt: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, name: item + '' }))\n};\n\ntype CoverProps = BaseFeatureProps<CoverFeature>\n\nconst Cover: FunctionComponent<CoverProps> = (props) => <Composite type=\"cover\" {...props} stepsConfiguration={stepsConfiguration} />;\n\nexport default Cover;\n\n\n","import React, { FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport * as convertColors from \"color-convert\";\nimport { AnyColor, XYColor, HueSaturationColor } from \"../../types\";\nimport Button from \"../button\";\n\n\ntype Payload = AnyColor;\n\nexport type ColorFormat = \"color_xy\" | \"color_hs\";\ntype ColorProps = {\n    value: Payload;\n    steps?: string[];\n    format: ColorFormat;\n    onChange(value: object): void;\n    minimal?: boolean;\n}\n\nexport const toRGB = (source: AnyColor, sourceFormat: ColorFormat): string => {\n    switch (sourceFormat) {\n        case \"color_xy\":\n            {\n                const { x = 0, y = 0 } = source as XYColor;\n                const z = 1.0 - x - y;\n                const Y = 1;\n                const X = (Y / y) * x;\n                const Z = (Y / y) * z;\n                return '#' + convertColors.xyz.hex([X * 100.0, Y * 100.0, Z * 100.0]);\n            }\n\n        case \"color_hs\":\n            {\n                const { hue = 0, saturation = 0 } = source as HueSaturationColor;\n                return '#' + convertColors.hsv.hex([hue, saturation, 100]);\n            }\n        default:\n            return '#FFFFFF';\n    }\n}\n\nconst rgbToTargetFormat = (source: string, targetFormat: ColorFormat): object => {\n    switch (targetFormat) {\n        case \"color_hs\":\n            const [hue, saturation, v] = convertColors.hex.hsv(source);\n            return { hue, saturation };\n\n\n        case \"color_xy\":\n            const [X, Y, Z] = convertColors.hex.xyz(source);\n            const x = X / (X + Y + Z);\n            const y = Y / (X + Y + Z);\n            return { x, y };\n\n        default:\n            return { hex: source };\n    }\n\n}\nconst pridePallete = ['#FF0018', '#FFA52C', '#FFFF41', '#008018', '#0000F9', '#86007D'];\nconst ColorEditor: FunctionComponent<ColorProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange' | 'value'>> = (props) => {\n\n    const { onChange, value = {} as AnyColor, format, steps = pridePallete, minimal, ...rest } = props;\n    const [currentColor, setCurrentColor] = useState<string>(toRGB(value, format));\n    useEffect(() => {\n        setCurrentColor(toRGB(value, format))\n    }, [value, format]);\n\n    return <>\n        {!minimal && <div className=\"btn-group me-2 float-start\">\n            {\n                steps.map(step => <Button<string>\n                    className=\"btn\"\n                    style={{ backgroundColor: step }}\n                    key={step}\n                    item={step}\n                    title={step}\n                    onClick={(item) => onChange(rgbToTargetFormat(item, format))}>&nbsp;&nbsp;&nbsp;</Button>)\n            }\n        </div>}\n        <input\n            type=\"color\"\n            className=\"form-control form-control-color\"\n            value={currentColor}\n            style={{ minWidth: 40 }}\n            onChange={e => {\n                onChange(rgbToTargetFormat(e.target.value, format))\n            }}\n            {...rest}\n        />\n    </>\n\n}\n\nexport default ColorEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { AnyColor, ColorFeature, Endpoint } from \"../../../../types\";\nimport ColorEditor from \"../../../color-editor/color-editor\";\n\nimport { BaseFeatureProps } from \"../../base\";\n\ntype ColorProps = BaseFeatureProps<ColorFeature>;\n\nconst Light: FunctionComponent<ColorProps> = (props) => {\n\n    const { deviceState, feature, onChange, minimal } = props;\n    const value = {};\n    for (const innerFeature of feature.features) {\n        value[innerFeature.name] = deviceState[feature.property]?.[innerFeature.property] ?? 0;\n    }\n    return <ColorEditor\n        onChange={(color) => onChange(feature.endpoint as Endpoint, { color })}\n        value={value as AnyColor}\n        format={feature.name}\n        minimal={minimal} />\n}\nexport default Light;\n","import React, { FunctionComponent } from \"react\";\nimport Button from \"../button\";\nimport cx from \"classnames\";\ntype Primitive = number | string;\n\nexport type ValueWithLabel = {\n    value: number;\n    name: string;\n    description?: string;\n};\n\nexport type ValueWithLabelOrPrimitive = ValueWithLabel | Primitive;\n\ntype EnumProps = {\n    value?: ValueWithLabelOrPrimitive;\n    onChange(value: unknown): void;\n    values: ValueWithLabelOrPrimitive[];\n    minimal?: boolean;\n}\n\n\nfunction isPrimitive(step: ValueWithLabelOrPrimitive): step is Primitive {\n    return step === null || [\"number\", \"string\", \"undefined\"].includes(typeof step);\n}\n\nconst EnumEditor: FunctionComponent<EnumProps> = (props) => {\n    const { onChange, values, value, minimal } = props;\n\n    if (minimal) {\n        const onSelectChange = (e) => {\n            const selectedValue = values.find(v => isPrimitive(v) ? v == e.target.value : v.value == e.target.value);\n            onChange(selectedValue);\n        }\n        return <select className=\"form-control\" onChange={onSelectChange}\n            value={isPrimitive(value as ValueWithLabelOrPrimitive) ? value as string : (value as ValueWithLabel).value}>\n            <option key=\"hidded\" hidden>----</option>\n            {values.map(v => <option\n                key={isPrimitive(v) ? v : v.name}\n                value={isPrimitive(v) ? v : v.value}>{isPrimitive(v) ? v : v.name}\n            </option>)}\n        </select>\n\n    }\n    return <div className=\"btn-group me-2\">\n        {\n            values.map(v => <Button<ValueWithLabelOrPrimitive>\n                className={cx(\"btn btn-outline-secondary\", { active: isPrimitive(v) ? v === value : v.value == (isPrimitive(value as ValueWithLabelOrPrimitive) ? value : (value as ValueWithLabel).value) })}\n                onClick={item => onChange(item)}\n                key={isPrimitive(v) ? v : v.name}\n                item={isPrimitive(v) ? v : v.value}\n                title={isPrimitive(v) ? v as string : v.description}\n            >{isPrimitive(v) ? v : v.name}</Button>)\n        }\n    </div>;\n}\nexport default EnumEditor;\n","\n\nimport React, { FunctionComponent } from \"react\";\n\nimport { Endpoint, EnumFeature, FeatureAccessMode } from \"../../../types\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype EnumProps = BaseFeatureProps<EnumFeature>\n\nconst Enum: FunctionComponent<EnumProps> = (props) => {\n  const { onChange, feature: { access, name, values, endpoint, property }, deviceState, minimal } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <EnumEditor\n      onChange={(value) => onChange(endpoint as Endpoint, { [name]: value })}\n      values={values as unknown as ValueWithLabelOrPrimitive[]}\n        value={deviceState[property] as ValueWithLabelOrPrimitive}\n        minimal={minimal}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Enum;\n","import React, { FunctionComponent } from \"react\";\nimport { LightFeature } from \"../../../types\";\nimport { scale } from \"../../../utils\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LightProps = BaseFeatureProps<LightFeature>\nconst stepsConfiguration = {\n  brightness: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: scale(item, [0, 100], [0, 255]), name: item + '%' })),\n  'color_temp': [1000, 2000, 3000, 4000, 5000, 6500].map<ValueWithLabelOrPrimitive>(kelvin => ({ value: 1000000.0 / kelvin, name: kelvin + 'K' }))\n};\n\nconst Light: FunctionComponent<LightProps> = (props) => <Composite type=\"light\" {...props} stepsConfiguration={stepsConfiguration} />;\nexport default Light;\n","import React, { FunctionComponent } from \"react\";\nimport { LockFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LockProps = BaseFeatureProps<LockFeature>\n\nconst Lock: FunctionComponent<LockProps> = (props) => <Composite type=\"lock\" {...props} />\nexport default Lock;","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport { randomString } from \"../../utils\";\nimport cx from \"classnames\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../enum-editor/enum-editor\";\n\n\n\ntype RangeProps = {\n    value: number;\n    unit?: string;\n    onChange(value: object | number): void;\n    steps?: ValueWithLabelOrPrimitive[];\n    minimal?: boolean;\n}\n\nconst RangeEditor: FunctionComponent<RangeProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n    const { onChange, value, min, max, unit, steps, minimal, ...rest } = props;\n    const [id, setId] = useState<string>(randomString(5));\n    const [currentValue, setCurrentValue] = useState<number>(value)\n\n    useEffect(() => {\n        setCurrentValue(value)\n    }, [value]);\n\n    const showRange = min !== undefined && max !== undefined;\n    return <div className=\"input-group align-items-center\">\n        {!minimal && steps ? <EnumEditor values={steps} onChange={onChange} value={currentValue} /> : null}\n        {showRange ? <input\n            id={id}\n            min={min}\n            max={max}\n            type=\"range\"\n            className=\"form-range form-control border-0\"\n            value={currentValue}\n            onChange={e => setCurrentValue(e.target.valueAsNumber)}\n            onMouseUp={(() => onChange(currentValue))}\n            {...rest}\n        /> : null}\n        {(!minimal || !showRange) && <input\n            type=\"number\"\n            className={cx(\"form-control\", { 'ms-1': showRange })}\n            value={currentValue}\n            onChange={e => setCurrentValue(e.target.valueAsNumber)}\n            onBlur={() => onChange(currentValue)}\n            {...rest}\n            style={showRange ? { 'maxWidth': '100px' } : {}}\n        />}\n        {(!minimal && unit) ? <span className=\"input-group-text\" style={{ 'minWidth': '66px' }}>{unit}</span> : null}\n    </div>\n}\n\nexport default RangeEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { Endpoint, FeatureAccessMode, NumericFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport RangeEditor from \"../../range-editor/range-editor\";\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ninterface NumericProps extends BaseFeatureProps<NumericFeature> {\n    steps?: ValueWithLabelOrPrimitive[];\n}\n\nconst Numeric: FunctionComponent<NumericProps> = (props) => {\n    const { feature: { presets, access, endpoint, name, property, unit, value_max: valueMax, value_min: valueMin }, deviceState, steps, onChange, minimal } = props;\n    if (access & FeatureAccessMode.ACCESS_WRITE) {\n        return <RangeEditor\n            onChange={(value) => onChange(endpoint as Endpoint, { [name]: value })}\n            value={deviceState[property] as number ?? 0}\n            min={valueMin}\n            max={valueMax}\n            steps={presets && presets.length ? presets as ValueWithLabelOrPrimitive[] : steps}\n            unit={unit}\n            minimal={minimal}\n        />\n    } else if (access & FeatureAccessMode.ACCESS_STATE) {\n        return <BaseViewer {...props} />\n    } else {\n        return <NoAccessError {...props} />\n    }\n}\n\nexport default Numeric;\n","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\n\ntype TextualProps = {\n  value: string;\n  unit?: string;\n  onChange(value: string): void;\n}\n\nconst TextualEditor: FunctionComponent<TextualProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n  const { onChange, value, unit, ...rest } = props;\n  const [currentValue, setCurrentValue] = useState<string>(value)\n\n  useEffect(() => {\n    setCurrentValue(value)\n  }, [value]);\n\n  return <Fragment>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.value)}\n      onBlur={() => onChange(currentValue)}\n      {...rest}\n    />\n    {unit ? <span className=\"input-group-text\" style={{'minWidth': '66px'}}>{unit}</span> : null}\n  </Fragment>\n}\n\nexport default TextualEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { Endpoint, FeatureAccessMode, TextualFeature } from \"../../../types\";\nimport TextualEditor from \"../../textual-editor/textual-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype TextualProps = BaseFeatureProps<TextualFeature>;\n\nconst Textual: FunctionComponent<TextualProps> = (props) => {\n  const { feature: { access, endpoint, name, property }, deviceState, onChange } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <TextualEditor\n      onChange={(value) => onChange(endpoint as Endpoint, { [name]: value })}\n      value={deviceState[property] as string ?? \"\"}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Textual;","import React, { FunctionComponent } from \"react\";\nimport { SwitchFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype SwitchProps = BaseFeatureProps<SwitchFeature>\n\nconst Switch: FunctionComponent<SwitchProps> = (props) => <Composite type=\"switch\" {...props} />;\n\nexport default Switch;","import React, { FunctionComponent, PropsWithChildren } from \"react\";\n\nimport { CompositeFeature, Device, DeviceState, Endpoint, GenericExposedFeature } from \"../../../types\";\nimport { isBinaryFeature, isNumericFeature, isTextualFeature, isEnumFeature, isLightFeature, isSwitchFeature, isCoverFeature, isLockFeature, isColorFeature, isClimateFeature, isCompositeFeature } from \"../../device-page/type-guards\";\nimport Binary from \"../binary/binary\";\nimport Climate from \"../climate/climate\";\nimport Cover from \"../cover/cover\";\nimport Color from \"../composite/color/color\";\nimport Enum from \"../enum/enum\";\nimport Light from \"../light/light\";\nimport Lock from \"../lock/lock\";\nimport Numeric from \"../numeric/numeric\";\nimport Textual from \"../textual/textual\";\nimport Composite from \"./composite\";\nimport Switch from \"../switch/switch\";\nimport { FetatureWrapperProps } from \"./FeatureWrapper\";\n\n\ninterface FeatureProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n    feature: CompositeFeature | GenericExposedFeature;\n    deviceState: DeviceState;\n    device: Device;\n    stepsConfiguration?: object;\n    onChange(endpoint: Endpoint, value: object): void;\n    onRead(endpoint: Endpoint, value: object): void;\n    featureWrapperClass: FunctionComponent<PropsWithChildren<FetatureWrapperProps>>;\n    minimal?: boolean;\n}\n\nexport const Feature = (props: FeatureProps) => {\n\n    const { feature, device, deviceState, stepsConfiguration, onRead, onChange, featureWrapperClass: FeatureWrapper, minimal } = props;\n\n    const genericParams = { key: JSON.stringify(feature), device, deviceState, onChange, onRead, featureWrapperClass: FeatureWrapper, minimal };\n    const wrapperParams = { key: JSON.stringify(feature), feature, onRead, deviceState };\n\n    if (isBinaryFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams} >\n            <Binary feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isNumericFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Numeric feature={feature} {...genericParams}\n                steps={stepsConfiguration?.[feature.name]}\n            />\n        </FeatureWrapper>\n    } else if (isTextualFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Textual feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isEnumFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Enum feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isLightFeature(feature)) {\n        return <Light feature={feature} {...genericParams} />\n    } else if (isSwitchFeature(feature)) {\n        return <Switch feature={feature} {...genericParams} />\n    } else if (isCoverFeature(feature)) {\n        return <Cover feature={feature} {...genericParams} />\n    } else if (isLockFeature(feature)) {\n        return <Lock feature={feature} {...genericParams} />\n    } else if (isColorFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Color feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isClimateFeature(feature)) {\n        return <Climate feature={feature} {...genericParams} />\n    } else if (isCompositeFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Composite type=\"composite\" feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    }\n    return (<FeatureWrapper {...wrapperParams}>\n        <pre>{JSON.stringify(feature, null, 4)}</pre>\n    </FeatureWrapper>);\n}\n","import React, { Component } from \"react\";\nimport { CompositeFeature, Endpoint } from \"../../../types\";\nimport { isCompositeFeature } from \"../../device-page/type-guards\";\nimport { BaseFeatureProps } from \"../base\";\nimport Button from \"../../button\";\nimport groupBy from \"lodash/groupBy\";\nimport { Feature } from \"./Feature\";\nimport cx from \"classnames\";\n\ntype CompositeType = \"composite\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"fan\" | \"climate\";\n\ninterface CompositeProps extends BaseFeatureProps<CompositeFeature> {\n    type: CompositeType;\n    stepsConfiguration?: object;\n    minimal?: boolean;\n}\n\ninterface CompositeState {\n    [key: string]: unknown;\n}\n\n\n\nexport default class Composite extends Component<CompositeProps, CompositeState> {\n    state: Readonly<CompositeState> = {}\n    onChange = (endpoint: Endpoint, value: object) => {\n        const { onChange, feature } = this.props;\n        if (isCompositeFeature(feature)) {\n            this.setState(value)\n        } else {\n            onChange(endpoint, value);\n        }\n    }\n    onApplyClick = () => {\n        const { onChange, feature: { endpoint, property } } = this.props;\n        onChange(endpoint as Endpoint, property ? { [property]: this.state } : this.state);\n    }\n\n    onRead = (endpoint: Endpoint, property: object) => {\n        const { onRead, feature } = this.props;\n        if (isCompositeFeature(feature)) {\n            onRead(endpoint, { [feature.property]: property })\n        } else {\n            onRead(endpoint, property);\n        }\n    }\n    render() {\n        const MAGIC_NO_ENDPOINT = 'MAGIC_NO_ENDPOINT';\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { feature, device, deviceState, onRead: _onRead, onChange: _onChange, featureWrapperClass, minimal } = this.props;\n        const { features } = feature;\n\n        const doGroupingByEndpoint = !minimal;\n        let result = [] as JSX.Element[];\n        if (doGroupingByEndpoint) {\n            const groupedFeatures = groupBy(features, f => f.endpoint ?? MAGIC_NO_ENDPOINT);\n\n            if (groupedFeatures[MAGIC_NO_ENDPOINT]) {\n                result.push(...groupedFeatures[MAGIC_NO_ENDPOINT].map(f => <Feature\n                    key={f.name + f.endpoint}\n                    feature={f}\n                    device={device}\n                    deviceState={deviceState}\n                    onChange={this.onChange}\n                    onRead={this.onRead}\n                    featureWrapperClass={featureWrapperClass}\n                    minimal={minimal}\n                />));\n                delete groupedFeatures[MAGIC_NO_ENDPOINT];\n            }\n            for (const epName in groupedFeatures) {\n                const featuresGroup = groupedFeatures[epName];\n                result.push(<div key={epName}>Endpoint: {epName}<div className=\"ps-4\">{...featuresGroup.map(f => <Feature\n                    key={f.name + f.endpoint}\n                    feature={f}\n                    device={device}\n                    deviceState={deviceState}\n                    onChange={this.onChange}\n                    onRead={this.onRead}\n                    featureWrapperClass={featureWrapperClass}\n                    minimal={minimal}\n                />)}</div></div>);\n            }\n        } else {\n            result = result.concat(features.map(f => <Feature\n                key={f.name + f.endpoint}\n                feature={f}\n                device={device}\n                deviceState={deviceState}\n                onChange={this.onChange}\n                onRead={this.onRead}\n                featureWrapperClass={featureWrapperClass}\n                minimal={minimal}\n            />));\n        }\n\n\n        if (isCompositeFeature(feature)) {\n            result.push(<div key={feature.name}><Button className={cx('btn btn-primary float-end', {'btn-sm': minimal})} onClick={this.onApplyClick}>Apply</Button></div>)\n        }\n        return result;\n\n    }\n}\n","import React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { CompositeFeature, GenericExposedFeature, Endpoint, FeatureAccessMode, DeviceState } from \"../../../types\";\nimport Button from \"../../button\";\n\n\nexport type FetatureWrapperProps = {\n    feature: CompositeFeature | GenericExposedFeature;\n    deviceState?: DeviceState;\n    onRead(endpoint: Endpoint, property: object): void;\n};\nexport const FeatureWrapper: FunctionComponent<PropsWithChildren<FetatureWrapperProps>> = (props) => {\n    const { children, feature, onRead } = props;\n    const isColor = feature.name?.startsWith(\"color_\"); //hardcode for color\n    const isReadable = (feature.access & FeatureAccessMode.ACCESS_READ) || isColor;\n    return <div className=\"row border-bottom pt-1\" >\n        <div className=\"col-12 col-md-3\">\n            <label className=\"col-form-label w-100\">\n                <div className=\"d-flex justify-content-between\">\n                    <strong title={JSON.stringify(feature)}>{feature.name}</strong>\n                    {isReadable ? (\n                        <Button<CompositeFeature | GenericExposedFeature> item={feature} onClick={(item) => {\n                            onRead(feature.endpoint as Endpoint, { [item.property]: \"\" })\n                        }} className=\"btn btn-primary btn-sm\"><i className=\"fa fa-sync\"></i></Button>\n                    ) : null}\n                </div>\n                {feature.description ? <small className=\"d-block text-muted\">{feature.description}</small> : null}\n            </label>\n        </div>\n        <div className=\"col-12 col-md-9\">\n            {children}\n        </div>\n    </div>\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { CompositeFeature, Device, DeviceState } from \"../../types\";\nimport actions from \"../../actions/actions\";\nimport { StateApi } from \"../../actions/StateApi\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\nimport Composite from \"../features/composite/composite\";\nimport { FeatureWrapper } from \"../features/composite/FeatureWrapper\";\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\ninterface ExposesProps {\n    device: Device;\n}\nclass Exposes extends Component<ExposesProps & PropsFromStore & StateApi, {}> {\n    render() {\n        const { device, deviceStates, setDeviceState, getDeviceState } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {} as DeviceState;\n        if (device.definition?.exposes) {\n            return <Composite feature={{ features: device.definition.exposes } as CompositeFeature} type=\"composite\" device={device} deviceState={deviceState}\n                onChange={(endpoint, value) => {\n                    setDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                }}\n                onRead={(endpoint, value) => {\n                    getDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                }}\n                featureWrapperClass={FeatureWrapper}\n            />\n        } else {\n            return \"Device doesn't expose anything\"\n        }\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceExposes = connect<ExposesProps, {}, GlobalState, StateApi>(mappedProps, actions)(Exposes);\nexport default ConnectedDeviceExposes;\n","import React, { Component, FunctionComponent } from \"react\";\nimport { Device } from \"../../types\";\nimport treeStyle from \"./tree.css\";\n\ninterface ClustersProps {\n    device: Device;\n}\ntype ClustersComp = {\n    label: string;\n    clusters: string[];\n}\nconst ClustersComp: FunctionComponent<ClustersComp> = (props) => {\n    const { label, clusters } = props;\n    if (clusters.length) {\n        return (<li>\n            <span>{label}</span>\n            <ul>{clusters.map(cluster => <li key={cluster}><span>{cluster}</span></li>)}</ul>\n        </li>)\n    } else {\n        return null;\n    }\n\n}\nexport default class Clusters extends Component<ClustersProps, {}> {\n    render() {\n        const { device } = this.props;\n        return <dl className={`${treeStyle.tree} row`}>\n            <ul>\n                <li>\n                    <span>{device.ieee_address}</span>\n                    <ul>\n                        {Array.from(device.endpoints.entries()).map(([epName, epData]) => {\n                            return (\n                                <li key={epName}>\n                                    <span>Endpoint <strong>{epName}</strong></span>\n                                    <ul>\n                                        <ClustersComp label=\"Output clusters\" clusters={epData.clusters.output} />\n                                        <ClustersComp label=\"Input clusters\" clusters={epData.clusters.input} />\n                                    </ul>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </li>\n            </ul>\n        </dl>\n\n    }\n}\n\n","/* eslint-disable react/display-name */\nimport React, { Component } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions from \"../../actions/actions\";\nimport { DeviceApi } from \"../../actions/DeviceApi\";\nimport Form from '@rjsf/bootstrap-4';\nimport { JSONSchema7 } from \"json-schema\"\ntype DeviceSettingsProps = {\n    device: Device;\n}\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\nconst uiSchema = {\n    \"ui:order\": [\"friendly_name\", \"retain\", \"retention\", \"qos\", \"filtered_attributes\", \"*\"]\n};\nexport class DeviceSettings extends Component<DeviceSettingsProps & GlobalState & PropsFromStore & DeviceApi, {}> {\n    updateConfig = ({ formData }): void => {\n        const { setDeviceOptions, device } = this.props;\n        setDeviceOptions(device.ieee_address, formData);\n    }\n    render() {\n        const { bridgeInfo: { config_schema: configSchema, config }, device } = this.props;\n        const deviceConfig = { ...config?.device_options, ...config?.devices[device.ieee_address] };\n\n        return <Form schema={configSchema.definitions?.device as JSONSchema7}\n            formData={deviceConfig}\n            onSubmit={this.updateConfig}\n            uiSchema={uiSchema}\n        />;\n\n    }\n}\n\nconst mappedProps = [\"deviceStates\", \"bridgeInfo\"];\n\nconst ConnectedDeviceSettingsPage = connect<DeviceSettingsProps, {}, GlobalState, PropsFromStore & DeviceApi>(mappedProps, actions)(DeviceSettings);\nexport default ConnectedDeviceSettingsPage;\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport DeviceInfo from \"./info\";\nimport Bind from \"./bind\";\nimport Reporting from \"./reporting\";\nimport States from \"./states\";\nimport ConnectedDeviceExposes from \"./exposes\";\nimport Clusters from \"./clusters\";\nimport DeviceSettings from \"./settings\";\nimport styles from \"./style.css\";\nimport { Device } from \"../../types\";\n\n\ntype UrlParams = {\n    dev: string;\n    tab?: TabName;\n};\ntype DevicePageProps = RouteComponentProps<UrlParams>;\n\n\ntype TabName = \"info\" | \"bind\" | \"state\" | \"exposes\" | \"clusters\" | \"reporting\" | \"settings\";\nconst getDeviceLinks = (dev: string) => ([\n    {\n        title: 'About',\n        url: `/device/${dev}/info`\n    },\n    {\n        title: 'Exposes',\n        url: `/device/${dev}/exposes`\n    },\n    {\n        title: 'Bind',\n        url: `/device/${dev}/bind`\n    },\n    {\n        title: 'Reporting',\n        url: `/device/${dev}/reporting`\n    },\n    {\n        title: 'Settings',\n        url: `/device/${dev}/settings`\n    },\n    {\n        title: 'State',\n        url: `/device/${dev}/state`\n    },\n    {\n        title: 'Clusters',\n        url: `/device/${dev}/clusters`\n    }\n]);\nexport class DevicePage extends Component<DevicePageProps & GlobalState, {}> {\n    renderContent() {\n        const { match, devices } = this.props;\n        const { tab, dev } = match.params;\n        const device = devices.get(dev) as Device;\n\n        switch (tab) {\n            case \"info\":\n                return <DeviceInfo device={device} />;\n            case \"bind\":\n                return <Bind device={device} />;\n            case \"state\":\n                return <States device={device} />;\n            case \"exposes\":\n                return <ConnectedDeviceExposes device={device} />;\n            case \"clusters\":\n                return <Clusters device={device} />\n            case \"reporting\":\n                return <Reporting device={device} />\n            case \"settings\":\n                return <DeviceSettings device={device} />\n            default:\n                return <Redirect to={`/device/${dev}/info`} />;\n        }\n\n    }\n    render() {\n        const { devices, match } = this.props;\n        const { dev } = match.params;\n        const device = devices.get(dev);\n        if (!device) {\n            return <div className=\"h-100 d-flex justify-content-center align-items-center\">Unknown device</div>\n        }\n        const links = getDeviceLinks(dev);\n\n        return (<>\n            <h1 className=\"h3\">{device.friendly_name}</h1>\n\n            <div className=\"tab\">\n                <ul className=\"nav nav-tabs\">\n                    {links.map(link => <li key={link.title} className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className={`nav-link ${styles['small-nav']}`} to={link.url}>{link.title}</NavLink>\n                    </li>)}\n                </ul>\n                <div className=\"tab-content\">\n                    <div className=\"tab-pane fade show active\">\n                        {this.renderContent()}\n                    </div>\n                </div>\n            </div>\n\n        </>);\n\n    }\n}\nconst devicePageWithRouter = withRouter(DevicePage);\nconst mappedProps = [\"devices\"];\nconst ConnectedDevicePage = connect<{}, {}, GlobalState, {}>(mappedProps, actions)(devicePageWithRouter);\nexport default ConnectedDevicePage;\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\n\nimport { GlobalState } from \"../../store\";\nimport Button from \"../button\";\nimport { TouchLinkDevice } from \"../../types\";\nimport { genDeviceDetailsLink } from \"../../utils\";\nimport cx from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { TouchlinkApi } from \"../../actions/TouchlinkApi\";\n\n\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class TouchlinkPage extends Component<TouchlinkApi & GlobalState, {}> {\n    onIdentifyClick = (device: TouchLinkDevice): void => {\n        const { touchlinkIdentify } = this.props;\n        touchlinkIdentify(device);\n    }\n\n    onResetClick = (device: TouchLinkDevice): void => {\n        const { touchlinkReset } = this.props;\n        touchlinkReset(device);\n    }\n\n    renderTouchlinkDevices() {\n        const { touchlinkDevices, devices, touchlinkIdentifyInProgress, touchlinkResetInProgress } = this.props;\n        const touchlinkInProgress = touchlinkIdentifyInProgress || touchlinkResetInProgress;\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table align-middle\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">ieee_address</th>\n                            <th scope=\"col\">friendly_name</th>\n                            <th scope=\"col\">channel</th>\n                            <th scope=\"col\">&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {touchlinkDevices.map((touchlinkDevice, idx) => (\n                            <tr key={touchlinkDevice.ieee_address}>\n                                <td>{idx + 1}</td>\n                                <td>{\n                                    devices.has(touchlinkDevice.ieee_address) ?\n                                        (<Link to={genDeviceDetailsLink(touchlinkDevice.ieee_address)}>{touchlinkDevice.ieee_address}</Link>) : touchlinkDevice.ieee_address}</td>\n                                <td>{devices.get(touchlinkDevice.ieee_address)?.friendly_name}</td>\n                                <td>{touchlinkDevice.channel}</td>\n                                <td>\n                                    <div className=\"btn-group float-right\" role=\"group\" aria-label=\"Basic example\">\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Identify\" className=\"btn btn-primary\" onClick={this.onIdentifyClick}><i\n                                            className={cx(\"fa\", { \"fa-exclamation-triangle\": !touchlinkIdentifyInProgress, \"fas fa-circle-notch fa-spin\": touchlinkIdentifyInProgress })} /></Button>\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Factory reset\" className=\"btn btn-danger\" onClick={this.onResetClick}><i\n                                            className={cx(\"fa\", { \"fa-broom\": !touchlinkResetInProgress, \"fas fa-circle-notch fa-spin\": touchlinkResetInProgress })} /></Button>\n                                    </div>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n    renderNoDevices() {\n        const { touchlinkScan } = this.props;\n        return (\n            <Button className=\"btn btn-primary mx-auto d-block\" onClick={touchlinkScan}>Scan</Button>\n        );\n    }\n    render() {\n        const { touchlinkDevices, touchlinkScanInProgress, touchlinkScan } = this.props;\n        return (\n            <div className=\"card\">\n                <div className=\"card-header allign-middle\">\n                    Detected {touchlinkDevices.length} touchlink devices.\n                        <Button title=\"Rescan\" className=\"btn btn-primary btn-sm float-right\" onClick={touchlinkScan}><i className=\"fa fa-sync\" /></Button>\n                </div>\n                <div className=\"card-body\">\n                    {touchlinkScanInProgress ? (\n                        <div className=\"d-flex justify-content-center\">\n                            <div className=\"spinner-border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                    ) : touchlinkDevices.length === 0 ? this.renderNoDevices() : this.renderTouchlinkDevices()}\n\n                </div>\n            </div>\n        );\n    }\n}\nconst mappedProps = [\"touchlinkDevices\", \"devices\", \"touchlinkScanInProgress\", \"touchlinkIdentifyInProgress\", \"touchlinkResetInProgress\"];\n\nexport default connect<{}, {}, GlobalState, TouchlinkApi>(mappedProps, actions)(TouchlinkPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions, { UtilsApi } from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Button from \"../button\";\nimport Form from '@rjsf/bootstrap-4';\nimport cx from \"classnames\";\nimport { JSONSchema7 } from \"json-schema\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport uiSchemas from \"./uiSchema.json\";\nimport { BridgeApi } from \"../../actions/BridgeApi\";\n\n\n\ntype SettingsTab = \"settings\" | \"bridge\" | \"about\" | \"tools\";\n\ntype SettigsKeys = string;\ntype UrlParams = {\n    tab?: SettingsTab;\n};\ntype SettingsPageProps = RouteComponentProps<UrlParams>;\n\ndeclare const FRONTEND_VERSION: string; //injected by webpack.DefinePlugin\n\ntype SettingsPageState = {\n    keyName: SettigsKeys;\n}\n\nconst ROOT_KEY_NAME = 'main';\n\nconst ingoredFields = ['groups', 'devices', 'device_options', 'ban', 'whitelist', 'map_options'];\nconst validJsonSchemasAsTabs = ['object', 'array'];\n\nconst removePropertiesFromSchema = (names: string[], schema: JSONSchema7 = {}, config: object = {}) => {\n\n    if (schema.required) {\n        schema.required = schema.required.filter(item => names.includes(item));\n    }\n\n    for (const name of names) {\n        if (schema.properties) {\n            delete schema.properties[name];\n        }\n        delete config[name];\n    }\n\n    return { schema, config };\n}\n\nconst tabs = [\n    {\n        title: 'Settings',\n        url: `/settings/settings`\n    },\n    {\n        title: 'Tools',\n        url: `/settings/tools`\n    },\n    {\n        title: 'About',\n        url: `/settings/about`\n    },\n    {\n        title: 'Raw',\n        url: `/settings/bridge`\n    },\n];\n\n\nconst isValidKeyToRenderAsTab = (key: string, value: JSONSchema7): boolean => (validJsonSchemasAsTabs.includes(value.type as string) && !ingoredFields.includes(key)) || (value && value.oneOf ? value.oneOf.length > 0 : false);\nexport class SettingsPage extends Component<SettingsPageProps & BridgeApi & GlobalState & UtilsApi, SettingsPageState> {\n    state = {\n        keyName: ROOT_KEY_NAME\n    }\n    renderCategoriesTabs() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                {tabs.map(tab => <li key={tab.url} className=\"nav-item\">\n                    <NavLink className=\"nav-link\" activeClassName=\"active\" to={tab.url}>{tab.title}</NavLink>\n                </li>)}\n            </ul>\n        )\n    }\n    render() {\n        return (\n            <div className=\"tab\">\n                {this.renderCategoriesTabs()}\n                <div className=\"tab-content h-100 p-0 p-sm-3\">\n                    <div className=\"tab-pane fade show active\">\n                        {this.renderSwitcher()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    renderSwitcher() {\n        const { match } = this.props;\n        const { tab } = match.params;\n        switch (tab) {\n            case \"tools\":\n                return this.renderTools();\n            case \"bridge\":\n                return this.renderBridgeInfo();\n            case \"about\":\n                return this.renderAbout();\n            case \"settings\":\n                return this.renderSettings();\n            default:\n                return <Redirect to={`/settings/settings`} />;\n        }\n    }\n    renderAbout() {\n        const { bridgeInfo } = this.props;\n        const isZigbee2mqttDevVersion = bridgeInfo.version?.match(/^\\d+\\.\\d+\\.\\d+$/) === null;\n        const zigbee2mqttVersion = isZigbee2mqttDevVersion ?\n            bridgeInfo.version :\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/Koenkk/zigbee2mqtt/releases/tag/${bridgeInfo.version}`}>{bridgeInfo.version}</a>;\n        const zigbee2mqttCommit = bridgeInfo.commit ?\n            <>commit: <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/Koenkk/zigbee2mqtt/commit/${bridgeInfo.commit}`}>{bridgeInfo.commit}</a></> :\n            null;\n\n        const rows = [\n            { title: 'Zigbee2MQTT version', content: <>{zigbee2mqttVersion} {zigbee2mqttCommit}</> },\n            { title: 'Coordinator type', content: <>{bridgeInfo.coordinator?.type ?? 'Unknown'}</> },\n            { title: 'Coordinator revision', content: <>{bridgeInfo.coordinator?.meta?.revision ?? 'Unknown'}</> },\n            { title: 'Frontend version', content: FRONTEND_VERSION },\n        ];\n\n        return <div className=\"p-3\">{rows.map(row => <dl key={row.title} className=\"row\">\n            <dt className=\"col-sm-3\">{row.title}</dt>\n            <dd className=\"col-sm-9\">{row.content}</dd>\n        </dl>)}</div>;\n\n    }\n    renderBridgeInfo() {\n        const { bridgeInfo } = this.props;\n        return <div className=\"p-3\"><pre>{JSON.stringify(bridgeInfo, null, 4)}</pre></div>\n\n    }\n\n    renderTools() {\n        const { exportState, restartBridge } = this.props;\n        return <div className=\"p-3\">\n            <Button className=\"btn btn-primary d-block mt-2\" onClick={exportState}>Download state</Button>\n            <Button className=\"btn btn-danger d-block mt-2\" onClick={restartBridge} promt>Restart Zigbee2MQTT</Button>\n        </div>\n    }\n    onSettingsSave = ({ formData }) => {\n        const { updateBridgeConfig } = this.props;\n        const { keyName } = this.state;\n        if (keyName === ROOT_KEY_NAME) {\n            updateBridgeConfig(formData);\n        } else {\n            updateBridgeConfig({ [keyName]: formData });\n        }\n    }\n\n    getSettingsTabs() {\n        const { bridgeInfo: { config_schema: configSchema = { properties: {} } } } = this.props;\n        const tabs = Object.entries<JSONSchema7>(configSchema.properties as unknown as ArrayLike<JSONSchema7>)\n            .filter(([key, value]) => isValidKeyToRenderAsTab(key, value))\n            .map(([key, value]) => ({\n                name: key,\n                title: value.title ?? key\n            }));\n        tabs.unshift({\n            name: ROOT_KEY_NAME,\n            title: 'Main'\n        });\n        return tabs;\n    }\n    getSettingsInfo() {\n        const { keyName } = this.state;\n        const { bridgeInfo: { config_schema: configSchema, config: originalConfig } } = this.props;\n\n        let configAndSchema = removePropertiesFromSchema(ingoredFields, cloneDeep(configSchema), cloneDeep(originalConfig) as object);\n\n        let currentSchema: JSONSchema7 = configAndSchema.schema;\n        let currentConfig = configAndSchema.config[keyName] as object;\n\n        if (keyName === ROOT_KEY_NAME) {\n            const ignoreTabNames = this.getSettingsTabs().map(tab => tab.name);\n            configAndSchema = removePropertiesFromSchema(ignoreTabNames, configAndSchema.schema, configAndSchema.config)\n            currentSchema = configAndSchema.schema;\n            currentConfig = configAndSchema.config;\n        } else {\n            currentConfig = configAndSchema.config[keyName] as object;\n            if (configAndSchema.schema.properties) {\n                currentSchema = configAndSchema.schema.properties[keyName] as JSONSchema7;\n            }\n        }\n        return { currentSchema, currentConfig };\n    }\n    renderSettingsTabs() {\n        const tabs = this.getSettingsTabs();\n        const { keyName } = this.state;\n        return <div className=\"nav nav-pills\">\n            {\n                tabs.map(tab =>\n                    <li key={tab.name} className=\"nav-item\">\n                        <a className={cx(\"nav-link\", { 'bg-primary active': keyName === tab.name })} aria-current=\"page\" href=\"#\" onClick={(e) => { this.setState({ keyName: tab.name }); e.preventDefault() }}>{tab.title}</a>\n                    </li>\n                )\n            }\n        </div>;\n    }\n    renderSettings() {\n        const { keyName } = this.state;\n        const { currentSchema, currentConfig } = this.getSettingsInfo();\n        return <div className=\"tab\">\n            {this.renderSettingsTabs()}\n            <div className=\"tab-content\">\n                <div className=\"tab-pane active\">\n                    <Form key={keyName} schema={currentSchema}\n                        formData={currentConfig}\n                        onSubmit={this.onSettingsSave}\n                        uiSchema={uiSchemas[keyName]}\n                    />\n                </div>\n            </div>\n        </div>\n\n    }\n}\nconst SettingsPageWithRouter = withRouter(SettingsPage);\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedSettingsPage = connect<{}, {}, GlobalState, BridgeApi>(mappedProps, actions)(SettingsPageWithRouter);\nexport default ConnectedSettingsPage;\n","import React, { FunctionComponent, RefObject, useRef, useState } from 'react';\n\nimport { GlobalState } from '../../store';\nimport actions from '../../actions/actions';\nimport { connect } from 'unistore/react';\nimport Button from '../button';\nimport cx from \"classnames\";\nimport { Link, NavLink } from 'react-router-dom';\nimport useComponentVisible from '../../hooks/useComponentVisible';\nimport { Device } from '../../types';\nimport style from \"./style.css\";\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { BridgeApi } from '../../actions/BridgeApi';\n\nconst urls = [\n    {\n        href: '/',\n        title: 'Devices',\n        exact: true\n    },\n    {\n        href: '/dashboard',\n        title: 'Dashboard'\n    },\n    {\n        href: '/map',\n        title: 'Map'\n    },\n    {\n        href: '/settings',\n        title: 'Settings'\n    },\n    {\n        href: '/groups',\n        title: 'Groups'\n    },\n    {\n        href: '/ota',\n        title: 'OTA'\n    },\n    {\n        href: '/touchlink',\n        title: 'Touchlink'\n    },\n    {\n        href: '/logs',\n        title: 'Logs'\n    }\n];\ntype StartStopJoinButtonProps = {\n    devices: Map<string, Device>;\n}\nconst StartStopJoinButton: FunctionComponent<StartStopJoinButtonProps & Pick<BridgeApi, 'setPermitJoin'> & Pick<GlobalState, 'bridgeInfo'>> = ({ devices, setPermitJoin, bridgeInfo }) => {\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n    const [selectedRouter, setSelectedRouter] = useState<Device>({} as Device);\n    const routers: JSX.Element[] = [];\n    const selectAndHide = (device: Device) => { setSelectedRouter(device); setIsComponentVisible(false) }\n    devices.forEach((device) => {\n        if (device.type == \"Router\") {\n            routers.push(<li key={device.friendly_name}>\n                <Button<Device> item={device} className=\"dropdown-item\" onClick={selectAndHide}>{device.friendly_name}</Button>\n            </li>)\n        }\n    });\n    const onBtnClick = () => {\n        setPermitJoin(!bridgeInfo.permit_join, selectedRouter);\n    }\n    return (\n        <div className=\"btn-group text-nowrap\">\n            <button onClick={onBtnClick} type=\"button\" className=\"btn btn-outline-secondary\">{bridgeInfo.permit_join ? \"Disable join\" : \"Permit join\"} ({selectedRouter?.friendly_name ?? \"All\"})</button>\n            {routers.length ? (<><Button<boolean> type=\"button\" onClick={setIsComponentVisible} item={!isComponentVisible} className=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                <span className=\"visually-hidden\">Toggle Dropdown</span>\n            </Button>\n                <ul ref={ref as RefObject<HTMLUListElement>} className={cx('dropdown-menu', style['scrollable-menu'], { show: isComponentVisible })}>\n                    <li key='all'>\n                        <Button className=\"dropdown-item\" onClick={selectAndHide}>All</Button>\n                    </li>\n                    {routers}\n                </ul></>) : null}\n\n        </div>\n    );\n}\n\ntype PropsFromStore = {\n    devices: Map<string, Device>;\n    bridgeInfo: object;\n}\nconst NavBar: FunctionComponent<PropsFromStore & BridgeApi & Pick<GlobalState, 'bridgeInfo'>> = (props) => {\n    const { devices, setPermitJoin, bridgeInfo, restartBridge } = props;\n    const ref = useRef<HTMLDivElement>();\n    const [navbarIsVisible, setnavbarIsVisible] = useState<boolean>(false);\n    useOnClickOutside(ref, () => {\n        setnavbarIsVisible(false);\n    });\n    return (<nav className=\"navbar navbar-expand-md navbar-light\">\n        <div ref={ref as React.MutableRefObject<HTMLDivElement>} className=\"container-fluid\">\n            <Link onClick={() => setnavbarIsVisible(false)} to=\"/\">Zigbee2MQTT</Link>\n            <button onClick={() => { setnavbarIsVisible(!navbarIsVisible) }} className=\"navbar-toggler\" type=\"button\">\n                <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className={cx(\"navbar-collapse collapse\", { show: navbarIsVisible })}>\n                <ul className=\"navbar-nav\">\n                    {\n                        urls.map(url =>\n                            <li key={url.href} className=\"nav-item\">\n                                <NavLink onClick={() => setnavbarIsVisible(false)} exact={url.exact} className=\"nav-link\" to={url.href} activeClassName=\"active\">\n                                    {url.title}\n                                </NavLink>\n                            </li>)\n                    }\n                </ul>\n                <StartStopJoinButton\n                    devices={devices}\n                    setPermitJoin={setPermitJoin}\n                    bridgeInfo={bridgeInfo}\n                />\n            </div>\n            {bridgeInfo.restart_required ? <Button onClick={restartBridge} promt className=\"btn btn-danger\">Restart</Button>: null}\n        </div>\n    </nav>)\n}\nconst mappedProps = [\"bridgeInfo\", \"devices\"];\nconst ConnectedNavBar = connect<{}, {}, PropsFromStore, BridgeApi>(mappedProps, actions)(NavBar);\nexport default ConnectedNavBar;\n\n","import { useState, useEffect, useRef } from 'react';\n\nexport default function useComponentVisible(initialIsVisible: boolean) {\n    const [isComponentVisible, setIsComponentVisible] = useState(\n        initialIsVisible\n    );\n    const ref = useRef<HTMLElement>(null);\n\n    const handleHideDropdown = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            setIsComponentVisible(false);\n        }\n    };\n\n    const handleClickOutside = (event: MouseEvent) => {\n        if (ref.current && !ref.current.contains(event.target as Node)) {\n            setIsComponentVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleHideDropdown, true);\n        document.addEventListener(\"click\", handleClickOutside, true);\n        return () => {\n            document.removeEventListener(\"keydown\", handleHideDropdown, true);\n            document.removeEventListener(\"click\", handleClickOutside, true);\n        };\n    });\n\n    return { ref, isComponentVisible, setIsComponentVisible };\n}","// extracted by mini-css-extract-plugin\nexport default {\"scrollable-menu\":\"_36Sntvyj-B3gg7Xj6xLUaY\"};","import {  useEffect } from 'react';\n\nexport function useOnClickOutside(ref, handler) {\n  useEffect(\n    () => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}","import React, { ChangeEvent, useState } from \"react\";\nimport { useInputChange } from \"../../hooks/useInputChange\";\nimport Button from \"../button\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\n\ninterface RenameGroupFormProps {\n  name: string;\n  onRename(oldName: string, newName: string): void;\n}\n\nexport function RenameGroupForm(props: RenameGroupFormProps) {\n  const { name, onRename } = props;\n  const [modalIsOpened, setModalIsOpened] = useState(false);\n\n  const [renameGroupForm, handleInputChange] = useInputChange({ friendlyName: name });\n\n  return (\n    <>\n      <Modal isOpen={modalIsOpened}>\n        <ModalHeader>\n          <h3>Rename group</h3>\n          <small>{name}</small>\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Friendly name</label>\n            <input name=\"friendlyName\" onChange={handleInputChange as (event: ChangeEvent<HTMLInputElement>) => void} type=\"text\" className=\"form-control\" value={renameGroupForm['friendlyName']} />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setModalIsOpened(false)}>Close</button>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => { onRename(name, renameGroupForm['friendlyName']); setModalIsOpened(false) }}>Save changes</button>\n        </ModalFooter>\n      </Modal>\n      <Button<void> className=\"btn btn-primary\" onClick={() => setModalIsOpened(true)} title=\"Rename group\"><i className=\"fa fa-edit\" /></Button>\n    </>\n  )\n}\n\n","import { ChangeEvent, useState } from 'react'\ntype KVP = { [key: string]: string };\nexport const useInputChange = (initialState: KVP) => {\n  const [input, setInput] = useState<KVP>(initialState);\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => setInput({\n    ...input,\n    [e.currentTarget.name]: e.currentTarget.value\n  })\n\n  return [input, handleInputChange]\n}","import React, { ChangeEvent, Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\n\nimport { GlobalState, Group, GroupAddress } from \"../../store\";\nimport Button from \"../button\";\nimport { Device, Endpoint } from \"../../types\";\nimport { genDeviceDetailsLink, getEndpoints } from \"../../utils\";\nimport style from './style.css';\nimport cx from 'classnames';\nimport EndpointPicker from \"../endpoint-picker\";\nimport DevicePicker from \"../device-picker\";\nimport { Link } from \"react-router-dom\";\nimport DeviceImage from \"../device-image\";\nimport { RenameGroupForm } from \"./RenameForm\";\nimport { GroupsApi } from \"../../actions/GroupsApi\";\n\n\ninterface GroupsPageState {\n    newGroupName: string;\n    newGroupId?: number;\n}\n\n\ninterface AddDeviceToGroupProps {\n    devices: Map<string, Device>;\n    group: Group;\n    addDeviceToGroup(deviceName: string, groupName: string): void;\n}\n\ninterface AddDeviceToGroupState {\n    device?: string;\n    endpoint?: Endpoint;\n}\n\ninterface DeviceGroupRowProps {\n    rowNumber: number;\n    groupAddress: GroupAddress;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroupRow extends Component<DeviceGroupRowProps, {}> {\n    getDeviceObj(): Device {\n        const { groupAddress, devices } = this.props;\n        return devices.get(groupAddress.ieee_address) as Device;\n    }\n    render() {\n        const { rowNumber, groupAddress, removeDeviceFromGroup } = this.props;\n        const device = this.getDeviceObj();\n\n        return <tr>\n            <th scope=\"row\">{rowNumber + 1}</th>\n            <td className={style[\"device-pic\"]}>\n                <DeviceImage className={cx(style[\"device-image\"])} device={device} />\n            </td>\n            <td><Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link></td>\n            <td>{groupAddress.ieee_address}</td>\n            <td>{groupAddress.endpoint}</td>\n            <td>{device && <Button<string> promt item={device.friendly_name} onClick={removeDeviceFromGroup} className=\"btn btn-danger btn-sm float-right\"><i className=\"fa fa-trash\" /></Button>}</td>\n        </tr>;\n    }\n}\ninterface DeviceGroupPropts {\n    group: Group;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(groupFriendlyName: string, deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroup extends Component<DeviceGroupPropts, {}> {\n    onRemove = (deviceFriendlyName: string): void => {\n        const { group, removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(group.friendly_name, deviceFriendlyName);\n    }\n    render() {\n        const { group, devices } = this.props;\n        return <table className=\"table table-sm\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Pic</th>\n                    <th scope=\"col\">friendlyName</th>\n                    <th scope=\"col\">ieee_addr</th>\n                    <th scope=\"col\">Endpoint</th>\n                    <th scope=\"col\" className=\"text-right\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                {group.members.map((groupMemebershipInfo, idx) => <DeviceGroupRow key={groupMemebershipInfo.ieee_address} removeDeviceFromGroup={this.onRemove} rowNumber={idx} devices={devices} groupAddress={groupMemebershipInfo} />)}\n            </tbody>\n        </table>;\n    }\n}\n\nclass AddDeviceToGroup extends Component<AddDeviceToGroupProps, AddDeviceToGroupState> {\n    state: Readonly<AddDeviceToGroupState> = {};\n\n\n    onSubmit = (): void => {\n        const { addDeviceToGroup, group } = this.props;\n        const { device, endpoint } = this.state;\n\n        addDeviceToGroup(endpoint ? `${device}/${endpoint}` : device as string, group.friendly_name);\n\n    }\n    onDeviceSelect = (device: Device): void => {\n        const endpoints = getEndpoints(device);\n        this.setState({ device: device.ieee_address, endpoint: endpoints[0] });\n    }\n\n    onEpChange = (endpoint: Endpoint): void => {\n        this.setState({ endpoint });\n    }\n    render() {\n        const { device, endpoint } = this.state;\n        const { devices } = this.props;\n        const deviceObj = devices.get(device as string) as Device;\n\n        const endpoints = getEndpoints(deviceObj);\n\n        return <form className=\"row\">\n\n            <div className=\"col\">\n                <div className=\"input-group\">\n                    <DevicePicker type=\"device\" value={device as string} devices={devices} onChange={this.onDeviceSelect} />\n                    <EndpointPicker values={endpoints} value={endpoint as Endpoint} onChange={this.onEpChange} />\n                </div>\n\n            </div>\n\n            <div className=\"col\">\n                <Button<void> type=\"button\" onClick={this.onSubmit} className=\"btn btn-primary\">Add to group</Button>\n            </div>\n\n\n        </form>\n    }\n}\n\nexport class GroupsPage extends Component<GroupsApi & GlobalState, GroupsPageState> {\n    state: GroupsPageState = {\n        newGroupName: '',\n        newGroupId: undefined\n    }\n\n\n    changeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value } as unknown as GroupsPageState);\n    }\n\n    onGroupCreateSubmit = (): void => {\n        const { newGroupName, newGroupId } = this.state;\n        const { createGroup } = this.props;\n        createGroup(newGroupName, newGroupId);\n    }\n\n    renderGroupCreationForm() {\n        const { newGroupName, newGroupId } = this.state;\n        return (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <form>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"newGroupName\" className=\"sr-only\">Group name</label>\n                            <input onChange={this.changeHandler} value={newGroupName} required type=\"text\" name=\"newGroupName\" className=\"form-control\" id=\"newGroupName\" placeholder=\"new group name\" />\n\n                            <label htmlFor=\"newGroupName\" className=\"sr-only\">Group id</label>\n                            <input onChange={this.changeHandler} value={newGroupId === undefined ? '' : newGroupId} type=\"number\" name=\"newGroupId\" className=\"form-control\" id=\"newGroupId\" placeholder=\"enter group id if necessary\" />\n\n                            <Button<void> onClick={this.onGroupCreateSubmit} className=\"btn btn-primary form-control\">Create group</Button>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n    removeGroup = (friendlyName: string): void => {\n        const { removeGroup } = this.props;\n        removeGroup(friendlyName);\n    }\n    removeDeviceFromGroup = (groupFriendlyName: string, deviceFriendlyName: string): void => {\n        const { removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(deviceFriendlyName, groupFriendlyName);\n    }\n    renameGroup = (oldName: string, newName: string) => {\n        const { renameGroup } = this.props;\n        renameGroup(oldName, newName);\n    }\n    renderGroups() {\n        const { groups, devices, addDeviceToGroup } = this.props;\n        return groups.map(group => (\n            <div key={group.id} className=\"card\">\n                <div className=\"card-header\" id={`heading${group.id}`}>\n                    <h5 className=\"mb-0\">\n                        <button className=\"btn btn-link btn-sm\">\n                            {group.friendly_name} (#{group.id})\n                                    </button>\n                        <div className=\"btn-group float-right btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n                            <RenameGroupForm name={group.friendly_name} onRename={this.renameGroup} />\n                            <Button<string> promt title=\"Remove group\" item={group.friendly_name} onClick={this.removeGroup} className=\"btn btn-danger\"><i className=\"fa fa-trash\" /></Button>\n                        </div>\n                    </h5>\n                </div>\n\n                <div>\n                    <div className=\"card-body\">\n                        <div className=\"table-responsive\">\n                            <DeviceGroup group={group} devices={devices} removeDeviceFromGroup={this.removeDeviceFromGroup} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-footer\">\n                    <AddDeviceToGroup addDeviceToGroup={addDeviceToGroup} devices={devices} group={group} />\n                </div>\n            </div>\n        )).reverse()\n\n    }\n\n    render() {\n        return <>\n            {this.renderGroupCreationForm()}\n            {this.renderGroups()}\n        </>\n\n    }\n}\n\nconst mappedProps = [\"groups\", \"devices\"];\nconst ConnectedGroupsPage = connect<{}, {}, GlobalState, GroupsApi>(mappedProps, actions)(GroupsPage);\nexport default ConnectedGroupsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"device-pic\":\"_2p1XqBiO9XLlCB-lT60VCH\",\"device-image\":\"_3Z1i8qUrV2sErNF0__pVZt\"};","import React, { MouseEvent, ThHTMLAttributes} from \"react\";\n\n\n\nimport { SortDirection } from \"../../types\";\nimport isEqual from \"lodash/isEqual\";\n\n\ninterface ActionTHProps<T> {\n    column: T | T[];\n    current: T | T[];\n    currentDirection: SortDirection;\n    onClick?(arg1: T | T[]): void;\n}\n\nexport default class ActionTH<T> extends React.Component<ActionTHProps<T> & Omit<ThHTMLAttributes<HTMLTableHeaderCellElement>, 'onClick'>, {}> {\n    onClick = (event: MouseEvent): void => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { column, onClick } = this.props;\n        onClick && onClick(column);\n    };\n\n    renderArrow () {\n        const { currentDirection, current, column } = this.props;\n        if (isEqual(current, column)) {\n            if (currentDirection == \"asc\") {\n                return <i className={`fa fa-sort-amount-down-alt`} />;\n            }\n            return <i className={`fa fa-sort-amount-down`} />;\n        }\n        return <i className={`fa fa-sort-amount-down invisible`} />;\n    }\n\n    render () {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, onClick, current, column, currentDirection, ...rest } = this.props;\n        return (<th {...rest}>\n            <span className=\"btn btn-link\" onClick={this.onClick}>{children}</span>\n            {this.renderArrow()}\n        </th>);\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"action-column\":\"_1AmFhCTIk_ifBlEJGnLJuK\",\"device-pic\":\"_1KD_wxLENsmTnroATY4BrA\",\"device-image\":\"_1kMXLbhsSotmS-uYUbIFl0\"};","\nimport React from \"react\";\nimport { SortColumn } from \".\";\nimport { SortDirection } from \"../../types\";\nimport ActionTH from \"./ActionTH\";\nimport style from \"./style.css\";\n\ntype TableHeaderProps = {\n    sortColumn: SortColumn | SortColumn[];\n    sortDirection: SortDirection;\n    onSortChange(column: SortColumn | SortColumn[], sortDir?: SortDirection): void;\n    lastSeenIsAvaliable: boolean;\n}\nexport const TableHeader = (props: TableHeaderProps) => {\n    const { sortColumn, sortDirection, onSortChange, lastSeenIsAvaliable } = props;\n\n    return (\n        <thead>\n            <tr className=\"text-nowrap\">\n                <th>#</th>\n                <th>Pic</th>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.friendly_name\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Friendly name</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.ieee_address\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>IEEE address</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.definition.vendor\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange} title=\"definition.vendor\">Manufacturer</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.definition.model\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Model</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.linkquality\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>LQI</ActionTH>\n                {lastSeenIsAvaliable && <ActionTH<SortColumn> className={style[\"action-column\"]} column={[\"state.last_seen\", \"state.elapsed\"]}\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Last seen</ActionTH>}\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.battery\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Power</ActionTH>\n                <th>&nbsp;</th>\n            </tr>\n        </thead>\n    )\n}\n","\nimport React from \"react\";\nimport style from \"./style.css\";\nimport { Link } from \"react-router-dom\";\nimport { Device, DeviceState } from \"../../types\";\nimport { genDeviceDetailsLink, lastSeen, toHex } from \"../../utils\";\nimport  DeviceControlGroup from \"../device-control\";\nimport DeviceImage from \"../device-image\";\nimport { DisplayValue } from \"../display-value/DisplayValue\";\nimport PowerSource from \"../power-source\";\nimport { VendorLink, ModelLink } from \"../vendor-links/verndor-links\";\ntype TableRowProps = {\n    device: Device;\n    deviceState: DeviceState;\n    id: number;\n    lastSeenIsAvaliable: boolean;\n}\nexport const TableRow = (props: TableRowProps) => {\n    const { device, deviceState, id, lastSeenIsAvaliable } = props;\n    return <tr key={device.friendly_name} title={deviceState.update?.state == \"available\" ? 'Avaliable OTA update' : device.definition?.description}>\n    <td className=\"font-weight-bold\">{id + 1}</td>\n    <td className={style[\"device-pic\"]}>\n        <DeviceImage className={style[\"device-image\"]} device={device} deviceStatus={deviceState} />\n    </td>\n    <td>\n        <Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link>\n    </td>\n    <td>{device.ieee_address} ({toHex(device.network_address, 4)})</td>\n    <td className=\"text-truncate text-nowrap position-relative\"><VendorLink device={device} /></td>\n    <td title={device?.definition?.description}><ModelLink device={device} /></td>\n    <td><DisplayValue value={deviceState?.linkquality} name=\"linkquality\"/></td>\n    {lastSeenIsAvaliable && <td>{lastSeen(deviceState.last_seen, deviceState.elapsed)}</td>}\n    <td className=\"text-left\">\n        <PowerSource source={device.power_source} battery={deviceState?.battery as number} batteryLow={deviceState.battery_low as boolean} />\n    </td>\n    <td>\n        <DeviceControlGroup device={device} state={deviceState} />\n    </td>\n</tr>\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport { Device, SortDirection, DeviceState } from \"../../types\";\nimport { Notyf } from \"notyf\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions from \"../../actions/actions\";\n\nimport isEqual from \"lodash/isEqual\";\nimport orderBy from \"lodash/orderBy\";\nimport Spinner from \"../spinner\";\nimport { TableHeader } from \"./TableHeader\";\nimport { TableRow } from \"./TableRow\";\n\n\n\nexport type SortColumn =\n    | \"device.network_address\"\n    | \"device.friendly_name\"\n    | \"device.ieee_address\"\n    | \"device.definition.vendor\"\n    | \"device.definition.model\"\n    | \"state.linkquality\"\n    | \"state.last_seen\"\n    | \"state.elapsed\"\n    | \"state.battery\";\n\n\ninterface ZigbeeTableState {\n    sortDirection: SortDirection;\n    sortColumn: SortColumn | SortColumn[];\n    currentTime: number;\n    sortedTableData: ZigbeeTableData[];\n    error?: object;\n}\n\ninterface ZigbeeTableData {\n    device: Device;\n    state: DeviceState;\n}\n\nconst storeKey = \"ZigbeeTableState\";\nconst longLoadingTimeout = 15 * 1000;\n\nexport class ZigbeeTable extends Component<GlobalState, ZigbeeTableState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortDirection: \"desc\",\n            sortColumn: \"device.network_address\",\n            currentTime: Date.now(),\n            sortedTableData: []\n        };\n    }\n\n    restoreState(): void {\n        const { sortColumn, sortDirection } = this.state;\n\n        const storedState = localStorage.getItem(storeKey);\n        if (storedState) {\n            try {\n                const restored: Pick<ZigbeeTableState, \"sortDirection\" | \"sortColumn\"> = JSON.parse(storedState);\n                this.setState(restored);\n            } catch (e) {\n                new Notyf().error(e.toString());\n            }\n        } else {\n            this.onSortChange(sortColumn, sortDirection);\n        }\n    }\n\n    saveState = (): void => {\n        const { sortDirection, sortColumn } = this.state;\n        const storeData = {\n            sortDirection,\n            sortColumn\n        };\n        //in private mode localstorage access can throw exceptions\n        try {\n            localStorage.setItem(storeKey, JSON.stringify(storeData));\n        } catch (e) {\n            new Notyf().error(e.toString());\n        }\n    };\n    handleLongLoading = () => {\n        const { devices } = this.props;\n\n        if (devices.size == 0) {\n            const error = <Fragment>\n                <strong>Loading devices takes too long time.</strong>\n                <div>Consider reading <a href=\"https://www.zigbee2mqtt.io/information/frontend.html\">documentation</a></div>\n            </Fragment>;\n            this.setState({ error });\n        }\n    }\n    componentDidMount(): void {\n        setTimeout(this.handleLongLoading, longLoadingTimeout);\n        this.restoreState();\n    }\n\n    static getDerivedStateFromProps(props: Readonly<GlobalState>, state: ZigbeeTableState): Partial<ZigbeeTableState> {\n        const { sortColumn, sortDirection } = state;\n        const { devices, deviceStates } = props;\n        const tableData: ZigbeeTableData[] = [];\n        devices.forEach((device) => {\n            if (device.type !== \"Coordinator\") {\n                tableData.push({\n                    device,\n                    state: deviceStates.get(device.friendly_name) ?? {} as DeviceState\n\n                });\n            }\n        });\n        return { sortedTableData: orderBy<ZigbeeTableData>(tableData, sortColumn, [sortDirection]) };\n    }\n\n\n    onSortChange = (column: SortColumn | SortColumn[], sortDir?: SortDirection): void => {\n        const { sortColumn } = this.state;\n        let { sortDirection } = this.state;\n\n        if (isEqual(sortColumn, column)) {\n            if (sortDir) {\n                sortDirection = sortDir;\n            } else if (sortDirection == \"asc\") {\n                sortDirection = \"desc\";\n            } else {\n                sortDirection = \"asc\";\n            }\n        }\n\n        this.setState({ sortColumn: column, sortDirection }, this.saveState);\n    };\n\n    renderError() {\n        const { error } = this.state;\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <div className=\"d-flex align-items-center\">\n                {error}\n            </div>\n        </div>);\n    }\n\n    render() {\n        const { error } = this.state;\n        const { devices } = this.props;\n        if (devices.size) {\n            return this.renderDevicesTable();\n        }\n        if (error) {\n            return this.renderError();\n        }\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <Spinner />\n        </div>);\n    }\n    lastSeenIsAvaliable(): boolean {\n        const { bridgeInfo } = this.props;\n        return bridgeInfo?.config?.advanced?.elapsed || bridgeInfo?.config?.advanced?.last_seen != \"disable\";\n    }\n\n\n\n    renderDevicesTable() {\n        const { sortedTableData, sortColumn, sortDirection } = this.state;\n        return (<div className=\"card\">\n            <div className=\"table-responsive\">\n                <table className=\"table align-middle\">\n                    <TableHeader\n                        lastSeenIsAvaliable={this.lastSeenIsAvaliable()}\n                        sortColumn={sortColumn}\n                        sortDirection={sortDirection}\n                        onSortChange={this.onSortChange}\n                    />\n                    <tbody>\n                        {sortedTableData.map(({ device, state }, id) => <TableRow\n                            key={device.friendly_name}\n                            device={device}\n                            deviceState={state}\n                            id={id}\n                            lastSeenIsAvaliable={this.lastSeenIsAvaliable()}\n                        />)}\n                    </tbody>\n                </table>\n            </div>\n        </div>);\n    }\n}\n\nconst mappedProps = [\"devices\", \"deviceStates\", \"bridgeInfo\"];\nconst ConnectedZigbeePage = connect<{}, ZigbeeTableState, GlobalState, {}>(mappedProps, actions)(ZigbeeTable);\nexport default ConnectedZigbeePage;\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport cx from \"classnames\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport { BridgeApi } from \"../../actions/BridgeApi\";\n\ntype LogsPageState = {\n    search: string;\n    logLevel: string;\n}\nconst ALL = 'all';\nconst TextWrapper = ({text}) => <>{text}</>;\nconst Highlighted = ({ text = '', highlight = '' }) => {\n    if (!highlight.trim()) {\n        return <TextWrapper text={text} />\n    }\n    const regex = new RegExp(`(${escapeRegExp(highlight)})`, 'gi')\n    const parts = text.split(regex)\n    return (\n        <>\n            {parts.filter(part => part).map((part, i) => (\n                regex.test(part) ? <mark key={i}>{part}</mark> : <TextWrapper key={i} text={part}></TextWrapper>\n            ))}\n        </>\n    )\n}\n\nconst logLevels = [ALL, 'debug', 'info', 'warn', 'error'];\nexport class LogsPage extends Component<GlobalState & BridgeApi, LogsPageState> {\n    state = { search: '', logLevel: ALL }\n    renderSearch() {\n        const { search } = this.state;\n        return <div className=\"card\">\n            <div className=\"card-body\">\n                <form className=\"row row-cols-lg-auto g-3 align-items-center\">\n                    <div className=\"col-12\">\n                        <label htmlFor=\"log-level\" className=\"form-label\">Show only</label>\n                        <select id=\"log-level\" className=\"form-select\" onChange={e => this.setState({ logLevel: e.target.value })}>\n                            {logLevels.map(level => <option key={level} value={level}>{level}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"col-12\">\n                        <label htmlFor=\"search-filter\" className=\"form-label\">Filter by text</label>\n                        <input id=\"search-filter\" className=\"form-control col-10\" placeholder=\"Enter search criteria\" value={search} onChange={(e) => this.setState({ search: e.target.value })} type=\"text\"></input>\n                    </div>\n                </form>\n            </div>\n        </div>;\n    }\n    render() {\n        let { logs } = this.props;\n        const { search, logLevel } = this.state;\n\n        const _search = new RegExp(escapeRegExp(search), 'gi');\n\n        logs = logs\n            .filter(l => (logLevel === ALL || l.level === logLevel) && (!search || _search.test(l.message)))\n            .sort();\n\n        return <>\n            {this.renderSearch()}\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    {logs.length == 0 ? <h1>You don&apos;t have {logLevel === ALL ? 'any' : logLevel} logs</h1> : null}\n                    <div className=\"overflow-auto\">\n                        {\n                            logs.map((l, idx) => <div key={idx}>\n                                {logLevel === ALL && <><span className={cx(\"badge\", {\n                                    'bg-danger': l.level === 'error',\n                                    'bg-warning': l.level === 'warning',\n                                    'bg-info': l.level === 'info',\n                                    'bg-secondary': ['error', 'warning', 'info'].includes(l.level) === false,\n                                }, \"text-capitalize\")}>{l.level}</span>&nbsp;</>}<code>\n                                    <Highlighted text={l.message} highlight={search}></Highlighted>\n                                </code></div>)\n                        }\n                    </div>\n                </div>\n            </div>\n        </>\n    }\n}\n\nconst mappedProps = [\"logs\", \"bridgeInfo\"];\n\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(LogsPage);\n","\nimport React, { Component, FunctionComponent } from \"react\";\n\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { OtaApi } from \"../../actions/OtaApi\";\nimport { GlobalState } from \"../../store\";\nimport Button from \"../button\";\nimport { genDeviceDetailsLink, toHHMMSS } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport { Device, DeviceState } from \"../../types\";\nimport { VendorLink, ModelLink } from \"../vendor-links/verndor-links\";\n\n\ntype OtaRowProps = {\n    device: Device;\n    state: DeviceState;\n}\n\nconst StateCell: FunctionComponent<OtaRowProps & OtaApi> = (props) => {\n    const { device, state, checkOTA, updateOTA } = props;\n    switch (state?.update?.state) {\n        case \"updating\":\n            return (<><div className=\"progress\">\n                <div className=\"progress-bar progress-bar-striped progress-bar-animated\" style={{ width: `${state.update.progress}%` }}>\n                    {state.update.progress}%</div>\n            </div>\n                <div>Remaining time {toHHMMSS(state.update.remaining)}</div>\n            </>\n            );\n        case \"available\":\n            return <Button<string> className=\"btn btn-danger btn-sm\" onClick={updateOTA} item={device.friendly_name} title=\"Update OTA\" promt>Update OTA</Button>\n        default:\n            return <Button<string> className=\"btn btn-primary btn-sm\" onClick={checkOTA} item={device.friendly_name} title=\"Check OTA\">Check OTA</Button>\n\n\n    }\n}\nconst OtaRow: FunctionComponent<OtaRowProps & OtaApi> = (props) => {\n    const { device, state, ...rest } = props;\n    return <tr>\n        <td><Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link></td>\n\n        <td className=\"text-truncate text-nowrap position-relative\"><VendorLink device={device} /></td>\n        <td title={device?.definition?.description}><ModelLink device={device} /></td>\n        <td>{device.date_code}</td>\n        <td>{device.software_build_id}</td>\n        <td>\n            <StateCell device={device} state={state} {...rest} />\n        </td>\n    </tr>\n}\n\n\nclass OtaPage extends Component<GlobalState & OtaApi, {}> {\n    getAllOtaDevices() {\n        const { devices } = this.props;\n        return Array.from(devices).filter(([, device]) => device?.definition?.supports_ota)\n    }\n    checkAllOTA = () => {\n        const { checkOTA } = this.props;\n        const otaDevices = this.getAllOtaDevices();\n        otaDevices.forEach(([, d]) => checkOTA(d.friendly_name));\n    }\n    render() {\n        const { deviceStates, checkOTA, updateOTA } = this.props;\n        const otaApi = { checkOTA, updateOTA };\n        const otaDevices = this.getAllOtaDevices();\n\n        return <div className=\"card\">\n            <div className=\"card-body\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Friendly name</th>\n                            <th>Manufacturer</th>\n                            <th>Model</th>\n                            <th>Firmware build date</th>\n                            <th>Firwmare version</th>\n                            <th><Button className=\"btn btn-danger btn-sm\" onClick={this.checkAllOTA} promt>Check all OTA</Button></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {otaDevices.length === 0 ? <tr><td colSpan={6}>You don&apos;t have any devices that support OTA</td></tr> : null}\n                        {otaDevices.map(([ieeeAddr, device]) => (\n                            <OtaRow key={ieeeAddr} device={device} state={deviceStates.get(device.friendly_name) as DeviceState} {...otaApi} />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    }\n}\n\nconst mappedProps = [\"devices\", \"deviceStates\"];\n\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(OtaPage);\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Button from \"./button\";\nimport store from \"../store\";\nimport { download } from \"../utils\";\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\ntype ErrorBoundaryProps = RouteComponentProps<{}>;\n\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    state: Readonly<ErrorBoundaryState> = {};\n\n    static getDerivedStateFromError(error: Error) {\n        return { hasError: true, error };\n    }\n\n    donwloadState = () => {\n        download(store.getState(), 'state.json');\n    }\n\n    render() {\n        const { error } = this.state;\n\n        if (error) {\n            const githubUrlParams = {\n                title: `Got error: ${error.message}`,\n                body: [\n                    `DESCRIBE HERE WHAT HAPPENED AND WHAT YOU EXPECTED TO HAPPEN`,\n                    \"\\n\\n\\n\\n\\n\",\n\n                    `**Current url**: ${window.location.toString()}`,\n                    `**Previous url**: ${document.referrer}`,\n                    \"\\n\",\n                    `**Error type**: ${error?.name}`,\n                    `**Error message**: ${error?.message}`,\n                    \"\\n\\n\",\n                    error?.stack\n                ].join(\"\\n\")\n            } as Record<string, string>;\n\n\n            const githubUrl = `https://github.com/nurikk/z2m-frontend/issues/new?${new URLSearchParams(githubUrlParams).toString()}`\n            return <div className=\"container\">\n\n                <h1 className=\"text-danger\">Hello, you&apos;ve found a bug. Congratulations!</h1>\n                <ol>\n                    <li><strong>Calm down</strong></li>\n                    <li><strong>Raise a github issue <a target=\"_blank\" rel=\"noopener noreferrer\" href={githubUrl}>here</a></strong></li>\n                    <li><strong><span className=\"btn btn-link p-0\" onClick={this.donwloadState}>Download this file</span> and attach to the issue</strong></li>\n                    <li><strong>Take a screenshot of this page and attach to the issue</strong></li>\n                </ol>\n                <div>\n                    <div>{error.name}</div>\n                    <div>{error.message}</div>\n                    <pre>{error.stack}</pre>\n                </div>\n            </div>\n\n        }\n        return this.props.children;\n    }\n\n    componentDidUpdate(prevProps: ErrorBoundaryProps) {\n        const { location: { pathname } } = this.props;\n        const { location: { pathname: prevPathname } } = prevProps;\n        if (prevPathname !== pathname) {\n            this.setState({ error: undefined });\n        }\n    }\n}\n\n","import PowerSource from '../../components/power-source';\nimport React from 'react';\nimport { Device, DeviceDefinition, DeviceState, GenericExposedFeature } from '../../types';\nimport { lastSeen } from '../../utils';\n\n\ntype Props = {\n    device: Device;\n    deviceState: DeviceState;\n};\n\nconst footerFeatures = [\n    \"linkquality\"\n];\n\nconst DeviceFooter: React.FC<Props> = ({ device, deviceState }) => {\n    const {\n        last_seen: lastSeenTime,\n        linkquality,\n    } = deviceState;\n    const { exposes } = device.definition as DeviceDefinition;\n    const rederedFeatures = [] as JSX.Element[];\n    (exposes as GenericExposedFeature[])\n        .filter(e => footerFeatures.includes(e.name))\n        .forEach(e => {\n            switch (e.name) {\n                case \"linkquality\":\n                    linkquality && rederedFeatures.push(<span key=\"linkquality\" className=\"me-1\"><i className=\"fa fa-signal fa-fw\" /> {linkquality} LQI</span>);\n                    break;\n                default:\n                    break;\n            }\n        });\n\n    rederedFeatures.push(<PowerSource key={\"power\"} source={device.power_source} battery={deviceState.battery as number} />);\n    return (\n        <footer className=\"card-footer pt-0\">\n            <div className=\"row justify-content-between flex-nowrap\">\n                <div title=\"last update\" className=\"col text-truncate\">\n                    {lastSeen(lastSeenTime)}\n                </div>\n                <div className=\"col col-auto text-truncate\">\n                    {rederedFeatures}\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default DeviceFooter;\n","import React from 'react';\nimport { CompositeFeature } from '../../types';\nimport cx from \"classnames\";\nimport { BaseFeatureProps } from '../features/base';\nimport DeviceFooter from './DeviceFooter';\n\nimport styles from './DashboardDevice.scss';\n\nimport { Link } from 'react-router-dom';\nimport { genDeviceDetailsLink } from '../../utils';\n\nimport Composite from '../features/composite/composite';\nimport DeviceImage from '../device-image';\n\ntype Props = BaseFeatureProps<CompositeFeature>;\n\n\nconst DashboardDevice: React.FC<Props> = ({ onChange, onRead, device, deviceState, feature: { features }, featureWrapperClass }) => {\n    return (\n        <div className=\"col-xl-3 col-lg-4 col-sm-6 col-12 d-flex\">\n            <div className={`flex-fill card flex-shrink-1`}>\n                <div className=\"card-header text-truncate pb-0\">\n                    <Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link>\n                </div>\n                <div className={`align-items-center card-body row`}>\n                    <DeviceImage device={device} className={cx(styles.deviceImage, 'col col-1')} />\n                    <div className=\"col col-11\">\n                        <Composite feature={{ features } as CompositeFeature}\n                            type=\"composite\"\n                            device={device}\n                            deviceState={deviceState}\n                            onChange={onChange}\n                            onRead={onRead}\n                            featureWrapperClass={featureWrapperClass}\n                            minimal={true}\n                        />\n                    </div>\n                </div>\n                <DeviceFooter\n                    device={device}\n                    deviceState={deviceState}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardDevice;\n","// extracted by mini-css-extract-plugin\nexport default {\"deviceImage\":\"_2sZwYIX5ipSoyWG2H7AU79\"};","import camelCase from \"lodash/camelCase\";\nimport startCase from \"lodash/startCase\";\nimport React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { FetatureWrapperProps } from \"../features/composite/FeatureWrapper\";\nimport cx from \"classnames\";\n\nconst getTemperatureIcon = (temperature: number) => {\n    let icon = 'fa-thermometer-empty';\n    if (temperature >= 30) {\n        icon = 'fa-thermometer-full';\n    } else if (temperature >= 25) {\n        icon = 'fa-thermometer-three-quarters';\n    } else if (temperature >= 20) {\n        icon = 'fa-thermometer-half';\n    } else if (temperature >= 15) {\n        icon = 'fa-thermometer-quarter';\n    }\n    return icon;\n};\n\n\n\nconst typeToClassMap = {\n    humidity: ['text-info', 'fa-tint'],\n    illuminance: ['fa-sun'],\n    pressure: ['fa-cloud-download-alt'],\n    co2: ['fa-atom', 'text-warning'],\n    voltage: ['fa-bolt', 'text-success'],\n    state: ['fa-star-half-alt'],\n    brightness: ['fa-sun'],\n    occupancy: ['fa-walking'],\n    current: ['fa-copyright', 'text-warning'],\n    power: ['fa-power-off', 'text-success'],\n    energy: ['fa-plug', 'text-info'],\n    frequency: ['fa-wave-square'],\n    tamper: ['fa-exclamation-circle'],\n    smoke: ['fa-smoking', 'text-danger'],\n    radiation_dose_per_hour: ['fa-radiation', 'text-danger'],\n    radioactive_events_per_minute: ['fa-radiation-alt', 'text-warning'],\n    power_factor: ['fa-industry', 'text-danger'],\n    /* eslint-disable @typescript-eslint/camelcase */\n    color_xy: ['fa-palette'],\n    color_hs: ['fa-palette'],\n    color_temp: ['fa-sliders-h'],\n    illuminance_lux: ['fa-sun'],\n    soil_moisture: ['fa-fill-drip'],\n    water_leak: ['fa-water'],\n    /* eslint-enable @typescript-eslint/camelcase */\n};\nconst getGenericFeatureIcon = (name: string, value: unknown): string => {\n    let classes = [] as string[];\n    switch (name) {\n        case 'temperature':\n            classes.push(cx('text-danger', getTemperatureIcon(value as number)))\n            break;\n        case 'contact':\n            classes.push(cx({ 'fa-door-closed text-muted': value, 'fa-door-open text-primary': !value }))\n            break;\n        case 'occupancy':\n            classes.push(cx({ 'text-warning': value }))\n            break;\n        case 'water_leak':\n            classes.push(cx({ 'text-primary': value }));\n            break;\n        default:\n            break;\n    }\n    classes = [...classes, ...(typeToClassMap[name] ?? [])];\n    if (!classes.length) {\n        classes.push('invisible');\n    }\n    return cx(classes);\n}\n\nexport const DashboardFeatureWrapper: FunctionComponent<PropsWithChildren<FetatureWrapperProps>> = (props) => {\n    const { children, feature, deviceState = {} } = props;\n    const icon = getGenericFeatureIcon(feature.name, deviceState[feature.property]);\n\n    return <div className=\"d-flex align-items-center\">\n        {icon && <div className=\"me-1\">\n            <i className={`fa fa-fw ${icon}`} />\n        </div>}\n        <div className=\"flex-shrink-1 flex-grow-1\">{startCase(camelCase(feature.name))}{feature.endpoint ? ` (${feature.endpoint})` : null}</div>\n        <div className=\"flex-shrink-0\">{children}</div>\n    </div>\n}\n\n","import React from 'react';\n\n\nimport { connect } from 'unistore/react';\n\n\nimport DashboardDevice from './DashboardDevice';\nimport { DeviceState, CompositeFeature, GenericExposedFeature, FeatureAccessMode } from '../../types';\nimport actions from '../../actions/actions';\nimport { StateApi } from \"../../actions/StateApi\";\nimport { GlobalState } from '../../store';\nimport { DashboardFeatureWrapper } from './DashboardFeatureWrapper';\nimport { isOnlyOneBitIsSet } from '../../utils';\n\nimport { isLightFeature } from '../device-page/type-guards';\nimport groupBy from \"lodash/groupBy\";\n\n\ntype Props = Pick<GlobalState, 'devices' | 'deviceStates'> & StateApi;\n\nconst genericRendererIgnoredNames = ['linkquality', 'battery', 'battery_low', 'illuminance_lux', 'color_temp_startup', 'voltage', 'strength'];\nconst whitelistFeatureNames = ['state', 'brightness', 'color_temp'];\nconst whitelistFeatureTypes = ['light'];\nconst nullish = ['', null, undefined];\n\nexport const onlyValidFeaturesForDashboard = (feature: GenericExposedFeature | CompositeFeature, deviceState: DeviceState = {} as DeviceState): GenericExposedFeature | CompositeFeature | false => {\n    const { access, property, name, type } = feature;\n    let { features } = feature as CompositeFeature;\n    if (isLightFeature(feature)) {\n        features = features.map(f => onlyValidFeaturesForDashboard(f, (property ? deviceState[property] : deviceState) as DeviceState)).filter(f => f) as (GenericExposedFeature | CompositeFeature)[];\n        const groupedFeatures = groupBy(features, 'property');\n        features = Object.values(groupedFeatures).map(f => f[0]);\n    }\n    const filteredOutFeature = {...feature, features} as GenericExposedFeature | CompositeFeature;\n    if (whitelistFeatureNames.includes(name)) {\n        return filteredOutFeature;\n    }\n    if (whitelistFeatureTypes.includes(type)) {\n        return filteredOutFeature;\n    }\n    if (access && !(access & FeatureAccessMode.ACCESS_STATE && !nullish.includes(deviceState[property] as string | null | undefined))) {\n        return false;\n    }\n    if (genericRendererIgnoredNames.includes(name)) {\n        return false;\n    }\n\n    if (access & FeatureAccessMode.ACCESS_STATE && isOnlyOneBitIsSet(access)) {\n        return filteredOutFeature;\n    }\n    if (Array.isArray(features) && features.length > 0) {\n        return filteredOutFeature;\n    }\n    return false;\n}\n\nconst Dashboard: React.FC<Props> = (props) => {\n    const { setDeviceState, getDeviceState, deviceStates } = props;\n    return (\n        <div className=\"row\">\n            {Array.from(props.devices)\n                .filter(([, device]) => device.supported)\n                .map(([, device]) => ({ device, deviceState: deviceStates.get(device.friendly_name) ?? ({} as DeviceState) }))\n                .map(({ device, deviceState }) => {\n                    const _features = ((device.definition?.exposes ?? []) as (GenericExposedFeature | CompositeFeature)[]);\n                    const filteredFeatures = _features\n                        .map((e: GenericExposedFeature | CompositeFeature) => onlyValidFeaturesForDashboard(e, deviceState))\n                        .filter(f => f);\n                    return { device, deviceState, filteredFeatures };\n                })\n                .filter(({ filteredFeatures }) => filteredFeatures.length > 0)\n                .map(({ device, deviceState, filteredFeatures }) => {\n\n                    return (\n                        <DashboardDevice\n                            key={device.ieee_address}\n                            feature={{ features: filteredFeatures } as CompositeFeature}\n                            device={device}\n                            deviceState={deviceState}\n                            onChange={(endpoint, value) =>\n                                setDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                            }\n                            onRead={(endpoint, value) =>\n                                getDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                            }\n                            featureWrapperClass={DashboardFeatureWrapper}\n                        />\n                    );\n                })}\n        </div>);\n};\n\nconst mappedProps = ['devices', 'deviceStates'];\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(Dashboard);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\n\nconst StateNotifier = (props: GlobalState) => {\n    const { bridgeState } = props;\n    const [modalOpened, setModalOpened] = useState(bridgeState !== \"online\");\n    useEffect(() => {\n        if (bridgeState !== \"online\") {\n            setModalOpened(true);\n        } else {\n            setModalOpened(false);\n        }\n    }, [bridgeState])\n\n    return (\n        <Modal isOpen={modalOpened}>\n            <ModalHeader>Zigbee2MQTT</ModalHeader>\n            <ModalBody>\n                <div>Hello, Zigbee2MQTT in status <span className=\"text-danger\">{bridgeState}</span>.</div>\n                <div>Please wait....</div>\n            </ModalBody>\n            <ModalFooter>\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setModalOpened(false)}>Close</button>\n            </ModalFooter>\n        </Modal>\n    );\n}\nconst mappedProps = [\"bridgeState\"];\nconst ConnectedStateNotifier = connect<{}, {}, GlobalState, {}>(mappedProps, actions)(StateNotifier);\nexport default ConnectedStateNotifier;\n\n","import \"notyf/notyf.min.css\";\nimport \"./styles/styles.global.scss\";\n\nimport React, { Component, FunctionComponent } from 'react';\n\nimport ConnectedMap from \"./components/map\";\n\nimport {\n    Switch,\n    Route,\n    HashRouter\n} from \"react-router-dom\";\n\nimport ConnectedDevicePage from \"./components/device-page\";\nimport TouchlinkPage from \"./components/touchlink-page\";\n\nimport store from \"./store\";\nimport { Provider } from \"unistore/react\";\nimport api from './api';\n\n\nimport ConnectedSettingsPage from \"./components/settings\";\nimport NavBar from \"./components/navbar\";\nimport ConnectedGroupsPage from \"./components/groups\";\nimport ConnectedZigbeePage from \"./components/zigbee\";\nimport LogsPage from \"./components/logs-page\";\nimport OtaPage from \"./components/ota-page\";\nimport ReactDOM from \"react-dom\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport DashboardPage from \"./components/dashboard-page\";\nimport StateNotifier from \"./components/state-notifier/StateNotifier\";\n\nconst ConnectedDevicePageWrap: FunctionComponent<{ dev: string }> = ({ dev }) => (\n    <ConnectedDevicePageWrap dev={dev} />\n);\n\n\napi.connect();\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Main extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <HashRouter>\n                    <StateNotifier />\n\n                    <div className=\"main\">\n                        <NavBar />\n                        <main className=\"content p-0 p-sm-3\">\n                            <div className=\"container-fluid p-0 h-100\">\n                                <Switch>\n                                    <Route path=\"/ota\" render={(props) => <ErrorBoundary {...props}><OtaPage /></ErrorBoundary>} />\n                                    <Route path=\"/map\" render={(props) => <ErrorBoundary {...props}><ConnectedMap /></ErrorBoundary>} />\n                                    <Route path=\"/device/:dev/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedDevicePage /></ErrorBoundary>} />\n                                    <Route path=\"/settings/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedSettingsPage /></ErrorBoundary>} />\n                                    <Route path=\"/groups\" render={(props) => <ErrorBoundary {...props}><ConnectedGroupsPage /></ErrorBoundary>} />\n                                    <Route path=\"/logs\" render={(props) => <ErrorBoundary {...props}><LogsPage /></ErrorBoundary>} />\n                                    <Route path=\"/touchlink\" render={(props) => <ErrorBoundary {...props}><TouchlinkPage /></ErrorBoundary>} />\n                                    <Route path=\"/dashboard\" render={(props) => <ErrorBoundary {...props}><DashboardPage /></ErrorBoundary>} />\n                                    <Route path=\"/\" render={(props) => <ErrorBoundary {...props}><ConnectedZigbeePage /></ErrorBoundary>} />\n                                </Switch>\n                            </div>\n                        </main>\n                    </div>\n                </HashRouter>\n            </Provider >\n\n        );\n    }\n}\n\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}