{"version":3,"sources":["webpack:///./src/components/map/map.css?ebaa","webpack:///./src/components/map/links.tsx","webpack:///./src/images/generic-zigbee-device.png","webpack:///./src/utils.ts","webpack:///./src/components/map/types.ts","webpack:///./src/components/device-image/index.tsx","webpack:///./src/components/map/nodes.tsx","webpack:///./src/components/cluster-picker/index.tsx","webpack:///./src/store.ts","webpack:///./src/initialState.txt","webpack:///./src/api.ts","webpack:///./src/actions.ts","webpack:///./src/components/button/index.tsx","webpack:///./src/components/map/consts.ts","webpack:///./src/components/spinner.tsx","webpack:///./src/components/map/index.tsx","webpack:///./src/components/modal/index.tsx","webpack:///./src/components/device-control/index.tsx","webpack:///./src/components/device-page/style.css?16dd","webpack:///./src/components/vendor-links/verndor-links.tsx","webpack:///./src/components/power-source/style.css?d24a","webpack:///./src/components/power-source/index.tsx","webpack:///./src/components/device-page/info.tsx","webpack:///./src/components/device-picker/index.tsx","webpack:///./src/components/endpoint-picker/index.tsx","webpack:///./src/types.ts","webpack:///./src/components/device-page/bind-row.tsx","webpack:///./src/components/device-page/bind.tsx","webpack:///./src/components/attribute-picker/index.tsx","webpack:///./src/components/device-page/reporting-row.tsx","webpack:///./src/components/device-page/reporting.tsx","webpack:///./src/components/device-page/states.tsx","webpack:///./src/components/device-page/type-guards.ts","webpack:///./src/components/enum-editor/enum-editor.tsx","webpack:///./src/components/range-editor/range-editor.tsx","webpack:///./src/components/DisplayValue.tsx","webpack:///./src/components/features/base.tsx","webpack:///./src/components/features/numeric/numeric.tsx","webpack:///./src/components/toggle/index.tsx","webpack:///./src/components/features/binary/binary.tsx","webpack:///./src/components/features/enum/enum.tsx","webpack:///./src/components/features/light/light.tsx","webpack:///./src/components/features/switch/switch.tsx","webpack:///./src/components/features/cover/cover.tsx","webpack:///./src/components/features/lock/lock.tsx","webpack:///./src/components/color-editor/color-editor.tsx","webpack:///./src/components/features/composite/color/color.tsx","webpack:///./src/components/textual-editor/textual-editor.tsx","webpack:///./src/components/features/textual/textual.tsx","webpack:///./src/components/features/climate/climate.tsx","webpack:///./src/components/features/composite/composite.tsx","webpack:///./src/components/device-page/exposes.tsx","webpack:///./src/components/device-page/tree.css?271e","webpack:///./src/components/device-page/clusters.tsx","webpack:///./src/components/device-page/index.tsx","webpack:///./src/components/touchlink-page/index.tsx","webpack:///./src/components/universal-editor/index.tsx","webpack:///./src/components/settings/index.tsx","webpack:///./src/components/navbar/style.css?1108","webpack:///./src/components/navbar/index.tsx","webpack:///./src/hooks/useComponentVisible.tsx","webpack:///./src/hooks/useOnClickOutside.tsx","webpack:///./src/components/groups/style.css?c745","webpack:///./src/components/groups/RenameForm.tsx","webpack:///./src/hooks/useInputChange.ts","webpack:///./src/components/groups/index.tsx","webpack:///./src/components/zigbee/style.css?bc2b","webpack:///./src/components/zigbee/ActionTH.tsx","webpack:///./src/components/zigbee/index.tsx","webpack:///./src/components/logs-page/index.tsx","webpack:///./src/components/ErrorBoundary.tsx","webpack:///./src/index.tsx"],"names":["Link","props","linkType","id","rest","className","link","strokeWidth","fill","LinkLabel","linkLabel","linkqualities","join","links","ref","current","selectAll","data","length","map","sourceIeeeAddr","targetIeeeAddr","key","xlinkHref","genDeviceDetailsLink","deviceIdentifier","toHex","input","padding","repeat","toString","substr","toUpperCase","randomString","len","Math","random","replacer","value","originalObject","this","Map","dataType","Array","from","entries","reviver","ZigbeeRelationship","serialize","JSON","stringify","download","filename","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","body","appendChild","href","setTimeout","click","revokeObjectURL","removeChild","getEndpoints","obj","endpoints","keys","members","g","endpoint","genericDeiviceImageFallback","device","AVALIABLE_GENERATORS","deviceName","definition","model","replace","imageGenerators","setimageGenerators","deviceStatus","src","onImageError","newGenerators","shift","otaSpinner","update","state","title","interviewSpinner","interviewing","unseccessfullInterview","interview_completed","onError","getStarShape","innerCircleArms","styleStarWidth","innerOuterRadiusRatio","centerX","centerY","innerRadius","outerRadius","angle","PI","totalArms","points","i","r","cos","sin","calcStarPoints","onMouseOut","node","onMouseOver","onDblClick","componentDidMount","render","deviceType","cn","onDoubleClick","width","height","img","friendlyName","toggle","updateDrag","simulation","dragForce","drag","on","event","d","active","alphaTarget","restart","fx","x","fy","y","undefined","call","componentDidUpdate","nodes","ieeeAddr","str","PickerType","parse","notyf","blacklistedMessages","showNotity","msg","message","level","status","isResponseWithStatus","error","success","send","topic","payload","console","debug","socket","urlProvider","token","localStorage","getItem","prompt","setItem","searchParams","append","procsessBridgeMessage","setState","bridgeConfig","bridgeInfo","forEach","dev","Object","set","ieee_address","devices","groups","logs","getState","newLogs","slice","push","every","val","test","response","networkGraphIsLoading","networkGraph","inGraph","sort","b","relationship","source","dst","target","linkId","repeatedLink","get","linkquality","relationships","warn","values","payloadData","touchlinkScanInProgress","touchlinkDevices","found","touchlinkIdentifyInProgress","touchlinkResetInProgress","startsWith","onClose","e","code","removeItem","location","reload","onMessage","deviceStates","newDeviceStates","connect","addEventListener","apiUrl","host","pathname","protocol","store","addBind","to","clusters","bindParams","Promise","resolve","removeBind","setStateValue","name","setDeviceState","getDeviceState","setPermitJoin","permit","friendly_name","renameDevice","homeassistantRename","removeDevice","force","block","configureDevice","networkMapRequest","routes","createGroup","group","removeGroup","addDeviceToGroup","removeDeviceFromGroup","renameGroup","oldName","newName","touchlinkScan","touchlinkIdentify","touchlinkReset","checkOTA","updateOTA","updateConfigValue","resetZnp","exportState","configureReport","config","onClick","item","promt","confirmed","confirm","children","linkTypes","NeigbhorIsParent","NeigbhorIsAChild","NeigbhorIsASibling","NoneOfTheAbove","role","s","t","atan2","parentOrChild","linkStrregth","includes","distancesMap","BrokenLink","Router2Router","Coordinator2Router","Coordinator2EndDevice","EndDevice2Router","getDistance","ticked","transform","apply","x1","y1","x2","slope","attr","computeLink","applyX","offset","applyY","processHighlights","selectedNode","linkedByIndex","Set","n","add","l","neighboring","has","computeOpacity","style","o","svgRef","visibleLinks","updateNodes","filter","concat","everything","extent","scaleExtent","zoomHandler","onRequestClick","onLinkTypeFilterChange","stateVisibleLinks","checked","inValue","parseInt","v","updateForces","distance","strength","initPage","getBoundingClientRect","renderMap","viewBox","renderMessage","renderMapControls","controls","onChange","htmlFor","container","ModalHeader","ModalBody","ModalFooter","modalShow","display","openModal","bind","closeModal","isOpen","prevProps","isRenameModalOpened","isDeviceRemovalModalOpened","renameParams","isHassRename","removeParams","onRenameClick","onRemoveClick","toggleRenameModal","toggleDeviceRemovalModal","onHassEntityIdChange","onFriendlyNameChange","onDeviceRemovalParamChange","renderRenameButton","homeassistant","renderDeviceRemovalButton","normalizeModel","re","RegExp","VendorLink","supported","encodeURIComponent","vendor","toLowerCase","rel","ModelLink","acnchor","battery","batteryLow","showLevel","batteryClass","displayProps","label","if","supports","network_address","power_source","battery_low","secs","prop","progress","remaining","floor","onSelect","find","options","hidden","devicesOptions","description","getDeviceDisplayName","groupOptions","disabled","hasOnlyOneEP","ep","unshift","clusterDescriptions","genPowerCfg","genScenes","genOnOff","genLevelCtrl","lightingColorCtrl","closuresWindowCovering","genMultistateInput","genGroups","genOta","touchlink","genIdentify","msTemperatureMeasurement","msIlluminanceMeasurement","msRelativeHumidity","msPressureMeasurement","msSoilMoisture","isClusterGroup","FeatureAccessMode","pickerId","pickerType","MULTIPLE","renderMultiPicker","renderSinglePicker","cluster","defaultProps","stateRule","setSourceEp","sourceEp","setDestination","destination","setDestinationEp","destinationEp","setClusters","onBindOrUnBindClick","action","onUnBind","onBind","getBidningParams","getDerivedStateFromProps","targeDevice","isValidRule","valid","idx","targetType","sourceEndpoints","rule","getTarget","destinationEndpoints","possibleClusters","destEndpoint","output","scope","isNew","rule2key","bidingRules","onBindClick","onUnBindClick","bindings","targetId","convertBidningsIntoNiceStructure","Date","now","attrs","clusterDefinition","Cluster","attributes","getClusters","availableClusters","requiredRuleFileds","field","setCluster","setAttribute","attribute","changeHandler","applyRule","onApply","SINGLE","minimum_report_interval","required","maximum_report_interval","placeholder","reportable_change","onReportingClick","onUnReportingClick","reportings","configured_reportings","reportingRule","deviceState","isBinaryFeature","feature","isNumericFeature","isTextualFeature","isEnumFeature","isLightFeature","isSwitchFeature","isCoverFeature","isLockFeature","isCompositeFeature","isColorFeature","isClimateFeature","isPrimitive","step","min","max","unit","steps","currentValue","setCurrentValue","showRange","valueAsNumber","onMouseUp","onBlur","DisplayValue","BaseViewer","property","NoAccessError","access","valueMax","valueMin","ACCESS_WRITE","ACCESS_STATE","valueOn","valueOff","valueExists","brightness","inputY","yRange","xRange","xMin","xMax","yMin","kelvin","stepsConfiguration","position","tilt","toRGB","sourceFormat","X","Z","hex","Y","hue","saturation","rgbToTargetFormat","targetFormat","hsv","xyz","pridePallete","format","currentColor","setCurrentColor","backgroundColor","features","innerFeature","color","FeatureWrapper","onRead","isColor","isReadable","ACCESS_READ","onApplyClick","renderFeature","genericParams","wrapperParams","Composite","groupedFeatures","f","result","epName","featuresGroup","exposes","ClustersComp","tree","epData","renderContent","match","params","tab","activeClassName","devicePageWithRouter","onIdentifyClick","onResetClick","renderTouchlinkDevices","touchlinkInProgress","touchlinkDevice","channel","renderNoDevices","togglePairs","BluringInput","internalValue","setInternalValue","isToggleParameter","settings","path","updateConfig","renderSwitcher","renderSettings","renderBridgeInfo","renderAbout","zigbee2mqttVersion","version","zigbee2mqttCommit","commit","coordinator","meta","revision","renderLegacyApiSettings","setting","advanced","legacy_api","SettingsPageWithRouter","urls","exact","StartStopJoinButton","initialIsVisible","isComponentVisible","setIsComponentVisible","handleHideDropdown","handleClickOutside","contains","removeEventListener","useComponentVisible","selectedRouter","setSelectedRouter","routers","selectAndHide","permit_join","show","navbarIsVisible","setnavbarIsVisible","handler","listener","useOnClickOutside","log","RenameGroupForm","onRename","modalIsOpened","setModalIsOpened","initialState","setInput","currentTarget","useInputChange","renameGroupForm","handleInputChange","getDeviceObj","groupAddress","rowNumber","onRemove","deviceFriendlyName","groupMemebershipInfo","onSubmit","onDeviceSelect","onEpChange","deviceObj","newGroupName","newGroupId","onGroupCreateSubmit","groupFriendlyName","renderGroupCreationForm","renderGroups","reverse","preventDefault","stopPropagation","column","renderArrow","currentDirection","Component","saveState","storeData","sortDirection","sortColumn","handleLongLoading","size","onSortChange","sortDir","currentTime","sortedTableData","restoreState","storedState","restored","tableData","renderError","renderDevicesTable","lastSeenIsAvaliable","elapsed","last_seen","renderDevicesTableHeader","lastSeen","diff","Highlighted","text","highlight","trim","regex","parts","split","part","search","logLevel","renderSearch","logLevels","_search","donwloadState","getDerivedStateFromError","hasError","stack","getElementById"],"mappings":"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","file":"main.3a60e516a70ae37a92ed.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"_1TK12NlMUcpu0IZGw5KG9F\",\"img\":\"-vLZFy4QqTaA5Lql2j7WL\",\"node\":\"_3VABKCYaUBV0N55MRkEiCg\",\"link\":\"_2MMYgLsCQ5mPT-AJSdZ4Uz\",\"linkLabel\":\"EFSV-Lj6sJyoW14QA3ig0\",\"links\":\"_3m9RTJKJZqiJx1UmLLzi4\",\"nodes\":\"_1RxBn1bAxqYxk5W0mPwZMS\",\"EndDevice\":\"JhUbmgThutQMk8laPcsxg\",\"Coordinator\":\"_3F14ZWmKtSPPHai2y_MRRj\",\"Router\":\"_1I1ZcuMgRbn_B5HXF9Z2mw\",\"BrokenLink\":\"_3FeEi6FG3R9pYpboNF-OBu\",\"Coordinator2Router\":\"_2cFMSmedVqD5hjj2K7XpsQ\",\"Router2Coordinator\":\"_3KnTt0kzrMwLh56UMBBqwe\",\"Router2Router\":\"_3HeSfltIQjH_mQxhaoHnCs\",\"Coordinator2EndDevice\":\"_2zGuiMZ7r-Z4mfRvCVQEAp\",\"EndDevice2Coordinator\":\"_35uGMHQCj1Sx5FyJk5-Ec1\",\"Router2EndDevice\":\"_1nD8O-bIFFZWctv6x4zD8j\",\"EndDevice2Router\":\"_2tVxslI3DwN1gBA6s3V24b\",\"foreignObject\":\"_1PgTRqMkYD7R1RqIF7R5ni\",\"offline\":\"_3goiiMv86rV5wazL6jDpjU\",\"controls\":\"RIAc5GeET4TLTKyCVy7yK\"};","import { LinkI } from \"./types\";\nimport React, { FunctionComponent, useLayoutEffect, useRef } from \"react\";\nimport style from \"./map.css\";\nimport cx from \"classnames\";\nimport { select } from \"d3-selection\";\n\ninterface LinkProps {\n    link: LinkI;\n    id?: string;\n}\n\nconst Link: FunctionComponent<LinkProps> = props => {\n    const { link: { linkType }, id, ...rest } = props;\n    return <path\n        id={id}\n        className={cx(style.link, style[linkType])}\n        strokeWidth={1}\n        fill=\"transparent\"\n        {...rest}\n    />;\n};\n\ninterface LinkLabelProps extends LinkProps {\n    xlinkHref: string;\n}\n\nconst LinkLabel: FunctionComponent<LinkLabelProps> = props => {\n    const { link } = props;\n    return <text className={style.linkLabel}>{link.linkqualities.join('/')}</text>;\n};\n\ninterface LinksPros {\n    links: LinkI[];\n}\n\nconst Links: FunctionComponent<LinksPros> = props => {\n    const { links } = props;\n    const ref = useRef<SVGGElement>();\n    useLayoutEffect(() => {\n        select(ref.current).selectAll(`.${style.link}`).data(links);\n        select(ref.current).selectAll(`.${style.linkLabel}`).data(links);\n    }, [links.length]);\n\n    return (\n        <g ref={ref} className={style.links}>\n            {links.map((link: LinkI) => <Link\n                id={`edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                key={`link${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                link={link}\n            />)}\n            {links.map((link: LinkI) => (\n                <LinkLabel\n                    xlinkHref={`#edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                    key={`label${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                    link={link}\n                />\n            ))}\n        </g>\n    );\n};\nexport default Links;\n","export default __webpack_public_path__ + \"d921749ee5fe6bc67e4ca4a150544be0.png\";","\nimport { Device, Endpoint } from \"./types\";\nimport { GraphI, LinkI, NodeI } from \"./components/map/types\";\nimport { format, TDate } from 'timeago.js';\nimport { Group } from \"./store\";\n\nexport const genDeviceDetailsLink = (deviceIdentifier: string | number): string => (`/device/${deviceIdentifier}`);\n\nexport const toHex = (input: number, padding = 4): string => {\n    return `0x${(`${'0'.repeat(padding)}${input.toString(16)}`).substr(-1 * padding).toUpperCase()}`;\n};\n\n\nexport const toHHMMSS = (secs: number): string => {\n    if (!secs) {\n        return 'N/A';\n    }\n    const hours = Math.floor(secs / 3600);\n    const minutes = Math.floor(secs / 60) % 60;\n    const seconds = Math.floor(secs % 60);\n\n    return [hours, minutes, seconds]\n        .map(v => v < 10 ? `0${v}` : v)\n        .filter((v, i) => v !== \"00\" || i > 0)\n        .join(\":\");\n};\n\nexport type CallbackHandler<T> = (err: boolean, res: T) => void;\nexport interface ApiResponse<T> {\n    success: boolean;\n    result: T;\n}\n\nexport const lastSeen = (lastSeen: string | number, elapsed: number): string => {\n    if (!lastSeen && !elapsed) {\n        return \"N/A\";\n    }\n    let diff: TDate;\n    if (elapsed !== undefined) {\n        diff = Date.now() - elapsed;\n    } else {\n        if (typeof lastSeen === \"string\") {\n            diff = Date.parse(lastSeen);\n        } else {\n            diff = new Date(lastSeen);\n        }\n    }\n    return format(diff);\n};\n\n\nexport const sanitizeGraph = (inGraph: GraphI): GraphI => {\n    const nodes = {};\n    const links = new Map<string, any>();\n\n    inGraph.nodes.forEach(node => {\n        nodes[node.ieeeAddr] = node;\n    });\n\n    inGraph.links.sort((a, b) => a.relationship - b.relationship).forEach(link => {\n        const src: NodeI = nodes[link.source.ieeeAddr];\n        const dst: NodeI = nodes[link.target.ieeeAddr];\n        if (src && dst) {\n            const linkId = [link.source.ieeeAddr, link.target.ieeeAddr].sort().join('');\n            const repeatedLink = links.get(linkId);\n            const linkType = [src.type, dst.type].join('2');\n            if (repeatedLink) {\n                repeatedLink.linkqualities.push(link.linkquality);\n                repeatedLink.relationships.push(link.relationship);\n            } else {\n                links.set(linkId, { ...link, ...{ source: link.source.ieeeAddr, linkType, target: link.target.ieeeAddr, linkqualities: [link.linkquality], relationships: [link.relationship]} });\n            }\n        } else {\n            console.warn(\"Broken link\", link);\n        }\n    });\n\n    inGraph.links = Array.from(links.values());\n    return inGraph;\n};\n\nexport const getDeviceDisplayName = (device: Device): string => {\n    return `${device.friendly_name} ${device.definition?.model ? `(${device.definition?.model})` : ''}`;\n};\n\nexport const randomString = (len: number): string => Math.random().toString(36).substr(2, len);\n\nexport const isSecurePage = (): boolean => location.protocol === 'https:';\n\n\nexport const scale = (inputY: number, yRange: Array<number>, xRange: Array<number>): number => {\n    const [xMin, xMax] = xRange;\n    const [yMin, yMax] = yRange;\n\n    const percent = (inputY - yMin) / (yMax - yMin);\n    const outputX = percent * (xMax - xMin) + xMin;\n\n    return outputX;\n};\n\n\n\n\nfunction replacer(key: string, value: object) {\n    const originalObject = this[key];\n    if (originalObject instanceof Map) {\n        return {\n            dataType: 'Map',\n            value: Array.from(originalObject.entries()),\n        };\n    } else {\n        return value;\n    }\n}\n\nfunction reviver(key: string, value: { dataType: string; value: Iterable<readonly [unknown, unknown]>; }) {\n    if (typeof value === 'object' && value !== null) {\n        if (value.dataType === 'Map') {\n            return new Map(value.value);\n        }\n    }\n    return value;\n}\n\nexport const serialize = (data: object) => {\n    return JSON.stringify(data, replacer);\n}\n\nexport const deSerialize = (str: string) => {\n    return JSON.parse(str, reviver);\n}\n\n\nexport const download = (data: object, filename: string): void => {\n    const blob = new Blob([serialize(data)], { type: 'octet/stream' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.href = url;\n    a.download = filename;\n\n    setTimeout(() => {\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n    }, 1);\n\n}\n\nexport const sanitizeZ2MDeviceName = (deviceName: string): string => deviceName?.replace(/:|\\s|\\//g, \"-\");\n\n\nexport const getEndpoints = (obj: Device | Group): Endpoint[] => {\n    if (!obj) {\n        return []\n    } else if ((obj as Device).endpoints) {\n        return Array.from((obj as Device).endpoints.keys());\n    } else if ((obj as Group).members) {\n        return (obj as Group).members.map(g => g.endpoint);\n    }\n    return [];\n}","import { SimulationLinkDatum, SimulationNodeDatum } from \"d3-force\";\nimport { DeviceType, DeviceDefinition } from \"../../types\";\n\nexport interface NodeI extends SimulationNodeDatum {\n    ieeeAddr: string;\n    friendlyName?: string;\n    type?: DeviceType;\n    failed?: string[];\n    lastSeen?: number;\n    definition?: DeviceDefinition;\n}\n\nexport type LinkType =\n    \"Coordinator2EndDevice\" |\n    \"EndDevice2Coordinator\" |\n\n    \"Coordinator2Router\" |\n    \"Router2Coordinator\" |\n\n    \"EndDevice2Router\" |\n    \"Router2EndDevice\" |\n\n    \"Router2Router\" |\n\n    \"BrokenLink\";\n\nexport interface Source extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\n\nexport interface Target extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\nexport enum ZigbeeRelationship {\n    NeigbhorIsParent,\n    NeigbhorIsAChild,\n    NeigbhorIsASibling,\n    NoneOfTheAbove,\n    NeigbhorIsAFormerChild\n}\n\nexport interface LinkI extends SimulationLinkDatum<NodeI> {\n    source: Source;\n    target: Target;\n    linkquality: number;\n    linkqualities: number[];\n    depth: number;\n    routes: unknown[];\n    sourceIeeeAddr: string;\n    targetIeeeAddr: string;\n    sourceNwkAddr: number;\n    lqi: number;\n    relationship: ZigbeeRelationship;\n    relationships: ZigbeeRelationship[];\n    linkType: LinkType;\n}\n\nexport interface GraphI {\n    nodes: NodeI[];\n    links: LinkI[];\n}\n","import React, { FunctionComponent, ImgHTMLAttributes, useState } from \"react\";\nimport genericDevice from \"../../images/generic-zigbee-device.png\";\nimport { Device, DeviceState } from \"../../types\";\nimport cx from \"classnames\";\nimport { sanitizeZ2MDeviceName } from \"../../utils\";\ntype DeviceImageProps = {\n    device: Device;\n    deviceStatus?: DeviceState;\n    type?: \"img\" | \"svg\";\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst genericDeiviceImageFallback = (device: Device): string => genericDevice;\nconst genSlsDeviceImageUrlZ2M = (device: Device): string => `https://www.zigbee2mqtt.io/images/devices/${sanitizeZ2MDeviceName(device?.definition?.model)}.jpg`;\nconst genSlsDeviceImageUrlSLS = (device: Device): string => `https://slsys.github.io/Gateway/devices/png/${device?.definition?.model?.replace(\"/\", \"_\")}.png`;\n\nconst AVALIABLE_GENERATORS = [\n    genSlsDeviceImageUrlZ2M, genSlsDeviceImageUrlSLS, genericDeiviceImageFallback\n]\n\nconst DeviceImage: FunctionComponent<DeviceImageProps & ImgHTMLAttributes<HTMLDivElement | SVGImageElement>> = (props) => {\n    const [imageGenerators, setimageGenerators] = useState(AVALIABLE_GENERATORS);\n    const { device, deviceStatus, type = \"img\", className, ...rest } = props;\n    let src = genericDeiviceImageFallback(device);\n    if (device?.definition?.model && imageGenerators.length) {\n        src = imageGenerators[0](device);\n    }\n\n    const onImageError = () => {\n        const newGenerators = [...imageGenerators];\n        newGenerators.shift();\n        setimageGenerators(newGenerators);\n    };\n    const otaSpinner = deviceStatus?.update?.state === \"updating\" ? <i title=\"Updating firmware\" className=\"fa fa-sync fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const interviewSpinner = device.interviewing ? <i title=\"Interviewing\" className=\"fa fa-spinner fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const unseccessfullInterview = !device.interviewing && !device.interview_completed ? <i title=\"Interview failed\" className=\"fa fa-exclamation-triangle position-absolute top-0 right-0 text-danger\" /> : null;\n    switch (type) {\n        case \"svg\":\n            return src ? <image {...rest} onError={onImageError} href={src} /> : null;\n        case \"img\":\n        default:\n            return src ? <div className={cx(className, \"position-relative\")} {...rest}>\n                <img onError={onImageError} src={src} className={\"position-relative\"} />\n                {interviewSpinner}\n                {otaSpinner}\n                {unseccessfullInterview}\n            </div> : null;\n    }\n}\nexport default DeviceImage;","import React, { Component, createRef, RefObject } from \"react\";\nimport { LinkI, NodeI, Source, Target } from \"./types\";\nimport cx from \"classnames\";\nimport style from \"./map.css\";\nimport { MouseEventsResponderNode } from \".\";\nimport { Device } from \"../../types\";\nimport DeviceImage from \"../device-image\";\nimport { Simulation } from \"d3-force\";\nimport { select, selectAll } from \"d3-selection\";\nimport { drag } from \"d3-drag\";\n\n\nconst calcStarPoints = (\n    centerX: number,\n    centerY: number,\n    innerCircleArms: number,\n    innerRadius: number,\n    outerRadius: number\n): string => {\n    const angle = Math.PI / innerCircleArms;\n    const angleOffsetToCenterStar = 60;\n    const totalArms = innerCircleArms * 2;\n    let points = \"\";\n    for (let i = 0; i < totalArms; i++) {\n        const isEvenIndex = i % 2 == 0;\n        const r = isEvenIndex ? outerRadius : innerRadius;\n        const currX = centerX + Math.cos(i * angle + angleOffsetToCenterStar) * r;\n        const currY = centerY + Math.sin(i * angle + angleOffsetToCenterStar) * r;\n        points += `${currX}, ${currY} `;\n    }\n    return points;\n};\n\n\nconst getStarShape = (innerCircleArms: number, styleStarWidth: number, innerOuterRadiusRatio: number): string => {\n    return calcStarPoints(\n        15,\n        15,\n        innerCircleArms,\n        styleStarWidth,\n        innerOuterRadiusRatio\n    );\n};\n\ninterface NodeProps extends MouseEventsResponderNode {\n    node: NodeI;\n}\n\nconst offlineTimeout = 3600 * 2;\n\nexport const isOnline = (device: Device): boolean => {\n\n    return true; //Date.now() - device.lastSeen < offlineTimeout;\n};\n\nclass Node extends Component<NodeProps, {}> {\n    ref = createRef<SVGPolygonElement | SVGCircleElement | SVGImageElement>();\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { node } = this.props;\n        select(current as SVGElement).data([node]);\n    }\n\n    onMouseOut = (): void => {\n        const { node, onMouseOut } = this.props;\n        onMouseOut && onMouseOut(node, this.ref.current);\n    };\n\n    onMouseOver = (): void => {\n        const { node, onMouseOver } = this.props;\n        onMouseOver && onMouseOver(node, this.ref.current);\n    };\n\n    onDblClick = (): void => {\n        const { node, onDblClick } = this.props;\n        onDblClick && onDblClick(node, this.ref.current);\n    };\n\n    render() {\n\n        const { node } = this.props;\n        const { onMouseOver, onMouseOut, onDblClick } = this;\n        const deviceType = node.type as string;\n        const cn = cx(style.node, style[deviceType]); //{ [style.offline]: !isOnline(node.device, time) }\n        return (<g className={cn}\n            ref={this.ref as RefObject<SVGImageElement>}\n            onMouseOver={onMouseOver}\n            onMouseOut={onMouseOut}\n            onDoubleClick={onDblClick}\n        >\n            {\n                node.type === \"Coordinator\" ? (\n                    <polygon\n                        points={getStarShape(5, 5, 14) as string}\n                    />\n                ) : (\n                        <DeviceImage\n                            type=\"svg\"\n                            width={32}\n                            height={32}\n                            device={node as unknown as Device}\n                            className={`${style.img}`}\n                        />\n                    )\n            }\n            <text>{node.friendlyName}</text>\n\n        </g>);\n\n    }\n}\n\ninterface NodesProps extends MouseEventsResponderNode {\n    nodes: NodeI[];\n    simulation: Simulation<NodeI, LinkI>;\n}\n\ntype NodesState = {\n    toggle: boolean;\n}\n\nexport default class Nodes extends Component<NodesProps, NodesState> {\n    state: Readonly<NodesState> = {\n        toggle: false\n    }\n    updateDrag(): void {\n        const { simulation } = this.props;\n        const dragForce = drag<SVGCircleElement, NodeI>()\n            .on(\"start\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0.3).restart();\n                }\n                d.fx = d.x;\n                d.fy = d.y;\n            })\n            .on(\"drag\", (event, d) => {\n                d.fx = event.x;\n                d.fy = event.y;\n            })\n            .on(\"end\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0);\n                }\n                d.fx = undefined;\n                d.fy = undefined;\n            });\n\n\n        selectAll<SVGCircleElement, NodeI>(`.${style.node}`)\n            .call(dragForce);\n    }\n\n    componentDidMount(): void {\n        this.updateDrag();\n    }\n\n    componentDidUpdate(): void {\n        this.updateDrag();\n    }\n\n   \n\n    render() {\n        const { nodes, onMouseOut, onMouseOver } = this.props;\n        return (\n            <g className={style.nodes}>\n                {nodes.map((node: NodeI) => (\n                    <Node\n                        onMouseOut={onMouseOut}\n                        onMouseOver={onMouseOver}\n                        key={node.ieeeAddr}\n                        node={node}\n                    />\n                ))}\n            </g>\n        );\n    }\n}\n","import React, { ChangeEvent, Component, InputHTMLAttributes } from \"react\";\nimport { Cluster } from \"../../types\";\nimport { randomString } from \"../../utils\";\n\n\n\nconst clusterDescriptions = {\n    genPowerCfg: \"PowerCfg\",\n    genScenes: \"Scenes\",\n    genOnOff: \"OnOff\",\n    genLevelCtrl: \"LevelCtrl\",\n    lightingColorCtrl: \"LColorCtrl\",\n    closuresWindowCovering: \"Closures\",\n    genMultistateInput: \"MultistateInput\",\n    genGroups: \"Groups\",\n    genOta: \"Ota\",\n    touchlink: \"Touchlink\",\n    genIdentify: \"Identify\",\n    msTemperatureMeasurement: \"Temperature\",\n    msIlluminanceMeasurement: \"Illuminance\",\n    msRelativeHumidity: \"Humidity\",\n    msPressureMeasurement: \"Pressure\",\n    msSoilMoisture: \"Soil Moisture\",\n}\n\nexport enum PickerType {\n    MULTIPLE,\n    SINGLE\n}\nexport interface ClusterGroup {\n    name: string;\n    clusters: Cluster[];\n}\ninterface ClusterPickerProps {\n    value: Cluster[] | Cluster;\n    onChange(arg1: Cluster[] | Cluster | undefined): void;\n    clusters: Cluster[] | ClusterGroup[];\n    pickerType: PickerType;\n}\ninterface ClusterPickerState {\n    pickerId: string;\n}\n\n\n\nfunction isClusterGroup(clusters: Cluster[] | ClusterGroup[]): clusters is ClusterGroup[] {\n\n    return typeof clusters[0] !== 'string';\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class ClusterPicker extends Component<ClusterPickerProps & Omit<InputHTMLAttributes<HTMLInputElement | HTMLSelectElement>, 'onChange'>, ClusterPickerState> {\n    public static defaultProps = {\n        clusters: []\n    };\n    state: Readonly<ClusterPickerState> = {\n        pickerId: randomString(5)\n    }\n\n    onChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>): void => {\n        const { onChange, pickerType } = this.props;\n        let { value } = this.props;\n        const { name } = e.target;\n        if (pickerType === PickerType.MULTIPLE) {\n            const { checked: isChecked } = e.target as HTMLInputElement;\n            if (isChecked) {\n                (value as Cluster[]).push(name);\n            } else {\n                value = (value as Cluster[]).filter(v => v !== name);\n            }\n        } else {\n            const { value: selectedValue } = e.target as HTMLInputElement;\n            value = selectedValue;\n        }\n        onChange(value);\n    }\n    render() {\n        const { pickerType } = this.props;\n        if (pickerType === PickerType.MULTIPLE) {\n            return this.renderMultiPicker();\n        } else {\n            return this.renderSinglePicker();\n        }\n    }\n    renderMultiPicker() {\n        const { pickerId } = this.state;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { clusters, value, pickerType, onChange, ...rest } = this.props;\n        let options = [];\n        if (isClusterGroup(clusters)) {\n            //TODO: implement if necessary\n            console.warn(\"Not implemented\");\n        } else {\n            options = clusters.map(cluster => (\n                <div key={cluster} className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\"\n                        type=\"checkbox\"\n                        checked={value.includes(cluster)}\n                        name={cluster}\n                        id={`${pickerId}_${cluster}`}\n                        value={cluster}\n                        onChange={this.onChange}\n                        {...rest}\n                    />\n                    <label className=\"form-check-label\" htmlFor={`${pickerId}_${cluster}`} title={cluster}>{clusterDescriptions[cluster] ?? cluster}</label>\n                </div>\n            ));\n        }\n\n        return options;\n    }\n\n    renderSinglePicker() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { clusters, onChange, pickerType, ...rest } = this.props;\n        const options = [<option key=\"hidden\" hidden>Select cluster</option>];\n        if (isClusterGroup(clusters)) {\n            clusters.forEach(group => {\n                const groupOptions = group.clusters.map(cluster => <option key={cluster} value={cluster}>{clusterDescriptions[cluster] ?? cluster}</option>)\n                if (groupOptions.length === 0) {\n                    groupOptions.push(<option key=\"none\" disabled>None</option>)\n                }\n                options.push(<optgroup key={group.name} label={group.name}>{groupOptions}</optgroup>);\n            });\n\n\n        } else {\n            clusters.forEach(cluster => {\n                options.push(<option key={cluster} value={cluster}>{clusterDescriptions[cluster] ?? cluster}</option>);\n            })\n        }\n        return (<select className=\"form-select\" onChange={this.onChange} {...rest}>\n            {options}\n        </select>)\n    }\n}","import createStore from \"unistore\";\nimport devtools from \"unistore/devtools\";\nimport initialState from './initialState.txt';\n\n\nimport { Device, DeviceState, BridgeConfig, BridgeInfo, TouchLinkDevice } from \"./types\";\nimport { GraphI } from \"./components/map/types\";\nimport { deSerialize } from \"./utils\";\n\nexport interface GroupAddress {\n    endpoint: number;\n    ieee_address: string;\n}\n\nexport interface Group {\n    id: number;\n    friendly_name: string;\n    members: GroupAddress[];\n}\n\nexport interface LogMessage {\n    level: \"error\" | \"info\" | \"warning\";\n    message: string;\n}\n\nexport interface GlobalState {\n    devices: Map<string, Device>;\n    deviceStates: Map<string, DeviceState>;\n    touchlinkDevices: TouchLinkDevice[];\n    touchlinkScanInProgress: boolean;\n    touchlinkIdentifyInProgress: boolean;\n    touchlinkResetInProgress: boolean;\n    networkGraph: GraphI;\n    networkGraphIsLoading: boolean;\n    groups: Group[];\n    bridgeConfig: BridgeConfig;\n    bridgeInfo: BridgeInfo;\n    logs: LogMessage[];\n};\nconst _store = createStore(deSerialize(initialState) as GlobalState);\nconst store = process.env.NODE_ENV === 'production' ?  _store : devtools(_store);\n\nexport default store;","export default \"{\\n  \\\"devices\\\": {\\\"dataType\\\":\\\"Map\\\",\\\"value\\\":[]},\\n  \\\"deviceStates\\\": {\\\"dataType\\\":\\\"Map\\\",\\\"value\\\":[]},\\n  \\\"touchlinkDevices\\\": [],\\n  \\\"touchlinkScanInProgress\\\": false,\\n  \\\"touchlinkIdentifyInProgress\\\": false,\\n  \\\"touchlinkResetInProgress\\\": false,\\n  \\\"networkGraph\\\": {\\n    \\\"links\\\": [],\\n    \\\"nodes\\\": []\\n  },\\n  \\\"networkGraphIsLoading\\\": false,\\n  \\\"groups\\\": [],\\n  \\\"bridgeConfig\\\": {},\\n  \\\"bridgeInfo\\\": {},\\n  \\\"logs\\\": []\\n}\";","import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport store, { Group, LogMessage } from \"./store\";\nimport { BridgeConfig, BridgeInfo, TouchLinkDevice, Device, DeviceState } from './types';\nimport { sanitizeGraph, isSecurePage } from \"./utils\";\nimport { Notyf } from \"notyf\";\nimport { GraphI } from \"./components/map/types\";\n\nimport orderBy from \"lodash/orderBy\";\n\n\nconst MAX_LOGS_RECORDS_IN_BUFFER = 100;\nconst TOKEN_LOCAL_STORAGE_ITEM_NAME = \"z2m-token\";\nconst AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME = \"z2m-auth\";\nconst UNAUTHORIZED_ERROR_CODE = 4401;\n\nconst notyf = new Notyf();\n\ninterface Message {\n    topic: string;\n    payload: string | object | object[] | string[];\n}\n\nconst blacklistedMessages: RegExp[] = [\n    /MQTT publish/\n];\n\nconst isLogMessage = (msg: LogMessage | ResponseWithStatus): msg is LogMessage => {\n    return (msg as LogMessage).level !== undefined && (msg as LogMessage).message !== undefined;\n}\n\nconst isResponseWithStatus = (msg: LogMessage | ResponseWithStatus): msg is ResponseWithStatus => {\n    return (msg as ResponseWithStatus).status !== undefined;\n}\n\nconst showNotity = (data: LogMessage | ResponseWithStatus): void => {\n    let message = \"\", level = \"\";\n    if (isLogMessage(data)) {\n        message = data.message;\n        level = data.level;\n    } else if (isResponseWithStatus(data)) {\n        switch (data.status) {\n            case \"error\":\n                level = \"error\";\n                message = data.error;\n                break;\n            default:\n                break;\n        }\n    }\n\n    switch (level) {\n        case \"error\":\n        case \"warning\":\n            notyf.error(message);\n            break;\n        case \"info\":\n            notyf.success(message);\n            break;\n\n        default:\n            break;\n    }\n};\n\ninterface ResponseWithStatus {\n    status: \"ok\" | \"error\";\n    data: unknown;\n    error?: string;\n}\ninterface TouchllinkScanResponse extends ResponseWithStatus {\n    data: {\n        found: TouchLinkDevice[];\n    };\n}\nclass Api {\n    url: string;\n    socket: ReconnectingWebSocket;\n    constructor(url: string) {\n        this.url = url;\n    }\n    send = (topic: string, payload: unknown): void => {\n        console.debug(\"Calling API\", { topic, payload });\n        this.socket.send(JSON.stringify({ topic, payload }));\n    }\n\n    urlProvider = async () => {\n        const url = new URL(this.url)\n        let token = localStorage.getItem(TOKEN_LOCAL_STORAGE_ITEM_NAME);\n        const authRequired = !!localStorage.getItem(AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME);\n        if (authRequired) {\n            if (!token) {\n                token = prompt(\"enter your z2m admin token\");\n                localStorage.setItem(TOKEN_LOCAL_STORAGE_ITEM_NAME, token);\n            }\n            url.searchParams.append(\"token\", token);\n        }\n        return url.toString();\n    }\n\n    connect(): void {\n        this.socket = new ReconnectingWebSocket(this.urlProvider);\n        this.socket.addEventListener(\"message\", this.onMessage);\n        this.socket.addEventListener(\"close\", this.onClose);\n    }\n    private procsessBridgeMessage = (data: Message): void => {\n        switch (data.topic) {\n            case \"bridge/config\":\n                store.setState({\n                    bridgeConfig: data.payload as BridgeConfig\n                });\n                break;\n\n            case \"bridge/info\":\n                store.setState({\n                    bridgeInfo: data.payload as BridgeInfo\n                });\n                break;\n\n            case \"bridge/devices\":\n                {\n                    const devicesMap = new Map();\n                    orderBy((data.payload as Device[]), \"friendly_name\").forEach((device) => {\n                        const dev = { ...device };\n                        dev.endpoints = new Map(Object.entries(device.endpoints));\n                        devicesMap.set(device.ieee_address, dev);\n                    });\n                    store.setState({\n                        devices: devicesMap\n                    })\n                }\n                break;\n\n            case \"bridge/groups\":\n                store.setState({\n                    groups: data.payload as Group[]\n                })\n                break;\n\n            case \"bridge/event\":\n                break;\n\n            case \"bridge/logging\":\n                {\n                    const { logs } = store.getState();\n                    const newLogs = [...logs.slice(-MAX_LOGS_RECORDS_IN_BUFFER)];\n                    newLogs.push(data.payload as LogMessage);\n                    store.setState({ logs: newLogs });\n                    const log = data.payload as LogMessage;\n                    if (blacklistedMessages.every(val => !val.test(log.message))) {\n                        showNotity(log);\n                    }\n                }\n                break;\n\n            case \"bridge/response/networkmap\":\n                {\n                    const response = data.payload as ResponseWithStatus;\n                    if (response.status == \"ok\") {\n                        const { value } = response.data as { value: unknown };\n                        store.setState({\n                            networkGraphIsLoading: false,\n                            networkGraph: sanitizeGraph(value as GraphI)\n                        });\n                    } else {\n                        store.setState({ networkGraphIsLoading: false });\n                    }\n                }\n                break;\n\n\n            case \"bridge/response/touchlink/scan\":\n                {\n                    const { status, data: payloadData } = data.payload as TouchllinkScanResponse;\n                    if (status === \"ok\") {\n                        store.setState({ touchlinkScanInProgress: false, touchlinkDevices: payloadData.found });\n                    } else {\n                        store.setState({ touchlinkScanInProgress: false });\n                    }\n                }\n                break;\n\n            case \"bridge/response/touchlink/identify\":\n                store.setState({ touchlinkIdentifyInProgress: false });\n                break;\n\n            case \"bridge/response/touchlink/factory_reset\":\n                store.setState({ touchlinkResetInProgress: false });\n                break;\n\n            default:\n                break;\n        }\n        if (data.topic.startsWith(\"bridge/response/\")) {\n            showNotity(data.payload as ResponseWithStatus);\n        }\n    }\n\n    private onClose = (e: CloseEvent): void => {\n        if (e.code === UNAUTHORIZED_ERROR_CODE) {\n            localStorage.setItem(AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME, \"true\");\n            localStorage.removeItem(TOKEN_LOCAL_STORAGE_ITEM_NAME);\n            notyf.error(\"Unauthorized\");\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000);\n        }\n    }\n\n    private onMessage = (event: MessageEvent): void => {\n        let data = {} as Message;\n        try {\n            data = JSON.parse(event.data) as Message;\n        } catch (e) {\n            notyf.error(e.message);\n            notyf.error(event.data);\n        }\n\n        if (data.topic.startsWith(\"bridge/\")) {\n            this.procsessBridgeMessage(data);\n        } else {\n            const { deviceStates } = store.getState();\n            const newDeviceStates = new Map(deviceStates);\n            newDeviceStates.set(data.topic, { ...newDeviceStates.get(data.topic), ...(data.payload as DeviceState) });\n            store.setState({ deviceStates: newDeviceStates });\n        }\n    }\n}\nconst apiUrl = `${window.location.host}${document.location.pathname}api`;\nconst api = new Api(`${isSecurePage() ? 'wss' : 'ws'}://${apiUrl}`);\nexport default api;","/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { GlobalState } from \"./store\";\nimport { Store } from \"unistore\";\n\nimport { Cluster, Device, ReportingConfig, TouchLinkDevice } from \"./types\";\nimport api from \"./api\";\nimport { download } from \"./utils\";\n\nexport interface UtilsApi {\n    exportState(): Promise<void>;\n}\n\nexport interface TouchlinkApi {\n    touchlinkScan(): Promise<void>;\n    touchlinkIdentify(device: TouchLinkDevice): Promise<void>;\n    touchlinkReset(device: TouchLinkDevice): Promise<void>;\n}\n\nexport interface OtaApi {\n    checkOTA(deviceName: string): Promise<void>;\n    updateOTA(deviceName: string): Promise<void>;\n}\nexport interface DeviceApi {\n    renameDevice(\n        old: string,\n        newName: string,\n        homeassistantRename: boolean\n    ): Promise<void>;\n    removeDevice(dev: string, force: boolean, block: boolean): Promise<void>;\n    configureDevice(name: string): Promise<void>;\n}\n\nexport interface StateApi {\n    setStateValue(dev: string, name: string, value: unknown): Promise<void>;\n    setDeviceState(dev: string, value: object): Promise<void>;\n    getDeviceState(dev: string, value: object): Promise<void>;\n}\n\nexport interface GroupsApi {\n    createGroup(name: string, id?: number): Promise<void>;\n    removeGroup(name: string): Promise<void>;\n    addDeviceToGroup(device: string, group: string): Promise<void>;\n    removeDeviceFromGroup(device: string, group: string): Promise<void>;\n    renameGroup(oldName: string, newName: string): Promise<void>;\n}\nexport interface BindApi {\n    addBind(from: string, to: string, clusters: Cluster[]): Promise<void>;\n    removeBind(from: string, to: string, clusters: Cluster[]): Promise<void>;\n}\nexport interface BridgeApi {\n    setPermitJoin(permit: boolean, device: Device): Promise<void>;\n    updateConfigValue(name: string, value: unknown): Promise<void>;\n}\nexport interface MapApi {\n    networkMapRequest(): Promise<void>;\n}\n\nexport interface LegacyApi {\n    resetZnp(): Promise<void>;\n}\n\nexport interface ReportingApi {\n    configureReport(device: string, config: ReportingConfig): Promise<void>;\n}\n\nconst actions = (store: Store<GlobalState>): object => ({\n    addBind: (\n        state,\n        from: string,\n        to: string,\n        clusters: Cluster[]\n    ): Promise<void> => {\n        const bindParams = {\n            from,\n            to,\n            clusters,\n        };\n        api.send(\"bridge/request/device/bind\", bindParams);\n        return Promise.resolve();\n    },\n    removeBind: (\n        state,\n        from: string,\n        to: string,\n        clusters: Cluster[]\n    ): Promise<void> => {\n        const bindParams = {\n            from,\n            to,\n            clusters,\n        };\n        api.send(\"bridge/request/device/unbind\", bindParams);\n        return Promise.resolve();\n    },\n\n    setStateValue(\n        state,\n        dev: string,\n        name: string,\n        value: string | number | boolean\n    ): Promise<void> {\n        api.send(`${dev}/set`, { [name]: value });\n        return Promise.resolve();\n    },\n    setDeviceState(state, dev: string, value: object) {\n        api.send(`${dev}/set`, value);\n        return Promise.resolve();\n    },\n    getDeviceState(state, dev: string, value: object) {\n        api.send(`${dev}/get`, value);\n        return Promise.resolve();\n    },\n    setPermitJoin(state, permit = true, device: Device): Promise<void> {\n        api.send(\"bridge/request/permit_join\", { value: permit, device: device?.friendly_name });\n        return Promise.resolve();\n    },\n\n    renameDevice: (\n        state,\n        from: string,\n        to: string,\n        homeassistantRename: boolean\n    ): Promise<void> => {\n        api.send(\"bridge/request/device/rename\", {\n            from,\n            to,\n            'homeassistant_rename': homeassistantRename,\n        });\n        return Promise.resolve();\n    },\n    removeDevice: (\n        state,\n        dev: string,\n        force: boolean,\n        block: boolean\n    ): Promise<void> => {\n        api.send(\"bridge/request/device/remove\", { id: dev, force, block });\n        return Promise.resolve();\n    },\n\n    configureDevice: (state, name: string): Promise<void> => {\n        api.send(\"bridge/request/device/configure\", { id: name });\n        return Promise.resolve();\n    },\n\n    networkMapRequest: (state): Promise<void> => {\n        store.setState({ networkGraphIsLoading: true, networkGraph: { nodes: [], links: [] } });\n        api.send(\"bridge/request/networkmap\", { type: \"raw\", routes: false });\n        return Promise.resolve();\n    },\n    createGroup: (state, group: string, id: number): Promise<void> => {\n        const payload = {\n            'friendly_name': group\n        };\n        if (id) {\n            payload['id'] = id;\n        }\n        api.send(\"bridge/request/group/add\", payload);\n        return Promise.resolve();\n    },\n\n    removeGroup: (state, group: string): Promise<void> => {\n        api.send(\"bridge/request/group/remove\", group);\n        return Promise.resolve();\n    },\n\n    addDeviceToGroup: (state, device: string, group: string): Promise<void> => {\n        api.send(\"bridge/request/group/members/add\", { group, device });\n        return Promise.resolve();\n    },\n\n    removeDeviceFromGroup: (\n        state,\n        device: string,\n        group: string\n    ): Promise<void> => {\n        api.send(\"bridge/request/group/members/remove\", { device, group });\n        return Promise.resolve();\n    },\n    renameGroup: (state, oldName: string, newName: string): Promise<void> => {\n        api.send(\"bridge/request/group/rename\", { from: oldName, to: newName });\n        return Promise.resolve();\n    },\n\n    touchlinkScan(): Promise<void> {\n        store.setState({ touchlinkScanInProgress: true, touchlinkDevices: [] });\n        api.send(\"bridge/request/touchlink/scan\", \"\");\n        return Promise.resolve();\n    },\n    touchlinkIdentify(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkIdentifyInProgress: true });\n        api.send(\"bridge/request/touchlink/identify\", device);\n        return Promise.resolve();\n    },\n    touchlinkReset(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkResetInProgress: true });\n        api.send(\"bridge/request/touchlink/factory_reset\", device);\n        return Promise.resolve();\n    },\n\n    checkOTA: (state, deviceName: string): Promise<void> => {\n        api.send(\"bridge/request/device/ota_update/check\", { id: deviceName });\n        return Promise.resolve();\n    },\n    updateOTA: (state, deviceName: string): Promise<void> => {\n        api.send(\"bridge/request/device/ota_update/update\", { id: deviceName });\n        return Promise.resolve();\n    },\n    updateConfigValue(state, name: string, value: unknown): Promise<void> {\n        api.send(`bridge/request/config/${name}`, value);\n        return Promise.resolve();\n    },\n\n    resetZnp(state): Promise<void> {\n        api.send(`bridge/config/reset`, \"\");\n        return Promise.resolve();\n    },\n    exportState(state): Promise<void> {\n        download(state, 'state.json');\n        return Promise.resolve();\n    },\n    configureReport(state, device: string, config: ReportingConfig): Promise<void> {\n        api.send('bridge/request/device/configure_reporting', {\n            id: device,\n            ...config\n        });\n        return Promise.resolve();\n    }\n});\nexport default actions;\n","import React, { ButtonHTMLAttributes, Component } from \"react\";\n\ninterface ButtonProps<T> {\n    item?: T;\n    onClick?(arg1: T): void;\n    promt?: boolean | string;\n}\n\nexport default class Button<T> extends Component<ButtonProps<T> & Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'onClick'>, {}> {\n    onClick = (): void => {\n        const { item, onClick, promt } = this.props;\n        let confirmed = true;\n        if (promt) {\n            confirmed = confirm(typeof promt === \"string\" ? promt : \"Are you sure?\");\n        }\n        confirmed && onClick && onClick(item);\n    };\n\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, item, promt, ...rest } = this.props;\n        return <button type=\"button\" {...rest} onClick={this.onClick}>{children}</button>;\n    }\n}","import { ZigbeeRelationship } from \"./types\";\n\ninterface LinkType {\n  title: string;\n  relationship: ZigbeeRelationship;\n}\nexport const linkTypes: LinkType[] = [\n  {\n      title: 'IsParent',\n      relationship: ZigbeeRelationship.NeigbhorIsParent\n  },\n  {\n      title: 'IsAChild',\n      relationship: ZigbeeRelationship.NeigbhorIsAChild\n  },\n  {\n      title: 'IsASibling',\n      relationship: ZigbeeRelationship.NeigbhorIsASibling\n  },\n  {\n      title: 'NoneOfTheAbove',\n      relationship: ZigbeeRelationship.NoneOfTheAbove\n  }\n];","import React, { FunctionComponent } from \"react\";\n\nconst Spinner: FunctionComponent = () => {\n  return <div className=\"d-flex align-items-center\">\n    <strong>Loading, please wait.</strong>\n    <div className=\"spinner-border ml-2\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n}\nexport default Spinner;","import React, { ChangeEvent, Component, createRef, Fragment } from \"react\";\nimport Links from \"./links\";\nimport Nodes from \"./nodes\";\nimport style from \"./map.css\";\nimport { GraphI, LinkI, NodeI, Source, Target, ZigbeeRelationship } from \"./types\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions, { MapApi } from \"../../actions\";\n\nimport Button from \"../button\";\nimport { ForceLink, forceLink, forceCollide, forceCenter, forceSimulation, forceX, forceY } from \"d3-force\";\nimport { select, selectAll, Selection } from \"d3-selection\";\nimport { forceManyBodyReuse } from \"d3-force-reuse\"\nimport { zoom, zoomIdentity, ZoomTransform } from \"d3-zoom\";\nimport { linkTypes } from \"./consts\";\nimport Spinner from \"../spinner\";\nimport intersection from \"lodash/intersection\";\nexport interface MouseEventsResponderNode {\n    onMouseOver?: (arg0: NodeI, el: SVGPolygonElement | SVGCircleElement | SVGImageElement) => void;\n    onMouseOut?: (arg0: NodeI, el: SVGPolygonElement | SVGCircleElement | SVGImageElement) => void;\n    onDblClick?: (arg0: NodeI, el: SVGPolygonElement | SVGCircleElement | SVGImageElement) => void;\n}\n\ninterface MapState {\n    selectedNode: NodeI;\n    width: number;\n    height: number;\n    visibleLinks: ZigbeeRelationship[];\n}\nconst angle = (s: Source, t: Target) => Math.atan2(t.y - s.y, t.x - s.x);\nconst xpos = (offset: number, s: Source, t: Target) => offset * Math.cos(angle(s, t)) + s.x;\nconst ypos = (offset: number, s: Source, t: Target) => offset * Math.sin(angle(s, t)) + s.y;\n\n\n\nconst parentOrChild = [ZigbeeRelationship.NeigbhorIsAChild, ZigbeeRelationship.NeigbhorIsParent];\nconst linkStrregth = (d: LinkI) => {\n    if (d.linkType === \"Router2Router\") {\n        return 1;\n    }\n    if (parentOrChild.includes(d.relationship)) {\n        return 0.5;\n    }\n\n    return 0;\n}\n\nconst distancesMap = {\n    BrokenLink: 450,\n    Router2Router: 200,\n    Coordinator2Router: 200,\n    Coordinator2EndDevice: 50,\n    EndDevice2Router: 50\n};\n\n\nconst getDistance = (d: LinkI): number => {\n    return distancesMap[d.linkType] ?? 200;\n    // const depth = ~~(Math.min(4, d.depth));\n    // return 50 * depth + distance;\n};\n\nconst computeLink = (d: LinkI, transform: ZoomTransform): string => {\n    const src = d.source;\n    const dst = d.target;\n    const [x1, y1] = transform.apply([src.x, src.y]);\n    const [x2, y2] = transform.apply([dst.x, dst.y]);\n    return `M ${x1} ${y1} L ${x2} ${y2}`;\n}\n\ntype SelNode = Selection<SVGElement, NodeI, HTMLElement, unknown>;\ntype SelLink = Selection<SVGElement, LinkI, HTMLElement, unknown>;\n\ntype TickedParams = {\n    transform: ZoomTransform;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n    links: LinkI[];\n}\nconst ticked = ({ transform, node, link, linkLabel, links }: TickedParams): void => {\n    links.forEach(function (d) {\n        const [x1, y1] = transform.apply([d.source.x, d.source.y]),\n            [x2, y2] = transform.apply([d.target.x, d.target.y]),\n            slope = (y2 - y1) / (x2 - x1);\n\n        (d as unknown as NodeI).x = (x2 + x1) / 2;\n        (d as unknown as NodeI).y = (x2 - x1) * slope / 2 + y1;\n    });\n    link.attr(\"d\", (d) => computeLink(d, transform));\n    linkLabel\n        .attr('x', (d) => transform.applyX(xpos(100, d.source, d.target)))\n        .attr('y', (d) => transform.applyY(ypos(100, d.source, d.target)))\n\n    const imgXShift = 32 / 2;\n    const imgYShift = 32 / 2;\n    const computeTransform = (d: NodeI) => {\n        const [X, Y] = transform.apply([d.x, d.y]);\n        return `translate(${X - imgXShift}, ${Y - imgYShift})`;\n    }\n    node.attr(\"transform\", computeTransform);\n};\ntype ProcessHighlightsParams = {\n    networkGraph: GraphI;\n    links: LinkI[];\n    selectedNode: NodeI;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n}\nconst processHighlights = ({ networkGraph, links, selectedNode, node, link, linkLabel }: ProcessHighlightsParams) => {\n    const linkedByIndex = new Set<string>();\n    networkGraph.nodes.forEach(n => linkedByIndex.add(n.ieeeAddr + \",\" + n.ieeeAddr));\n    links.forEach((l) => linkedByIndex.add(l.sourceIeeeAddr + \",\" + l.targetIeeeAddr));\n\n    const neighboring = (a: Source, b: Target): boolean => linkedByIndex.has(a.ieeeAddr + \",\" + b.ieeeAddr)\n    const computeOpacity = (l: LinkI) => (l.source === selectedNode || l.target === selectedNode ? 1 : 0.15);\n    if (selectedNode) {\n        node.style(\"opacity\", (o: NodeI) => neighboring(selectedNode, o) || neighboring(o, selectedNode) ? 1 : 0.15);\n        link.style(\"stroke-opacity\", computeOpacity);\n        linkLabel.style(\"opacity\", computeOpacity);\n    } else {\n        node.style(\"opacity\", 1);\n        link.style(\"stroke-opacity\", 1);\n        linkLabel.style(\"opacity\", 1);\n    }\n}\n\nexport class MapComponent extends Component<GlobalState & MapApi, MapState> {\n    ref = createRef<HTMLDivElement>();\n    svgRef = createRef<SVGSVGElement>();\n    simulation = forceSimulation<NodeI, LinkI>();\n    state: Readonly<MapState> = {\n        selectedNode: null,\n        width: 0,\n        height: 0,\n        visibleLinks: parentOrChild\n    };\n    transform: ZoomTransform = zoomIdentity;\n\n    updateNodes = (): void => {\n        const { networkGraph } = this.props;\n        if (!networkGraph.nodes.length) {\n            return;\n        }\n        const { visibleLinks, selectedNode, width, height } = this.state;\n\n        const node = selectAll<SVGElement, NodeI>(`.${style.node}`);\n        const link = selectAll<SVGElement, LinkI>(`.${style.link}`);\n        const linkLabel = selectAll<SVGElement, LinkI>(`.${style.linkLabel}`);\n\n        const links = networkGraph.links.filter(l => intersection(visibleLinks, l.relationships).length);\n        this.simulation.nodes(networkGraph.nodes.concat(links as unknown as NodeI[]));\n        this.simulation.force<ForceLink<NodeI, LinkI>>(\"link\").links(links);\n        this.simulation.on(\"tick\", () => ticked({ transform: this.transform, node, link, linkLabel, links }));\n\n\n        //add zoom capabilities\n        const everything = select<SVGGeometryElement, NodeI>('.everything');\n        const zoomHandler = zoom()\n            .extent([[0, 0], [width, height]])\n            .scaleExtent([1 / 10, 8])\n            .on(\"zoom\", ({ transform }) => {\n                everything.attr(\"transform\", transform);\n            });\n        zoomHandler(select(this.svgRef.current));\n\n        processHighlights({ networkGraph, links, selectedNode, node, link, linkLabel });\n        node.on(\"click\", (event, d: NodeI) => {\n            const { selectedNode } = this.state;\n            this.setState({ selectedNode: selectedNode ? null : d });\n        });\n        this.simulation.alphaTarget(0.03).restart();\n    }\n\n\n    updateForces(width: number, height: number): void {\n        this.simulation = this.simulation\n            .force(\"link\", forceLink<NodeI, LinkI>().id(d => d.ieeeAddr).distance(getDistance).strength(linkStrregth))\n            .force(\"charge\", forceManyBodyReuse().strength(-700))\n            .force(\"collisionForce\", forceCollide())\n            .force(\"center\", forceCenter(width / 2, height / 2))\n            .force(\"x\", forceX().strength(0.1))\n            .force(\"y\", forceY().strength(0.2))\n    }\n\n    initPage(): void {\n        const { width, height } = (this.ref.current as HTMLDivElement).getBoundingClientRect();\n        this.setState({ width, height });\n        this.updateForces(width, height);\n    }\n\n    componentDidMount(): void {\n        this.initPage()\n    }\n\n    componentDidUpdate(): void {\n        this.updateNodes();\n    }\n\n    renderMap() {\n        const { width, height, visibleLinks } = this.state;\n\n        const { networkGraph } = this.props;\n        const links = networkGraph.links.filter(l => intersection(visibleLinks, l.relationships).length > 0);\n        return (\n            <svg ref={this.svgRef} viewBox={`0 0 ${width} ${height}`}>\n                <g className=\"everything\">\n                    <Links links={links} />\n                    <Nodes\n                        nodes={networkGraph.nodes}\n                        simulation={this.simulation}\n                    />\n                </g>\n            </svg >\n        )\n    }\n    onRequestClick = (): void => {\n        const { networkMapRequest } = this.props;\n        networkMapRequest();\n    }\n    renderMessage() {\n        const { networkGraphIsLoading } = this.props;\n        return (\n            <div className=\"h-100 d-flex justify-content-center align-items-center\">\n                {\n                    networkGraphIsLoading ? (\n                        <div>\n                            <Spinner />\n                            <div>Depending on the size of your network this can take somewhere between 10 seconds and 2 minutes.</div>\n                        </div>\n\n                    ) : <Button onClick={this.onRequestClick} className=\"btn btn-primary d-block\">Load map</Button>\n                }\n            </div>\n        );\n    }\n    onLinkTypeFilterChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { visibleLinks: stateVisibleLinks } = this.state;\n        const { checked, value } = e.target;\n        const inValue = parseInt(value, 10);\n        let visibleLinks = [...stateVisibleLinks];\n        if (checked) {\n            visibleLinks.push(inValue);\n        } else {\n            visibleLinks = visibleLinks.filter((v) => v !== inValue);\n        }\n        this.setState({ visibleLinks });\n    }\n    renderMapControls() {\n        const { visibleLinks } = this.state;\n        return <div className={style.controls}>\n            {\n                linkTypes.map(linkType => (\n                    <div key={linkType.title} className=\"form-check form-check-inline\">\n                        <input onChange={this.onLinkTypeFilterChange} className=\"form-check-input\" type=\"checkbox\" id={linkType.title} value={linkType.relationship} checked={visibleLinks.includes(linkType.relationship)} />\n                        <label className=\"form-check-label\" htmlFor={linkType.title}>{linkType.title}</label>\n                    </div>\n                ))\n            }\n            {\n                <div className=\"btn-group btn-group-sm\" role=\"group\">\n                    <Button<void> title=\"Refresh data\" className=\"btn btn-primary\" onClick={this.onRequestClick}><i\n                        className=\"fa fa-sync\" /></Button>\n                </div>\n            }\n        </div>\n    }\n    render() {\n        const { networkGraph } = this.props;\n        return (\n            <div className={style.container} ref={this.ref}>\n                {networkGraph.nodes.length ? <Fragment>{this.renderMapControls()} {this.renderMap()}</Fragment> : this.renderMessage()}\n            </div>\n        );\n    }\n}\n\n\nconst mappedProps = [\"networkGraph\", \"networkGraphIsLoading\"];\nconst ConnectedMap = connect<{}, MapState, GlobalState, {}>(mappedProps, actions)(MapComponent);\nexport default ConnectedMap;\n","import React, { Component, FunctionComponent,  Fragment } from \"react\";\nimport cx from \"classnames\";\n// import * as style from \"./style.css\";\n\n\nexport const ModalHeader: FunctionComponent<{}> = props => {\n    return <div className=\"modal-header\">{props.children}</div>;\n};\n\nexport const ModalBody: FunctionComponent<{}> = props => {\n    return <div className=\"modal-body\">{props.children}</div>;\n};\n\nexport const ModalFooter: FunctionComponent<{}> = props => {\n    return <div className=\"modal-footer\">{props.children}</div>;\n};\ninterface ModalProps {\n    isOpen?: boolean;\n}\ninterface ModalState {\n    modalShow: string;\n    display: string;\n}\n\nclass Modal extends Component<ModalProps, ModalState> {\n    constructor(props: ModalProps) {\n        super(props);\n        this.state = {\n            modalShow: '',\n            display: 'none'\n        };\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    openModal() {\n        this.setState({\n            modalShow: 'show',\n            display: 'block'\n        });\n    }\n\n    closeModal() {\n        this.setState({\n            modalShow: '',\n            display: 'none'\n        });\n    }\n\n    componentDidMount() {\n        this.props.isOpen ? this.openModal() : this.closeModal();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.isOpen !== this.props.isOpen) {\n            this.props.isOpen ? this.openModal() : this.closeModal();\n        }\n    }\n\n    render() {\n        return (\n            <div\n                className={`modal fade ${ this.state.modalShow}`}\n\n                role=\"dialog\"\n                aria-hidden=\"true\"\n                style={{ display: this.state.display }}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">{this.props.children}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n\n\n\n// interface Props {\n//     onOk(): void;\n//     onCancel(): void;\n// }\n// const Modal: FunctionComponent<Props> = (props: Props) => {\n//     const { onOk, onCancel } = props;\n//     return (\n//         <Fragment>\n\n//             <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n//                 Launch demo modal\n// </button>\n//             <div className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n//                             <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n//                                 <span aria-hidden=\"true\">&times;</span>\n//                             </button>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             ...\n//                         </div>\n//                         <div className=\"modal-footer\">\n//                             <button onClick={onOk} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n//                             <button onClick={onCancel} type=\"button\" className=\"btn btn-primary\">Ok</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </Fragment>\n//     );\n// };\n\n// export default Modal;\n","import React, { ChangeEvent, Component } from \"react\";\nimport Button from \"../button\";\nimport { Device, DeviceState } from \"../../types\";\nimport { connect } from \"unistore/react\";\nimport actions, { OtaApi, DeviceApi } from \"../../actions\";\nimport cx from \"classnames\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\nimport { GlobalState } from \"../../store\";\ninterface DeviceControlGroupProps {\n    device: Device;\n    state?: DeviceState;\n}\ninterface DeviceRenameParams {\n    friendlyName: string;\n    isHassRename: boolean;\n}\ninterface DeviceRemovalParams {\n    block: boolean;\n    force: boolean;\n}\n\n\ninterface DeviceControlGroupState {\n    isRenameModalOpened: boolean;\n    isDeviceRemovalModalOpened: boolean;\n    removeParams: DeviceRemovalParams;\n    renameParams: DeviceRenameParams;\n\n}\n\nexport class DeviceControlGroup extends Component<DeviceControlGroupProps & DeviceApi & OtaApi & GlobalState, DeviceControlGroupState> {\n    state = {\n        isRenameModalOpened: false,\n        isDeviceRemovalModalOpened: false,\n        renameParams: {\n            friendlyName: this.props.device.friendly_name,\n            isHassRename: false\n        },\n        removeParams: {\n            block: false,\n            force: false\n        }\n    }\n\n    onRenameClick = async (): Promise<void> => {\n        const { renameDevice, device } = this.props;\n        const { renameParams } = this.state;\n\n        await renameDevice(device.friendly_name, renameParams.friendlyName, renameParams.isHassRename);\n        this.setState({\n            isRenameModalOpened: false\n        });\n    };\n\n\n    onRemoveClick = (): void => {\n        const { removeDevice, device } = this.props;\n        const { removeParams } = this.state;\n        removeDevice(device.friendly_name, removeParams.force, removeParams.block);\n        this.setState({\n            isDeviceRemovalModalOpened: false\n        });\n    };\n\n    toggleRenameModal = (): void => {\n        const { isRenameModalOpened } = this.state;\n        this.setState({ isRenameModalOpened: !isRenameModalOpened });\n    }\n    toggleDeviceRemovalModal = (): void => {\n        const { isDeviceRemovalModalOpened } = this.state;\n        this.setState({ isDeviceRemovalModalOpened: !isDeviceRemovalModalOpened });\n    }\n\n    onHassEntityIdChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { checked } = e.target;\n        renameParams.isHassRename = checked;\n        this.setState({ renameParams });\n    }\n    onFriendlyNameChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { value } = e.target;\n        renameParams.friendlyName = value;\n        this.setState({ renameParams });\n    }\n\n    onDeviceRemovalParamChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { removeParams } = this.state;\n        const { checked, name } = e.target;\n        removeParams[name] = checked;\n        this.setState({ removeParams });\n    }\n    renderRenameButton() {\n        const { bridgeInfo, device } = this.props;\n        const { isRenameModalOpened, renameParams } = this.state;\n        return (\n            <><Button<void> className=\"btn btn-secondary\" onClick={this.toggleRenameModal} title=\"Rename device\"><i className=\"fa fa-edit\" /></Button>\n                <Modal isOpen={isRenameModalOpened}>\n                    <ModalHeader>\n                        <h3>Rename device</h3>\n                        <small>{device.friendly_name}</small>\n                    </ModalHeader>\n                    <ModalBody>\n                        <div className=\"mb-3\">\n                            <label htmlFor={`fn${device.ieee_address}`} className=\"form-label\">Friendly name</label>\n                            <input id={`fn${device.ieee_address}`} onChange={this.onFriendlyNameChange} type=\"text\" className=\"form-control\" value={renameParams.friendlyName} />\n                        </div>\n                        {bridgeInfo?.config?.homeassistant ? (\n                            <div className=\"form-check form-switch\">\n                                <input className=\"form-check-input\" checked={renameParams.isHassRename} type=\"checkbox\" id={`hass${device.ieee_address}`} onChange={this.onHassEntityIdChange} />\n                                <label className=\"form-check-label\" htmlFor={`hass${device.ieee_address}`}>Update Home Assistant entity ID</label>\n                            </div>\n                        ) : null}\n                    </ModalBody>\n                    <ModalFooter>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleRenameModal}>Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.onRenameClick}>Save changes</button>\n                    </ModalFooter>\n                </Modal></>\n        )\n    }\n    renderDeviceRemovalButton() {\n        const { device } = this.props;\n        const { isDeviceRemovalModalOpened, removeParams } = this.state;\n        return (\n            <><Modal isOpen={isDeviceRemovalModalOpened}>\n                <ModalHeader>\n                    <h3>Remove device</h3>\n                    <small>{device.friendly_name}</small>\n                </ModalHeader>\n                <ModalBody>\n                    <div className=\"form-check form-switch\">\n                        <input className=\"form-check-input\" name=\"force\" checked={removeParams.force} type=\"checkbox\" id={`force${device.ieee_address}`} onChange={this.onDeviceRemovalParamChange} />\n                        <label className=\"form-check-label\" htmlFor={`force${device.ieee_address}`}>Force remove</label>\n                    </div>\n                    <div className=\"form-check form-switch\">\n                        <input className=\"form-check-input\" name=\"block\" checked={removeParams.block} type=\"checkbox\" id={`block${device.ieee_address}`} onChange={this.onDeviceRemovalParamChange} />\n                        <label className=\"form-check-label\" htmlFor={`block${device.ieee_address}`}>Block from joining again</label>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleDeviceRemovalModal}>Close</button>\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onRemoveClick}>Delete</button>\n                </ModalFooter>\n            </Modal>\n                <button onClick={this.toggleDeviceRemovalModal} className=\"btn btn-danger\" title=\"Remove device\"><i className={cx(\"fa\", \"fa-trash\")} /></button></>\n        )\n    }\n    render() {\n        const { device, configureDevice, checkOTA, updateOTA, state } = this.props;\n        return (\n            <div className=\"btn-group btn-group-sm\" role=\"group\">\n                {this.renderRenameButton()}\n                <Button<string> className=\"btn btn-secondary\" onClick={configureDevice} item={device.friendly_name} title=\"Reconfigure\" promt><i className={cx(\"fa\", \"fa-cogs\")} /></Button>\n                {\n                    state?.update?.state === \"available\" ?\n                        <Button<string> className=\"btn btn-secondary\" onClick={updateOTA} item={device.friendly_name} title=\"Update OTA\" promt><i className={cx(\"fa\", \"fa-cloud-download-alt\")} /></Button>\n                        : <Button<string> className=\"btn btn-secondary\" onClick={checkOTA} item={device.friendly_name} title=\"Check OTA\"><i className={cx(\"fa\", \"fa-cloud\")} /></Button>\n                }\n                {this.renderDeviceRemovalButton()}\n\n\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedDeviceControlGroup = connect<DeviceControlGroupProps, {}, GlobalState, DeviceApi & OtaApi>(mappedProps, actions)(DeviceControlGroup);\nexport default ConnectedDeviceControlGroup;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"device-pic\":\"_2UWt6cv5iKbBWQ1njU-Knh\",\"small-nav\":\"TxlAB4ufmQ5iWcatxCVRX\"};","import React, { Fragment } from \"react\";\nimport { Device } from \"../../types\";\n\ntype VendorProps = {\n  device: Device;\n}\nconst normalizeModel = (model: string): string => {\n  const find = '[/| |:]';\n  const re = new RegExp(find, 'g');\n  return model.replace(re, '_');\n};\n\nexport const VendorLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  if (device.supported) {\n    const url = `https://www.zigbee2mqtt.io/information/supported_devices.html#${encodeURIComponent(normalizeModel(device.definition?.vendor?.toLowerCase()))}`;\n    return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{device.definition?.vendor}</a>\n  }\n  return <Fragment>Unsupported</Fragment>;\n}\n\n\nexport const ModelLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  let url = 'https://www.zigbee2mqtt.io/how_tos/how_to_support_new_devices.html#how-to-support-new-devices';\n  let title = 'Unsupported';\n  if (device.supported) {\n    const acnchor = [\n      encodeURIComponent(device.definition?.vendor?.toLowerCase()),\n      encodeURIComponent(device.definition?.model?.toLowerCase()),\n    ].join('-');\n    url = `https://www.zigbee2mqtt.io/devices/${encodeURIComponent(normalizeModel(device.definition?.model))}.html#${encodeURIComponent(normalizeModel(acnchor))}`;\n    title = device.definition?.model;\n  }\n  return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{title}</a>\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"plug\":\"_2Qj8QVth6tVVFe6VESug0N\",\"blinking\":\"t22iUK3r3w1jlcSwxWXN9\",\"blinker\":\"_3SpBv5_CMt6ERjs-mp41bf\"};","import React, { Fragment, FunctionComponent } from \"react\";\nimport { PowerSource as PowerSourceType } from \"../../types\";\nimport style from \"./style.css\";\n\n\ninterface PowerSourceProps {\n    source: PowerSourceType;\n    battery?: number;\n    batteryLow?: boolean;\n    showLevel?: boolean;\n}\n\n\nconst PowerSource: FunctionComponent<PowerSourceProps> = ({ source, battery, batteryLow, showLevel, ...rest }) => {\n    let batteryClass = \"\";\n    let title = \"\";\n\n    switch (source) {\n        case \"Battery\":\n            title = 'Battery';\n            if (batteryLow !== undefined) {\n                batteryClass = batteryLow ? `fa-battery-empty ${style.blinking} text-danger` : 'fa-battery-full text-success';\n                title += batteryLow ? ' LOW' : ' OK';\n            }\n            if (battery !== undefined) {\n                if (battery >= 85) {\n                    batteryClass += \" fa-battery-full\";\n                } else if (battery >= 75) {\n                    batteryClass += \" fa-battery-three-quarters\";\n                } else if (battery >= 50) {\n                    batteryClass += \" fa-battery-half\";\n                } else if (battery >= 25) {\n                    batteryClass += \" fa-battery-quarter\";\n                } else if (battery >= 10) {\n                    batteryClass += ` fa-battery-empty ${style.blinking}`\n                } else {\n                    return <span className={`${style.blinking} text-danger`} role=\"alert\">{battery}%</span>\n                }\n            }\n            title += `${battery ? `, power level ${battery}%` : \"\"}`;\n            if (!batteryClass) {\n                batteryClass = \"fa-question\";\n            }\n            return <Fragment>{showLevel ? <span className=\"pe-2\">Battery {battery !== undefined ? `${battery}%` : null}</span> : null}<i className={`fa ${batteryClass}`} title={title} {...rest} /></Fragment>;\n\n        case \"Mains (single phase)\":\n        case \"DC Source\":\n            return <i className={`fa fa-plug ${style.plug}`} title={source} {...rest} />;\n        default:\n            return <i className={`fa fa-question`} title={source} {...rest} />;\n    }\n};\n\nexport default PowerSource;\n","/* eslint-disable react/display-name */\nimport React, { Component, Fragment } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport { toHex, toHHMMSS } from \"../../utils\";\nimport DeviceControlGroup from \"../device-control\";\nimport cx from \"classnames\";\nimport style from \"./style.css\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport get from 'lodash/get';\nimport DeviceImage from \"../device-image\";\nimport { ModelLink, VendorLink } from \"../vendor-links/verndor-links\";\nimport PowerSource from \"../power-source\";\n\n\ntype DeviceInfoProps = {\n    device: Device;\n}\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\n\nconst displayProps = [\n    {\n        label: 'Friendly name',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><strong>{device.friendly_name}</strong></dd>,\n    },\n    {\n        key: 'type',\n        label: 'Device type'\n    },\n    {\n        key: 'definition.description',\n        label: 'Description',\n        if: 'supported'\n    },\n    {\n        render: (device: Device) => <dd className=\"col-12 col-md-7\" ><p className={cx('mb-0', 'font-weight-bold', { 'text-danger': !device.supported, 'text-success': device.supported })}>{device.supported ? 'Supported' : 'Unsupported'}</p></dd>,\n        label: 'Support status'\n    },\n    {\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{device.definition.supports}</dd>,\n        label: 'Supports',\n        if: 'definition.supports'\n    },\n    {\n        key: 'ieee_address',\n        label: 'IEEE address'\n    },\n    {\n        key: 'network_address',\n        label: 'Network address',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{toHex(device.network_address)}</dd>,\n    },\n    {\n        key: 'date_code',\n        label: 'Firmware build date',\n        if: 'date_code'\n    },\n    {\n        key: 'software_build_id',\n        label: 'Firmware version',\n        if: 'software_build_id'\n    },\n\n    {\n        key: 'definition.vendor',\n        label: 'Vendor',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><VendorLink device={device} /></dd>\n    },\n    {\n        key: 'definition.model',\n        label: 'Model',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><ModelLink device={device} /></dd>\n    },\n\n    {\n        label: 'Power source',\n        render: (device: Device, deviceStatus: DeviceState) => <dd className=\"col-12 col-md-7\"><PowerSource showLevel={true} source={device.power_source} battery={deviceStatus.battery} batteryLow={deviceStatus.battery_low} /></dd>\n    },\n    {\n        label: 'Interview completed',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{device.interview_completed ? 'Yes' : 'No'}</dd>\n    }\n];\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DeviceInfo extends Component<DeviceInfoProps & PropsFromStore, {}> {\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceStatus: DeviceState = deviceStates.get(device.friendly_name) ?? {} as DeviceState;\n        return (\n            <Fragment>\n                <div className=\"d-flex justify-content-center\">\n                    <DeviceImage className={`card-img-top w-auto ${style[\"device-pic\"]}`} device={device} deviceStatus={deviceStatus} />\n                </div>\n\n\n                {/* <h2 className=\"card-title\">{device.friendly_name} {device.type}</h2> */}\n\n\n                <dl className=\"row\">\n                    {\n                        displayProps.filter(prop => prop.if === undefined || get(device, prop.if, false)).map(prop => (\n                            <Fragment key={prop.label}>\n                                <dt className=\"col-12 col-md-5\">{prop.label}</dt>\n                                {prop.render ?\n                                    prop.render(device, deviceStatus) : <dd className=\"col-12 col-md-7\">{get(device, prop.key)}</dd>}\n\n                            </Fragment>\n                        ))\n                    }\n                    {\n                        deviceStatus?.update?.state === \"updating\" ? (\n                            <Fragment>\n                                <dt className=\"col-12 col-md-5\">Updating firmware</dt>\n                                <dd className=\"col-12 col-md-7\">\n                                    <div className=\"progress\">\n                                        <div className=\"progress-bar progress-bar-striped progress-bar-animated\" style={{ width: `${deviceStatus.update.progress}%` }}>\n                                            {deviceStatus.update.progress}%\n                                        </div>\n                                    </div>\n                                    <div>Remaining time {toHHMMSS(deviceStatus.update.remaining)}</div>\n                                </dd>\n                            </Fragment>\n                        ) : null\n                    }\n                </dl>\n\n\n                <DeviceControlGroup device={device} state={deviceStatus} />\n\n            </Fragment>\n        );\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceInfoPage = connect<DeviceInfoProps, {}, GlobalState, PropsFromStore>(mappedProps)(DeviceInfo);\nexport default ConnectedDeviceInfoPage;","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Device, ObjectType } from \"../../types\";\nimport { getDeviceDisplayName } from \"../../utils\";\nimport { Group } from \"../../store\";\nconst DELIMITER = '|';\ninterface DevicePickerProps {\n    type: ObjectType;\n    value: string | number;\n    devices: Map<string, Device>;\n    groups?: Group[];\n    onChange(device: Device | Group, type: ObjectType): void;\n}\nexport default class DevicePicker extends Component<DevicePickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange, devices, groups = [] } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n\n        if (devices.has(value)) {\n            onChange(devices.get(value), \"device\");\n        } else {\n            const group = groups.find(g => parseInt(value, 10) === g.id);\n            onChange(group, \"group\");\n        }\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { devices, groups, value, type, onChange, ...rest } = this.props;\n        let options = [<option key=\"hidden\" hidden>Select device</option>];\n\n        const devicesOptions = [];\n        devices.forEach((device) => {\n            devicesOptions.push(<option\n                title={device.definition?.description}\n                key={device.ieee_address}\n                value={device.ieee_address}\n            >{getDeviceDisplayName(device)}</option>);\n        });\n        if (groups && groups.length) {\n            const groupOptions = groups.map(group => <option\n                key={group.friendly_name}\n                value={group.id}>{group.friendly_name}\n            </option>);\n            options.push(<optgroup key=\"Groups\" label=\"Groups\">{groupOptions}</optgroup>);\n            options.push(<optgroup key=\"Devices\" label=\"Devices\">{devicesOptions}</optgroup>);\n        } else {\n            options = options.concat(devicesOptions);\n        }\n        return <select\n            value={value}\n            onChange={this.onSelect}\n            className=\"form-control\"\n            {...rest}\n        >{options}\n\n        </select>;\n\n    }\n}","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Endpoint } from \"../../types\";\n\n\n\ninterface EndpointPickerProps {\n    onChange(endpoint: Endpoint): void;\n    value: Endpoint;\n    values: Endpoint[];\n}\n\nexport default class EndpointPicker extends Component<EndpointPickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n        onChange(value);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { onSelect, value, values, disabled, onChange, ...rest } = this.props;\n        const hasOnlyOneEP = values.length == 1;\n\n        const options = values.map(ep => <option key={ep} value={ep}>{ep}</option>)\n        options.unshift(<option key=\"hidded\" hidden>Select endpoint</option>);\n        return <select disabled={value && hasOnlyOneEP || disabled}\n            value={value}\n            className=\"form-control\"\n            title={hasOnlyOneEP ? 'The only endpoint' : null}\n            onChange={this.onSelect}\n            {...rest}>\n            {options}\n        </select>;\n\n    }\n}","export type DeviceType = \"EndDevice\" | \"Router\" | \"Coordinator\";\n\n\ninterface OTAState {\n    state: \"available\" | \"updating\";\n    progress: number;\n    remaining: number;\n}\nexport type RGBColor = {\n    r: number;\n    g: number;\n    b: number;\n}\nexport type HueSaturationColor = {\n    hue: number;\n    saturation: number;\n}\n\nexport type XYColor = {\n    x: number;\n    y: number;\n}\nexport type AnyColor = RGBColor | XYColor | HueSaturationColor;\nexport interface DeviceState {\n    battery?: number;\n    battery_low?: boolean;\n    last_seen?: string | number;\n    elapsed?: number;\n    linkquality: number;\n    update?: OTAState;\n    state?: string;\n    brightness?: number;\n    color_temp?: number;\n    color?: AnyColor;\n    tilt?: number;\n    position?: number;\n    [k: string]: string | number | boolean | OTAState | AnyColor;\n}\n\nexport type Cluster = string;\nexport type Attribute = string;\n\nexport type Endpoint = string | number;\n\n\n\n\nexport interface Meta {\n    revision: number;\n    transportrev: number;\n    product: number;\n    majorrel: number;\n    minorrel: number;\n    maintrel: number;\n}\n\nexport interface Coordinator {\n    type: string;\n    meta: Meta;\n}\n\nexport interface Network {\n    channel: number;\n    pan_id: number;\n    extended_pan_id: number[];\n}\nexport interface Z2MConfig {\n    homeassistant: boolean;\n    advanced: {\n        elapsed: boolean;\n        last_seen: 'disable' | 'ISO_8601' | 'ISO_8601_local' | 'epoch';\n        legacy_api: boolean;\n    };\n    [k: string]: unknown;\n}\nexport interface BridgeConfig {\n    version: string;\n    commit: string;\n    coordinator: Coordinator;\n    network: Network;\n    log_level: string;\n    permit_join: boolean;\n\n}\n\nexport interface BridgeInfo {\n    config?: Z2MConfig;\n    permit_join: boolean;\n    commit?: string;\n    version?: string;\n    coordinator?: {\n        meta?: {\n            revision?: string;\n        };\n        type?: string;\n    };\n}\n\nexport type PowerSource = \"Battery\" | \"Mains (single phase)\" | \"DC Source\";\n\nexport type GenericFeatureType = \"numeric\" | \"binary\" | \"enum\" | \"text\";\nexport type ComposeiteFeatureType = \"fan\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"composite\" | \"climate\";\nexport type AllPossibleFeatures = GenericFeatureType & ComposeiteFeatureType;\n\n\nexport enum FeatureAccessMode {\n    NONE,\n    ACCESS_STATE = 0b001,\n    ACCESS_WRITE = 0b010,\n    ACCESS_READ = 0b100,\n}\nexport interface GenericExposedFeature {\n    type: GenericFeatureType;\n    name?: string;\n    unit?: \"string\";\n    access?: FeatureAccessMode;\n    endpoint?: Endpoint;\n    property: string;\n    description?: string;\n}\n\nexport interface BinaryFeature extends GenericExposedFeature {\n    type: \"binary\";\n    value_on: unknown;\n    value_off: unknown;\n    value_toggle?: unknown;\n}\n\nexport interface CompositeFeature extends Omit<GenericExposedFeature, \"type\"> {\n    type: ComposeiteFeatureType;\n    features: (GenericExposedFeature | CompositeFeature)[];\n}\n\nexport type GenericOrCompositeFeature = GenericExposedFeature | CompositeFeature;\n\nexport interface NumericFeature extends GenericExposedFeature {\n    type: \"numeric\";\n    value_min?: number;\n    value_max?: number;\n}\n\nexport interface TextualFeature extends GenericExposedFeature {\n    type: \"text\";\n}\n\nexport interface EnumFeature extends GenericExposedFeature {\n    type: \"enum\";\n    values: unknown[];\n}\n\nexport interface LightFeature extends CompositeFeature {\n    type: \"light\";\n}\n\nexport interface SwitchFeature extends CompositeFeature {\n    type: \"switch\";\n}\n\nexport interface CoverFeature extends CompositeFeature {\n    type: \"cover\";\n}\n\nexport interface LockFeature extends CompositeFeature {\n    type: \"lock\";\n}\nexport interface FanFeature extends CompositeFeature {\n    type: \"fan\";\n}\n\nexport interface ClimateFeature extends CompositeFeature {\n    type: \"climate\";\n}\n\nexport interface ColorFeature extends CompositeFeature {\n    type: \"composite\";\n    name: \"color_xy\" | \"color_hs\";\n    features: NumericFeature[];\n}\n\nexport interface DeviceDefinition {\n    description: string;\n    model: string;\n    supports: string;\n    vendor: string;\n    exposes: GenericExposedFeature[] | CompositeFeature[];\n}\nexport interface ReportingConfig {\n    cluster: Cluster;\n    attribute: Attribute;\n    maximum_report_interval: number;\n    minimum_report_interval: number;\n    reportable_change: number;\n}\nexport interface EndpointDescription {\n    bindings: BindRule[];\n    configured_reportings: ReportingConfig[];\n    clusters: {\n        input: Cluster[];\n        output: Cluster[];\n    };\n}\n\nexport interface Device {\n    ieee_address: string;\n    type: DeviceType;\n    network_address: number;\n    model: string;\n    friendly_name: string;\n    power_source: PowerSource;\n    interviewing: boolean;\n    interview_completed: boolean;\n    software_build_id: number;\n    supported: boolean;\n    definition?: DeviceDefinition;\n    date_code: string;\n    endpoints: Map<Endpoint, EndpointDescription>;\n}\n\nexport type ObjectType = \"device\" | \"group\";\nexport interface BindRule {\n    cluster: Cluster;\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n\n}\nexport type SortDirection = \"asc\" | \"desc\";\n\nexport interface TouchLinkDevice {\n    ieee_address: string;\n    channel: number;\n}","import React, { Component } from \"react\";\nimport { Device, Endpoint, Cluster, ObjectType } from \"../../types\";\nimport DevicePicker from \"../device-picker\";\nimport EndpointPicker from \"../endpoint-picker\";\nimport ClusterPicker, { PickerType } from \"../cluster-picker\";\nimport Button from \"../button\";\nimport { Group } from \"../../store\";\nimport { NiceBindingRule } from \"./bind\";\nimport { getEndpoints } from \"../../utils\";\n\n\n\n\ninterface BindRowProps {\n    rule: NiceBindingRule;\n    idx: number;\n    devices: Map<string, Device>;\n    groups: Group[];\n    device: Device;\n    onBind(from: string, to: string, clusters: Cluster[]): void;\n    onUnBind(from: string, to: string, clusters: Cluster[]): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface BindRowState {\n    stateRule: NiceBindingRule;\n}\nconst getTarget = (rule: NiceBindingRule, devices: Map<string, Device>, groups: Group[]) => {\n    if (rule.target.type === \"group\") {\n        return groups.find(g => g.id === rule.target.id);\n    }\n    return devices.get(rule.target.ieee_address);\n}\ntype Action = \"Bind\" | \"Unbind\";\nexport default class BindRow extends Component<BindRowProps, BindRowState> {\n    state: Readonly<BindRowState> = {\n        stateRule: null\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static getDerivedStateFromProps(props: Readonly<BindRowProps>, state: BindRowState): Partial<BindRowState> {\n        const { rule } = props;\n        return {\n            stateRule: rule\n        };\n    }\n    setSourceEp = (sourceEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.source.endpoint = sourceEp;\n        this.setState({ stateRule });\n    }\n\n    setDestination = (destination: Device | Group, type: ObjectType): void => {\n        const { stateRule } = this.state;\n        if (type === \"device\") {\n            const endpoints = getEndpoints(destination);\n\n            stateRule.target['ieee_address'] = (destination as Device)['ieee_address'];\n            stateRule.target.type = \"endpoint\";\n            stateRule.target.endpoint = endpoints[0];\n            delete stateRule.target.id;\n        } else if (type === \"group\") {\n            stateRule.target.id = (destination as Group).id;\n            stateRule.target.type = \"group\";\n            delete stateRule.target.ieee_address;\n        }\n        stateRule.clusters = [];\n        this.setState({ stateRule });\n    }\n\n    setDestinationEp = (destinationEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.target.endpoint = destinationEp;\n        stateRule.clusters = [];\n        this.setState({ stateRule });\n    }\n\n    setClusters = (clusters: Cluster[]): void => {\n        const { stateRule } = this.state;\n        stateRule.clusters = clusters;\n        this.setState({ stateRule });\n    }\n\n    getBidningParams(): { from: string; to: string; clusters: string[] } {\n        const { device, groups, devices } = this.props;\n        const { stateRule } = this.state;\n        const from = `${device.friendly_name}/${stateRule.source.endpoint}`;\n        let to: string;\n        if (stateRule.target.type === \"group\") {\n            const targetGroup = groups.find(group => group.id === stateRule.target.id);\n            to = `${targetGroup.friendly_name}`;\n        } else if (stateRule.target.type === \"endpoint\") {\n            const targeDevice = devices.get(stateRule.target.ieee_address);\n            if (targeDevice.type === \"Coordinator\") {\n                to = `${targeDevice.friendly_name}`;\n            } else {\n                to = `${targeDevice.friendly_name}/${stateRule.target.endpoint}`;\n            }\n        }\n        return { from, to, clusters: stateRule.clusters };\n    }\n\n    onBindOrUnBindClick = (action: Action): void => {\n        const { onUnBind, onBind } = this.props;\n        const { from, to, clusters } = this.getBidningParams();\n        if (action == \"Bind\") {\n            onBind(from, to, clusters);\n        } else {\n            onUnBind(from, to, clusters);\n        }\n    }\n\n    isValidRule(): boolean {\n        const { stateRule } = this.state;\n        let valid = false;\n        if (stateRule.target.type == \"endpoint\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.ieee_address\n                && stateRule.target.endpoint\n                && stateRule.clusters.length > 0;\n        } else if (stateRule.target.type == \"group\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.id\n                && stateRule.clusters.length > 0;\n        }\n        return valid;\n    }\n\n    render() {\n        const { devices, groups, idx, device } = this.props;\n        const { stateRule } = this.state;\n\n        const targetType: ObjectType = stateRule.target.type === \"endpoint\" ? \"device\" : \"group\";\n\n        const sourceEndpoints = getEndpoints(device);\n        const target = getTarget(stateRule, devices, groups);\n        const destinationEndpoints = getEndpoints(target);\n\n        const possibleClusters: Set<Cluster> = new Set(stateRule.clusters);\n        const destEndpoint = device.endpoints.get(stateRule.source.endpoint);\n        if (destEndpoint) {\n            destEndpoint.clusters.output.forEach(cluster => possibleClusters.add(cluster));\n        }\n        return (<tr>\n            <th scope=\"row\">{idx + 1}</th>\n            <td><EndpointPicker disabled={!stateRule.isNew} values={sourceEndpoints} value={stateRule.source.endpoint} onChange={this.setSourceEp} /></td>\n            <td><DevicePicker disabled={!stateRule.isNew} type={targetType} value={stateRule.target.ieee_address || stateRule.target.id} devices={devices} groups={groups} onChange={this.setDestination} /></td>\n            <td>{stateRule.target.type === \"endpoint\" ? <EndpointPicker disabled={!stateRule.isNew} values={destinationEndpoints} value={stateRule.target.endpoint} onChange={this.setDestinationEp} /> : null}</td>\n            <td><ClusterPicker pickerType={PickerType.MULTIPLE} clusters={Array.from(possibleClusters)} value={stateRule.clusters} onChange={this.setClusters} /></td>\n            <td><div className=\"btn-group btn-group-sm\">\n                <Button<Action> item={\"Bind\"} disabled={!this.isValidRule()} title=\"Bind\" className=\"btn btn-primary\" onClick={this.onBindOrUnBindClick}><i\n                    className=\"fa fa-heart\" /></Button>\n                <Button<Action> item={\"Unbind\"} disabled={!stateRule.isNew && !this.isValidRule()} title=\"Unbind\" className=\"btn btn-secondary\" onClick={this.onBindOrUnBindClick}><i\n                    className=\"fa fa-heart-broken\" /></Button>\n            </div></td>\n        </tr>);\n    }\n}","import React, { Component } from \"react\";\nimport { Device, Cluster, Endpoint } from \"../../types\";\nimport BindRow from \"./bind-row\";\nimport actions, { BindApi } from \"../../actions\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState, Group } from \"../../store\";\nimport { getEndpoints } from \"../../utils\";\n\n\ninterface PropsFromStore {\n    devices: Map<string, Device>;\n    groups: Group[];\n}\ninterface BindProps {\n    device: Device;\n}\n\nexport interface NiceBindingRule {\n    id?: number;\n    isNew?: number;\n    source: {\n        ieee_address: string;\n        endpoint: Endpoint;\n    };\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n    clusters: Cluster[];\n}\nconst rule2key = (rule: NiceBindingRule): string => `${rule.isNew}${rule.source.ieee_address}-${rule.target.id}-${rule.target.ieee_address}-${rule.clusters.join('-')}`;\nconst convertBidningsIntoNiceStructure = (device: Device): NiceBindingRule[] => {\n    const bindings = {};\n    device.endpoints.forEach((description, endpoint) => {\n        description.bindings\n            .forEach(b => {\n                const targetId = b.target.id ?? b.target.ieee_address;\n                if (bindings[targetId]) {\n                    bindings[targetId].clusters.push(b.cluster);\n                } else {\n                    bindings[targetId] = {\n                        source: {\n                            // eslint-disable-next-line @typescript-eslint/camelcase\n                            ieee_address: device.ieee_address,\n                            endpoint\n                        },\n                        target: b.target,\n                        clusters: [b.cluster]\n                    }\n                }\n            });\n    });\n    return Object.values(bindings);\n}\ntype BindState = {\n    bidingRules: NiceBindingRule[];\n}\nexport class Bind extends Component<BindProps & PropsFromStore & BindApi, BindState> {\n    state: BindState = {\n        bidingRules: []\n    }\n    onBindClick = (from: string, to: string, clusters: Cluster[]): void => {\n        const { addBind } = this.props;\n        addBind(from, to, clusters);\n    };\n    onUnBindClick = (from: string, to: string, clusters: Cluster[]): void => {\n        const { removeBind } = this.props;\n        removeBind(from, to, clusters);\n    };\n    static getDerivedStateFromProps(props: Readonly<BindProps & PropsFromStore>, state: BindState): Partial<BindState> {\n        const { device } = props;\n        const endpoints = getEndpoints(device);\n        const bidingRules = convertBidningsIntoNiceStructure(device);\n\n        bidingRules.push({ isNew: Date.now(), target: {}, source: { 'ieee_address': device.ieee_address, endpoint: endpoints[0] }, clusters: [] } as NiceBindingRule);\n        return {\n            bidingRules\n        };\n    }\n    render() {\n        const { device, devices, groups } = this.props;\n        const { bidingRules } = this.state;\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Source EP</th>\n                            <th scope=\"col\">Destination</th>\n                            <th scope=\"col\">Destination EP</th>\n                            <th scope=\"col\">Clusters</th>\n                            <th scope=\"col\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            bidingRules.map((rule, idx) => <BindRow\n                                key={rule2key(rule)}\n                                rule={rule}\n                                groups={groups}\n                                onUnBind={this.onUnBindClick}\n                                onBind={this.onBindClick}\n                                device={device}\n                                idx={idx}\n                                devices={devices} />)\n                        }\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"devices\", \"groups\"];\nconst ConnectedBindPage = connect<BindProps, {}, GlobalState, PropsFromStore & BindApi>(mappedProps, actions)(Bind);\nexport default ConnectedBindPage","import React, { ChangeEvent, Component, InputHTMLAttributes } from \"react\";\nimport { Attribute, Cluster } from \"../../types\";\nimport { Zcl } from \"zigbee-herdsman\";\n\ninterface AttributePickerProps {\n    cluster: Cluster;\n    value: Attribute;\n    onChange: (attr: Attribute) => void;\n}\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class AttributePicker extends Component<AttributePickerProps & Omit<InputHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n\n    onChange = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange } = this.props;\n        const { value } = e.target;\n        onChange(value);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { cluster, onChange, ...rest } = this.props;\n        let attrs = [];\n        const clusterDefinition = Zcl.Cluster[cluster];\n        if (clusterDefinition) {\n            attrs = Object.keys(clusterDefinition.attributes);\n        }\n        const options = attrs.map(attr => <option key={attr} value={attr}>{attr}</option>);\n        options.unshift(<option key=\"none\" hidden>Select attribute</option>)\n        return (<select disabled={attrs.length === 0} className=\"form-select\" onChange={this.onChange} {...rest}>\n            {options}\n        </select>)\n    }\n}","import React, { ChangeEvent, Component } from \"react\";\nimport { Device, Endpoint, Cluster, Attribute } from \"../../types\";\n\nimport EndpointPicker from \"../endpoint-picker\";\nimport ClusterPicker, { ClusterGroup, PickerType } from \"../cluster-picker\";\n\nimport { NiceReportingingRule } from \"./reporting\";\nimport { getEndpoints } from \"../../utils\";\nimport AttributePicker from \"../attribute-picker\";\nimport { Zcl } from \"zigbee-herdsman\";\nimport Button from \"../button\";\n\n\ninterface ReportingRowProps {\n  rule: NiceReportingingRule;\n  idx: number;\n  device: Device;\n  onApply(rule: NiceReportingingRule): void;\n}\ninterface ReportingRowState {\n  stateRule: NiceReportingingRule;\n}\n\nconst getClusters = (device: Device, endpoint: Endpoint): ClusterGroup[] => {\n  let possibleClusters = Object.keys(Zcl.Cluster);\n  let availableClusters = [];\n  const ep = device.endpoints.get(endpoint);\n  if (ep) {\n    availableClusters = availableClusters.concat(ep.clusters.output);\n    possibleClusters = possibleClusters.filter(cluster => !availableClusters.includes(cluster))\n  }\n  return [\n    {\n      name: 'Avaliable',\n      clusters: availableClusters\n    },\n    {\n      name: 'Possible',\n      clusters: possibleClusters\n    }\n  ]\n}\nconst requiredRuleFileds = ['maximum_report_interval', 'minimum_report_interval', 'reportable_change', 'endpoint', 'cluster', 'attribute'];\nconst isValidRule = (rule: NiceReportingingRule): boolean => {\n  return requiredRuleFileds.every(field => rule[field] !== undefined)\n}\nexport default class ReportingRow extends Component<ReportingRowProps, ReportingRowState> {\n\n  state: Readonly<ReportingRowState> = {\n    stateRule: {} as NiceReportingingRule\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  static getDerivedStateFromProps(props: Readonly<ReportingRowProps>, state: ReportingRowState): Partial<ReportingRowState> {\n    const { rule } = props;\n    return {\n      stateRule: rule\n    };\n  }\n\n  setSourceEp = (sourceEp: Endpoint): void => {\n    const { stateRule } = this.state;\n    stateRule.endpoint = sourceEp;\n    this.setState({ stateRule });\n  }\n  setCluster = (cluster: Cluster): void => {\n    const { stateRule } = this.state;\n    stateRule.cluster = cluster;\n    this.setState({ stateRule });\n  }\n\n  setAttribute = (attr: Attribute): void => {\n    const { stateRule } = this.state;\n    stateRule.attribute = attr;\n    this.setState({ stateRule });\n  }\n\n  changeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n    const { stateRule } = this.state;\n    const { name, value } = event.target;\n    stateRule[name] = value;\n    this.setState({ stateRule });\n  }\n\n  applyRule = (): void => {\n    const { onApply } = this.props;\n    const { stateRule } = this.state;\n    onApply(stateRule);\n  }\n\n\n  render() {\n    const { rule, idx, device } = this.props;\n    const { stateRule } = this.state;\n    const sourceEndpoints = getEndpoints(device);\n\n    return (<tr>\n      <th scope=\"row\">{idx + 1}</th>\n      <td><EndpointPicker disabled={!rule.isNew} values={sourceEndpoints} value={stateRule.endpoint} onChange={this.setSourceEp} /></td>\n      <td><ClusterPicker disabled={!stateRule.endpoint} pickerType={PickerType.SINGLE} clusters={getClusters(device, stateRule.endpoint)} value={stateRule.cluster} onChange={this.setCluster} /></td>\n      <td><AttributePicker value={stateRule.attribute} cluster={stateRule.cluster} onChange={this.setAttribute} /></td>\n      <td><input onChange={this.changeHandler} value={stateRule.minimum_report_interval} required type=\"number\" name=\"minimum_report_interval\" className=\"form-control\" /></td>\n      <td><input onChange={this.changeHandler} value={stateRule.maximum_report_interval} required type=\"number\" name=\"maximum_report_interval\" className=\"form-control\" /></td>\n      <td><input placeholder=\"Enter 65535 to disable reporting\" onChange={this.changeHandler} value={stateRule.reportable_change} required type=\"number\" name=\"reportable_change\" className=\"form-control\" /></td>\n      <td><Button<void> disabled={!isValidRule(stateRule)} className=\"btn btn-primary\" onClick={this.applyRule}>Apply</Button></td>\n    </tr>);\n  }\n}","import React, { Component } from \"react\";\nimport { Device, Cluster, Endpoint, Attribute } from \"../../types\";\n\nimport actions, { ReportingApi } from \"../../actions\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState, Group } from \"../../store\";\nimport ReportingRow from \"./reporting-row\";\n\n\ninterface PropsFromStore {\n    devices: Map<string, Device>;\n    groups: Group[];\n}\ninterface ReportingProps {\n    device: Device;\n}\n\nexport interface NiceReportingingRule {\n    id?: number;\n    isNew?: number;\n    endpoint: Endpoint;\n\n    cluster: Cluster;\n    attribute: Attribute;\n    minimum_report_interval: number;\n    maximum_report_interval: number;\n    reportable_change: number;\n}\nconst convertBidningsIntoNiceStructure = (device: Device): NiceReportingingRule[] => {\n    const reportings: NiceReportingingRule[] = [];\n    device.endpoints.forEach((description, endpoint) => {\n        description.configured_reportings\n            .forEach(reportingRule => {\n                reportings.push({\n                    ...reportingRule,\n                    endpoint\n                } as NiceReportingingRule)\n            });\n    });\n    return reportings;\n}\ntype ReportingState = {\n    bidingRules: NiceReportingingRule[];\n}\n\nconst rule2key = (rule: NiceReportingingRule): string => `${rule.isNew}${rule.cluster}-${rule.attribute}`;\n\nexport class Reporting extends Component<ReportingProps & PropsFromStore & ReportingApi, ReportingState> {\n    state: ReportingState = {\n        bidingRules: []\n    }\n    onReportingClick = (from: string, to: string, clusters: Cluster[]): void => {\n        // const { addReporting } = this.props;\n        // addReporting(from, to, clusters);\n    };\n    onUnReportingClick = (from: string, to: string, clusters: Cluster[]): void => {\n        // const { removeReporting } = this.props;\n        // removeReporting(from, to, clusters);\n    };\n    static getDerivedStateFromProps(props: Readonly<ReportingProps & PropsFromStore>, state: ReportingState): Partial<ReportingState> {\n        const { device } = props;\n        // const endpoints = getEndpoints(device);\n        const bidingRules = convertBidningsIntoNiceStructure(device);\n\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        bidingRules.push({ isNew: Date.now(), reportable_change: 0, minimum_report_interval: 60, maximum_report_interval: 3600 } as NiceReportingingRule);\n        return {\n            bidingRules\n        };\n    }\n\n    onApply = (rule: NiceReportingingRule) => {\n        const { configureReport, device } = this.props;\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        const { cluster, endpoint, attribute, minimum_report_interval, maximum_report_interval, reportable_change } = rule;\n        configureReport(`${device.friendly_name}/${endpoint}`, {\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            cluster, attribute, minimum_report_interval, maximum_report_interval, reportable_change\n        });\n    }\n    render() {\n        const { device } = this.props;\n        const { bidingRules } = this.state;\n\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Endpoint</th>\n                            <th scope=\"col\">Cluster</th>\n                            <th scope=\"col\">Attribute</th>\n                            <th scope=\"col\">Min rep interval</th>\n                            <th scope=\"col\">Max rep interval</th>\n                            <th scope=\"col\">Min rep change</th>\n                            <th scope=\"col\">&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            bidingRules.map((rule, idx) =>\n                                <ReportingRow\n                                    idx={idx}\n                                    key={rule2key(rule)}\n                                    rule={rule}\n                                    device={device}\n                                    onApply={this.onApply}\n                                />)\n                        }\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"devices\", \"groups\"];\nconst ConnectedReportingPage = connect<ReportingProps, {}, GlobalState, PropsFromStore & ReportingApi>(mappedProps, actions)(Reporting);\nexport default ConnectedReportingPage","import React, { Component } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport actions, { StateApi } from \"../../actions\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n\n}\ninterface StatesProps {\n    device: Device;\n}\n\nclass States extends Component<StatesProps & PropsFromStore & StateApi, {}> {\n    setStateValue = (name: string, value: unknown): void => {\n        const { setStateValue, device } = this.props;\n        setStateValue(device.friendly_name, name, value);\n    };\n\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {};\n        return <pre>{JSON.stringify(deviceState, null, 4)}</pre>;\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\nconst ConnectedDeviceStates = connect<StatesProps, {}, GlobalState, StateApi>(mappedProps, actions)(States);\nexport default ConnectedDeviceStates;\n","\nimport { GenericExposedFeature, BinaryFeature, NumericFeature, EnumFeature, LightFeature, CompositeFeature, SwitchFeature, CoverFeature, LockFeature, ColorFeature, TextualFeature, ClimateFeature } from \"../../types\";\n\nexport function isBinaryFeature(feature: GenericExposedFeature | CompositeFeature): feature is BinaryFeature {\n  return feature.type === \"binary\";\n}\n\nexport function isNumericFeature(feature: GenericExposedFeature | CompositeFeature): feature is NumericFeature {\n  return feature.type === \"numeric\";\n}\nexport function isTextualFeature(feature: GenericExposedFeature | CompositeFeature): feature is TextualFeature {\n  return feature.type === \"text\";\n}\n\nexport function isEnumFeature(feature: GenericExposedFeature | CompositeFeature): feature is EnumFeature {\n  return feature.type === \"enum\";\n}\n\nexport function isLightFeature(feature: GenericExposedFeature | CompositeFeature): feature is LightFeature {\n  return feature.type === \"light\";\n}\nexport function isSwitchFeature(feature: GenericExposedFeature | CompositeFeature): feature is SwitchFeature {\n  return feature.type === \"switch\";\n}\n\nexport function isCoverFeature(feature: GenericExposedFeature | CompositeFeature): feature is CoverFeature {\n  return feature.type === \"cover\";\n}\n\nexport function isLockFeature(feature: GenericExposedFeature | CompositeFeature): feature is LockFeature {\n  return feature.type === \"lock\";\n}\n\nexport function isCompositeFeature(feature: GenericExposedFeature | CompositeFeature): feature is CompositeFeature {\n  return feature.type === \"composite\" && (feature.name !== \"color_xy\" && feature.name !== \"color_hs\");\n}\n\nexport function isColorFeature(feature: GenericExposedFeature | CompositeFeature): feature is ColorFeature {\n  return feature.type === \"composite\" && (feature.name == \"color_xy\" || feature.name == \"color_hs\");\n}\n\nexport function isClimateFeature(feature: GenericExposedFeature | CompositeFeature): feature is ClimateFeature {\n  return feature.type === \"climate\";\n}\n","import React, { FunctionComponent } from \"react\";\nimport Button from \"../button\";\nimport cx from \"classnames\";\ntype Primitive = number | string;\n\nexport type ValueWithLabelOrPrimitive = {\n  value: number;\n  title: string;\n} | Primitive;\n\ntype EnumProps = {\n  value?: ValueWithLabelOrPrimitive;\n  onChange(value: unknown): void;\n  values: ValueWithLabelOrPrimitive[];\n}\n\n\nfunction isPrimitive(step: ValueWithLabelOrPrimitive): step is Primitive {\n  return [\"number\", \"string\"].includes(typeof step);\n}\n\nconst EnumEditor: FunctionComponent<EnumProps> = (props) => {\n  const { onChange, values, value } = props;\n  return <div className=\"btn-group mr-2\">\n    {\n      values.map(v => <Button<ValueWithLabelOrPrimitive>\n        className={cx(\"btn btn-outline-secondary\", { active: isPrimitive(v) ? v === value : v.value == (isPrimitive(value) ? value : value?.value) })}\n        onClick={item => onChange(item)}\n        key={isPrimitive(v) ? v : v.title}\n        item={isPrimitive(v) ? v : v.value}\n      >{isPrimitive(v) ? v : v.title}</Button>)\n    }\n  </div>;\n}\nexport default EnumEditor;","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport { randomString } from \"../../utils\";\nimport cx from \"classnames\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../enum-editor/enum-editor\";\n\n\n\ntype RangeProps = {\n  value: number;\n  unit?: string;\n  onChange(value: object | number): void;\n  steps?: ValueWithLabelOrPrimitive[];\n}\n\nconst RangeEditor: FunctionComponent<RangeProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n  const { onChange, value, min, max, unit, steps, ...rest } = props;\n  const [id, setId] = useState<string>(randomString(5));\n  const [currentValue, setCurrentValue] = useState<number>(value)\n\n  useEffect(() => {\n    setCurrentValue(value)\n  }, [value]);\n\n  const showRange = min !== undefined && max !== undefined;\n  return <div className=\"input-group align-items-center\">\n    {steps ? <EnumEditor values={steps} onChange={onChange} /> : null}\n    {showRange ? <input\n      id={id}\n      min={min}\n      max={max}\n      type=\"range\"\n      className=\"form-range form-control border-0\"\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.valueAsNumber)}\n      onMouseUp={(() => onChange(currentValue))}\n      {...rest}\n    /> : null}\n    <input\n      type=\"number\"\n      className={cx(\"form-control\", {'ms-1': showRange})}\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.valueAsNumber)}\n      onBlur={() => onChange(currentValue)}\n      {...rest}\n      style={showRange ? { 'maxWidth': '100px' } : null}\n    />\n    {unit ? <span className=\"input-group-text\" style={{ 'minWidth': '66px' }}>{unit}</span> : null}\n  </div>\n}\n\nexport default RangeEditor;\n","import React from \"react\";\n\ntype DisplayValueProps = {\n  value: unknown;\n}\n\nexport function DisplayValue(props: DisplayValueProps) {\n  const { value } = props;\n  switch (typeof value) {\n    case 'boolean':\n      return <>{value ? 'true' : 'false'}</>;\n    case \"undefined\":\n      return <>N/A</>;\n    case \"object\":\n      return <>{value === null ? 'null' : JSON.stringify(value)}</>;\n    case \"string\":\n      return <>{value === \"\" ? <small className=\"text-muted\">empty string</small> : value}</>;\n    default:\n      return <>{JSON.stringify(value)}</>;\n  }\n}","\nimport React, { Fragment, FunctionComponent } from \"react\";\nimport { DeviceState, Device, Endpoint, GenericExposedFeature, CompositeFeature } from \"../../types\";\nimport { DisplayValue } from \"../DisplayValue\";\n\nexport interface BaseFeatureProps<T> {\n  feature: T;\n  deviceState: DeviceState;\n  device: Device;\n  onChange(endpoint: Endpoint, value: object): void;\n  onRead(endpoint: Endpoint, value: object): void;\n}\n\n\nexport const BaseViewer: FunctionComponent<BaseFeatureProps<GenericExposedFeature>> = (props) => {\n  const { feature: { property, unit }, deviceState } = props;\n  return <Fragment><strong><DisplayValue value={deviceState[property]}/></strong>{unit ? <small className=\"text-muted ms-1\">{unit}</small> : null}</Fragment>\n}\n\nexport const NoAccessError: FunctionComponent<BaseFeatureProps<GenericExposedFeature | CompositeFeature>> = ({ feature: { access } }) => <div className=\"alert alert-warning p-0\" role=\"alert\">Unknown acces {JSON.stringify(access, null, 4)}</div>;","import React, { FunctionComponent } from \"react\";\nimport { FeatureAccessMode, NumericFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport RangeEditor from \"../../range-editor/range-editor\";\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ninterface NumericProps extends BaseFeatureProps<NumericFeature> {\n  steps?: ValueWithLabelOrPrimitive[];\n}\n\nconst Numeric: FunctionComponent<NumericProps> = (props) => {\n  const { feature: { access, endpoint, name, property, unit, value_max: valueMax, value_min: valueMin }, deviceState, steps, onChange } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <RangeEditor\n      onChange={(value) => onChange(endpoint, { [name]: value })}\n      value={deviceState[property] as number ?? 0}\n      min={valueMin}\n      max={valueMax}\n      steps={steps}\n      unit={unit}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\n\nexport default Numeric;","import React, { ChangeEvent, Fragment, FunctionComponent, useState } from \"react\";\nimport { randomString } from \"../../utils\";\nimport Button from \"../button\";\nimport { DisplayValue } from \"../DisplayValue\";\n\ntype ToggleProps = {\n  onChange(value: unknown): void;\n\n  value: unknown;\n  valueOn: unknown;\n  valueOff: unknown;\n  label?: string;\n}\n\n\nconst Toggle: FunctionComponent<ToggleProps> = (props) => {\n  const { onChange, value, label, valueOn, valueOff } = props;\n  const [id, setId] = useState<string>(randomString(5));\n  const onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.checked ? valueOn : valueOff);\n  const valueExists = value !== undefined && value !== null;\n  return (\n    <Fragment>\n      <Button<unknown> className=\"btn btn-link ps-0\" item={valueOff} onClick={(item) => onChange(item)}><DisplayValue value={valueOff}/></Button>\n      {valueExists ? (\n        <div className=\"form-check form-switch d-inline-block\">\n        <input className=\"form-check-input\" type=\"checkbox\" id={id} checked={value === valueOn} onChange={onCheckboxChange} />\n        {label ? <label className=\"form-check-label\" htmlFor={id}>{label}</label> : null}\n      </div>\n      ): <i className=\"fa fa-question\" title=\"Current value unknown\"></i> }\n      <Button<unknown> className=\"btn btn-link\" item={valueOn} onClick={(item) => onChange(item)}><DisplayValue value={valueOn}/></Button>\n    </Fragment>\n  )\n}\n\nexport default Toggle;\n","import React, { FunctionComponent } from \"react\";\n\nimport { BinaryFeature, FeatureAccessMode } from \"../../../types\";\nimport Toggle from \"../../toggle\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype BinaryProps = BaseFeatureProps<BinaryFeature>;\n\nconst Binary: FunctionComponent<BinaryProps> = (props) => {\n  const { feature: { access, endpoint, name, property, value_off: valueOff, value_on: valueOn }, deviceState, onChange } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <Toggle\n      onChange={(value) => onChange(endpoint, { [property]: value })}\n      value={deviceState[property]}\n      valueOn={valueOn}\n      valueOff={valueOff}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Binary;","\n\nimport React, { FunctionComponent } from \"react\";\n\nimport { EnumFeature, FeatureAccessMode } from \"../../../types\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype EnumProps = BaseFeatureProps<EnumFeature>\n\nconst Enum: FunctionComponent<EnumProps> = (props) => {\n  const { onChange, feature: { access, name, values, endpoint, property }, deviceState } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <EnumEditor\n      onChange={(value) => onChange(endpoint, { [name]: value })}\n      values={values as unknown as ValueWithLabelOrPrimitive[]}\n      value={deviceState[property] as ValueWithLabelOrPrimitive}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Enum;","import React, { FunctionComponent } from \"react\";\nimport { LightFeature } from \"../../../types\";\nimport { scale } from \"../../../utils\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LightProps = BaseFeatureProps<LightFeature>\nconst stepsConfiguration = {\n  brightness: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: scale(item, [0, 100], [0, 255]), title: item + '%' })),\n  'color_temp': [1000, 2000, 3000, 4000, 5000, 6500].map<ValueWithLabelOrPrimitive>(kelvin => ({ value: 1000000.0 / kelvin, title: kelvin + 'K' }))\n};\n\nconst Light: FunctionComponent<LightProps> = (props) => <Composite type=\"light\" {...props} stepsConfiguration={stepsConfiguration} />;\nexport default Light;","import React, { FunctionComponent } from \"react\";\nimport { SwitchFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype SwitchProps = BaseFeatureProps<SwitchFeature>\n\nconst Switch: FunctionComponent<SwitchProps> = (props) => <Composite type=\"switch\" {...props} />;\n\nexport default Switch;","import React, { FunctionComponent } from \"react\";\nimport { CoverFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\nconst stepsConfiguration = {\n  position: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, title: item + '' })),\n  tilt: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, title: item + '' }))\n};\n\ntype CoverProps = BaseFeatureProps<CoverFeature>\n\nconst Cover: FunctionComponent<CoverProps> = (props) => <Composite type=\"cover\" {...props} stepsConfiguration={stepsConfiguration} />;\n\nexport default Cover;\n\n\n","import React, { FunctionComponent } from \"react\";\nimport { LockFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LockProps = BaseFeatureProps<LockFeature>\n\nconst Lock: FunctionComponent<LockProps> = (props) => <Composite type=\"lock\" {...props} />\nexport default Lock;","import React, { FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport * as convertColors from \"color-convert\";\nimport { AnyColor, XYColor, HueSaturationColor } from \"../../types\";\nimport Button from \"../button\";\n\n\ntype Payload = AnyColor;\n\nexport type ColorFormat = \"color_xy\" | \"color_hs\";\ntype ColorProps = {\n  value: Payload;\n  steps?: string[];\n  format: ColorFormat;\n  onChange(value: object): void;\n}\n\nexport const toRGB = (source: AnyColor, sourceFormat: ColorFormat): string => {\n  switch (sourceFormat) {\n    case \"color_xy\":\n      {\n        const { x, y } = source as XYColor;\n        const z = 1.0 - x - y;\n        const Y = 1;\n        const X = (Y / y) * x;\n        const Z = (Y / y) * z;\n        return '#' + convertColors.xyz.hex([X * 100.0, Y * 100.0, Z * 100.0]);\n      }\n\n    case \"color_hs\":\n      {\n        const { hue, saturation } = source as HueSaturationColor;\n        return '#' + convertColors.hsv.hex([hue, saturation, 100]);\n      }\n    default:\n      return '#FFFFFF';\n  }\n}\n\nconst rgbToTargetFormat = (source: string, targetFormat: ColorFormat): object => {\n  switch (targetFormat) {\n    case \"color_hs\":\n      const [hue, saturation, v] = convertColors.hex.hsv(source);\n      return { hue, saturation };\n\n\n    case \"color_xy\":\n      const [X, Y, Z] = convertColors.hex.xyz(source);\n      const x = X / (X + Y + Z);\n      const y = Y / (X + Y + Z);\n      return { x, y };\n\n    default:\n      return { hex: source };\n  }\n\n}\nconst pridePallete = ['#FF0018', '#FFA52C', '#FFFF41', '#008018', '#0000F9', '#86007D'];\nconst ColorEditor: FunctionComponent<ColorProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange' | 'value'>> = (props) => {\n\n  const { onChange, value = {} as AnyColor, format, steps = pridePallete, ...rest } = props;\n  const [currentColor, setCurrentColor] = useState<string>(toRGB(value, format));\n  useEffect(() => {\n    setCurrentColor(toRGB(value, format))\n  }, [value, format]);\n\n  return <>\n    <div className=\"btn-group mr-2\">\n      {\n        steps.map(step => <Button<string>\n          className=\"btn\"\n          style={{ backgroundColor: step }}\n          key={step}\n          item={step}\n          title={step}\n          onClick={(item) => onChange(rgbToTargetFormat(item, format))}>&nbsp;&nbsp;&nbsp;</Button>)\n      }\n    </div>\n    <input\n      type=\"color\"\n      className=\"form-control form-control-color\"\n      value={currentColor}\n      onChange={e => {\n        onChange(rgbToTargetFormat(e.target.value, format))\n      }}\n      {...rest}\n    />\n  </>\n\n}\n\nexport default ColorEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { AnyColor, ColorFeature } from \"../../../../types\";\nimport ColorEditor from \"../../../color-editor/color-editor\";\n\nimport { BaseFeatureProps } from \"../../base\";\n\n\ntype ColorProps = BaseFeatureProps<ColorFeature>;\n\n\nconst Light: FunctionComponent<ColorProps> = (props) => {\n\n    const { deviceState, feature, onChange } = props;\n    const value = {};\n    for (const innerFeature of feature.features) {\n      value[innerFeature.name] = deviceState[feature.property]?.[innerFeature.property] ?? 0;\n    }\n    return <ColorEditor\n      onChange={(color) => onChange(feature.endpoint, { color })}\n      value={value as AnyColor}\n      format={feature.name} />\n}\nexport default Light;","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\n\ntype TextualProps = {\n  value: string;\n  unit?: string;\n  onChange(value: string): void;\n}\n\nconst TextualEditor: FunctionComponent<TextualProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n  const { onChange, value, unit, ...rest } = props;\n  const [currentValue, setCurrentValue] = useState<string>(value)\n\n  useEffect(() => {\n    setCurrentValue(value)\n  }, [value]);\n\n  return <Fragment>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.value)}\n      onBlur={() => onChange(currentValue)}\n      {...rest}\n    />\n    {unit ? <span className=\"input-group-text\" style={{'minWidth': '66px'}}>{unit}</span> : null}\n  </Fragment>\n}\n\nexport default TextualEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { FeatureAccessMode, TextualFeature } from \"../../../types\";\nimport TextualEditor from \"../../textual-editor/textual-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype TextualProps = BaseFeatureProps<TextualFeature>;\n\nconst Textual: FunctionComponent<TextualProps> = (props) => {\n  const { feature: { access, endpoint, name, property }, deviceState, onChange } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <TextualEditor\n      onChange={(value) => onChange(endpoint, { [name]: value })}\n      value={deviceState[property] as string ?? \"\"}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Textual;","import React, { FunctionComponent } from \"react\";\nimport { ClimateFeature } from \"../../../types\";\n\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\n\ntype ClimateProps = BaseFeatureProps<ClimateFeature>\n\nconst Climate: FunctionComponent<ClimateProps> = (props) => <Composite type=\"climate\" {...props} />;\n\nexport default Climate;\n\n\n","import React, { Component, FunctionComponent, PropsWithChildren } from \"react\";\nimport { CompositeFeature, Endpoint, FeatureAccessMode, GenericExposedFeature } from \"../../../types\";\nimport { isBinaryFeature, isClimateFeature, isColorFeature, isCompositeFeature, isCoverFeature, isEnumFeature, isLightFeature, isLockFeature, isNumericFeature, isSwitchFeature, isTextualFeature } from \"../../device-page/type-guards\";\n\nimport Numeric from \"../numeric/numeric\";\n\nimport { BaseFeatureProps } from \"../base\";\nimport Binary from \"../binary/binary\";\nimport Enum from \"../enum/enum\";\nimport Light from \"../light/light\";\nimport Switch from \"../switch/switch\";\nimport Cover from \"../cover/cover\";\nimport Lock from \"../lock/lock\";\nimport Color from \"../composite/color/color\";\nimport Textual from \"../textual/textual\";\nimport Button from \"../../button\";\nimport groupBy from \"lodash/groupBy\";\nimport Climate from \"../climate/climate\";\n\n\ntype CompositeType = \"composite\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"fan\" | \"climate\";\n\ninterface CompositeProps extends BaseFeatureProps<CompositeFeature> {\n  type: CompositeType;\n  stepsConfiguration?: object;\n}\n\ninterface CompositeState {\n  [key: string]: unknown;\n}\n\ntype FetatureWrapperProps = {\n  feature: CompositeFeature | GenericExposedFeature;\n  onRead(endpoint: Endpoint, property: object): void;\n};\nconst FeatureWrapper: FunctionComponent<PropsWithChildren<FetatureWrapperProps>> = (props) => {\n  const { children, feature, onRead } = props;\n  const isColor = feature.name?.startsWith(\"color_\"); //hardcode for color\n  const isReadable = (feature.access & FeatureAccessMode.ACCESS_READ) || isColor;\n  return <div className=\"row\">\n    <div className=\"col-12 col-md-3\">\n      <label className=\"col-form-label\">\n        <div>\n          <strong title={JSON.stringify(feature)}>{feature.name}</strong>\n          {isReadable ? (\n            <Button<CompositeFeature | GenericExposedFeature> item={feature} onClick={(item) => {\n              onRead(feature.endpoint, { [item.property]: \"\" })\n            }} className=\"btn btn-primaty\"><i className=\"fa fa-sync\"></i></Button>\n          ) : null}\n        </div>\n        {feature.description ? <small className=\"d-block text-muted\">{feature.description}</small> : null}\n      </label>\n\n    </div>\n\n\n    <div className=\"col-12 col-md-9 d-flex align-items-center\">\n      {children}\n    </div>\n\n  </div>\n}\n\nexport default class Composite extends Component<CompositeProps, CompositeState> {\n  state: Readonly<CompositeState> = {}\n  onChange = (endpoint: Endpoint, value: object) => {\n    const { onChange, feature } = this.props;\n    if (isCompositeFeature(feature)) {\n      this.setState(value)\n    } else {\n      onChange(endpoint, value);\n    }\n  }\n  onApplyClick = () => {\n    const { onChange, feature: { endpoint, property } } = this.props;\n    onChange(endpoint, property ? { [property]: this.state } : this.state);\n  }\n\n  onRead = (endpoint: Endpoint, property: object) => {\n    const { onRead, feature } = this.props;\n    if (isCompositeFeature(feature)) {\n      onRead(endpoint, {[feature.property]: property})\n    } else {\n      onRead(endpoint, property);\n    }\n\n  }\n  renderFeature = (feature: CompositeFeature | GenericExposedFeature) => {\n    const { deviceState, device, stepsConfiguration } = this.props;\n\n\n    const genericParams = { key: JSON.stringify(feature), device, deviceState, onChange: this.onChange, onRead: this.onRead };\n    const wrapperParams = { key: JSON.stringify(feature), feature, onRead: this.onRead };\n\n    if (isBinaryFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Binary feature={feature} {...genericParams} />\n      </FeatureWrapper>\n    } else if (isNumericFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Numeric feature={feature} {...genericParams}\n          steps={stepsConfiguration?.[feature.name]} />\n      </FeatureWrapper>\n    } else if (isTextualFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Textual feature={feature} {...genericParams} />\n      </FeatureWrapper>\n    } else if (isEnumFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Enum feature={feature} {...genericParams} />\n      </FeatureWrapper>\n    } else if (isLightFeature(feature)) {\n      return <Light feature={feature} {...genericParams} />\n    } else if (isSwitchFeature(feature)) {\n      return <Switch feature={feature} {...genericParams} />\n    } else if (isCoverFeature(feature)) {\n      return <Cover feature={feature} {...genericParams} />\n    } else if (isLockFeature(feature)) {\n      return <Lock feature={feature} {...genericParams} />\n    } else if (isColorFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Color feature={feature} {...genericParams} />\n      </FeatureWrapper>\n    } else if (isClimateFeature(feature)) {\n      return <Climate feature={feature} {...genericParams} />\n    } else if (isCompositeFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <div className=\"row\">\n          <Composite type=\"composite\" feature={feature} {...genericParams} />\n        </div>\n      </FeatureWrapper>\n    }\n    return (<FeatureWrapper {...wrapperParams}>\n      <pre>{JSON.stringify(feature, null, 4)}</pre>\n    </FeatureWrapper>);\n  }\n  render() {\n    const MAGIC_NO_ENDPOINT = 'MAGIC_NO_ENDPOINT';\n    const { feature } = this.props;\n    const { features } = feature;\n    const groupedFeatures = groupBy(features, f => f.endpoint ?? MAGIC_NO_ENDPOINT);\n    const result = [];\n    if (groupedFeatures[MAGIC_NO_ENDPOINT]) {\n      result.push(...groupedFeatures[MAGIC_NO_ENDPOINT].map(this.renderFeature));\n      delete groupedFeatures[MAGIC_NO_ENDPOINT];\n    }\n    for (const epName in groupedFeatures) {\n      const featuresGroup = groupedFeatures[epName];\n      result.push(<div key={epName}>Endpoint: {epName}<div className=\"ps-4\">{...featuresGroup.map(this.renderFeature)}</div></div>);\n    }\n    if (isCompositeFeature(feature)) {\n      result.push(<div key={feature.name}><Button className=\"btn btn-primary float-right\" onClick={this.onApplyClick}>Apply</Button></div>)\n    }\n    return result;\n\n  }\n}\n","import React, { Component } from \"react\";\nimport { CompositeFeature, Device, DeviceState } from \"../../types\";\nimport actions, { StateApi } from \"../../actions\";\n\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\nimport Composite from \"../features/composite/composite\";\n\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\ninterface ExposesProps {\n    device: Device;\n}\n\nclass Exposes extends Component<ExposesProps & PropsFromStore & StateApi, {}> {\n    render() {\n        const { device, deviceStates, setDeviceState, getDeviceState } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {} as DeviceState;\n        if (device.definition?.exposes) {\n            return <Composite feature={{ features: device.definition.exposes } as CompositeFeature} type=\"composite\" device={device} deviceState={deviceState}\n                onChange={(endpoint, value) => {\n                    setDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                }}\n                onRead={(endpoint, value) => {\n                    getDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                }}\n            />\n        } else {\n            return \"Device doesn't expose anything\"\n        }\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceExposes = connect<ExposesProps, {}, GlobalState, StateApi>(mappedProps, actions)(Exposes);\nexport default ConnectedDeviceExposes;\n","// extracted by mini-css-extract-plugin\nexport default {\"tree\":\"_1A0umx4fPj4iWC5K7RUnD-\"};","import React, { Component, FunctionComponent } from \"react\";\nimport { Device } from \"../../types\";\nimport treeStyle from \"./tree.css\";\n\ninterface ClustersProps {\n    device: Device;\n}\ntype ClustersComp = {\n    label: string;\n    clusters: string[];\n}\nconst ClustersComp: FunctionComponent<ClustersComp> = (props) => {\n    const { label, clusters } = props;\n    if (clusters.length) {\n        return (<li>\n            <span>{label}</span>\n            <ul>{clusters.map(cluster => <li key={cluster}><span>{cluster}</span></li>)}</ul>\n        </li>)\n    } else {\n        return null;\n    }\n\n}\nexport default class Clusters extends Component<ClustersProps, {}> {\n    render() {\n        const { device } = this.props;\n        return <dl className={`${treeStyle.tree} row`}>\n            <ul>\n                <li>\n                    <span>{device.ieee_address}</span>\n                    <ul>\n                        {Array.from(device.endpoints.entries()).map(([epName, epData]) => {\n                            return (\n                                <li key={epName}>\n                                    <span>Endpoint <strong>{epName}</strong></span>\n                                    <ul>\n                                        <ClustersComp label=\"Output clusters\" clusters={epData.clusters.output} />\n                                        <ClustersComp label=\"Input clusters\" clusters={epData.clusters.input} />\n                                    </ul>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </li>\n            </ul>\n        </dl>\n\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions\";\nimport { GlobalState } from \"../../store\";\nimport DeviceInfo from \"./info\";\nimport Bind from \"./bind\";\nimport Reporting from \"./reporting\";\nimport States from \"./states\";\nimport ConnectedDeviceExposes from \"./exposes\";\nimport Clusters from \"./clusters\";\nimport styles from \"./style.css\";\n\ntype UrlParams = {\n    dev: string;\n    tab?: TabName;\n};\ntype DevicePageProps = RouteComponentProps<UrlParams>;\n\n\ntype TabName = \"info\" | \"bind\" | \"state\" | \"exposes\" | \"clusters\" | \"reporting\";\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DevicePage extends Component<DevicePageProps & GlobalState, {}> {\n    renderContent() {\n        const { match, devices } = this.props;\n        const { tab, dev } = match.params;\n        const device = devices.get(dev);\n\n        switch (tab) {\n            case \"info\":\n                return <DeviceInfo device={device} />;\n            case \"bind\":\n                return <Bind device={device} />;\n            case \"state\":\n                return <States device={device} />;\n            case \"exposes\":\n                return <ConnectedDeviceExposes device={device} />;\n            case \"clusters\":\n                return <Clusters device={device} />\n            case \"reporting\":\n                return <Reporting device={device} />\n            default:\n                return <Redirect to={`/device/${dev}/info`} />;\n        }\n\n    }\n    render() {\n\n        const { devices, match } = this.props;\n        const { dev } = match.params;\n        const device = devices.get(dev);\n        if (!device) {\n            return <div className=\"h-100 d-flex justify-content-center align-items-center\">Unknown device</div>\n        }\n\n        return (<div className=\"\">\n            <h3>{device.friendly_name}</h3>\n            <ul className=\"nav nav-tabs\">\n                <li className=\"nav-item\">\n                    <NavLink activeClassName=\"active\" className={`nav-link ${styles['small-nav']}`} to={`/device/${dev}/info`}>About</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink activeClassName=\"active\" className={`nav-link ${styles['small-nav']}`} to={`/device/${dev}/bind`}>Bind</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink activeClassName=\"active\" className={`nav-link ${styles['small-nav']}`} to={`/device/${dev}/reporting`}>Reporting</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink activeClassName=\"active\" className={`nav-link ${styles['small-nav']}`} to={`/device/${dev}/state`}>State</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink activeClassName=\"active\" className={`nav-link ${styles['small-nav']}`} to={`/device/${dev}/exposes`}>Exposes</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink activeClassName=\"active\" className={`nav-link ${styles['small-nav']}`} to={`/device/${dev}/clusters`}>Clusters</NavLink>\n                </li>\n            </ul>\n\n\n\n            <div className=\"tab-content\">\n                <div className=\"tab-pane fade show active container\">\n                    {this.renderContent()}\n                </div>\n\n            </div>\n\n\n\n        </div>);\n\n    }\n}\nconst devicePageWithRouter = withRouter(DevicePage);\nconst mappedProps = [\"devices\"];\nconst ConnectedDevicePage = connect<{}, {}, GlobalState, {}>(mappedProps, actions)(devicePageWithRouter);\nexport default ConnectedDevicePage;","import React, { Component} from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions, { TouchlinkApi } from \"../../actions\";\nimport { GlobalState } from \"../../store\";\nimport Button from \"../button\";\nimport { TouchLinkDevice } from \"../../types\";\nimport { genDeviceDetailsLink } from \"../../utils\";\nimport cx from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\n\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class TouchlinkPage extends Component<TouchlinkApi & GlobalState, {}> {\n    onIdentifyClick = (device: TouchLinkDevice): void => {\n        const { touchlinkIdentify } = this.props;\n        touchlinkIdentify(device);\n    }\n\n    onResetClick = (device: TouchLinkDevice): void => {\n        const { touchlinkReset } = this.props;\n        touchlinkReset(device);\n    }\n\n    renderTouchlinkDevices() {\n        const { touchlinkDevices, devices, touchlinkIdentifyInProgress, touchlinkResetInProgress } = this.props;\n        const touchlinkInProgress = touchlinkIdentifyInProgress || touchlinkResetInProgress;\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table align-middle\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">ieee_address</th>\n                            <th scope=\"col\">friendly_name</th>\n                            <th scope=\"col\">channel</th>\n                            <th scope=\"col\">&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {touchlinkDevices.map((touchlinkDevice, idx) => (\n                            <tr key={touchlinkDevice.ieee_address}>\n                                <td>{idx + 1}</td>\n                                <td>{\n                                    devices.has(touchlinkDevice.ieee_address) ?\n                                        (<Link to={genDeviceDetailsLink(touchlinkDevice.ieee_address)}>{touchlinkDevice.ieee_address}</Link>) : touchlinkDevice.ieee_address}</td>\n                                <td>{devices.get(touchlinkDevice.ieee_address)?.friendly_name}</td>\n                                <td>{touchlinkDevice.channel}</td>\n                                <td>\n                                    <div className=\"btn-group float-right\" role=\"group\" aria-label=\"Basic example\">\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Identify\" className=\"btn btn-primary\" onClick={this.onIdentifyClick}><i\n                                            className={cx(\"fa\", { \"fa-exclamation-triangle\": !touchlinkIdentifyInProgress, \"fas fa-circle-notch fa-spin\": touchlinkIdentifyInProgress })} /></Button>\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Factory reset\" className=\"btn btn-danger\" onClick={this.onResetClick}><i\n                                            className={cx(\"fa\", { \"fa-broom\": !touchlinkResetInProgress, \"fas fa-circle-notch fa-spin\": touchlinkResetInProgress })} /></Button>\n                                    </div>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n    renderNoDevices() {\n        const { touchlinkScan } = this.props;\n        return (\n            <Button className=\"btn btn-primary mx-auto d-block\" onClick={touchlinkScan}>Scan</Button>\n        );\n    }\n    render() {\n        const { touchlinkDevices, touchlinkScanInProgress, touchlinkScan } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card mt-2\">\n                    <div className=\"card-header allign-middle\">\n                        Detected {touchlinkDevices.length} touchlink devices.\n                        <Button title=\"Rescan\" className=\"btn btn-primary btn-sm float-right\" onClick={touchlinkScan}><i className=\"fa fa-sync\" /></Button>\n                    </div>\n\n                    <div>\n                        <div className=\"card-body\">\n                            {touchlinkScanInProgress ? (\n                                <div className=\"d-flex justify-content-center\">\n                                    <div className=\"spinner-border\" role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            ) : touchlinkDevices.length === 0 ? this.renderNoDevices() : this.renderTouchlinkDevices()}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mappedProps = [\"touchlinkDevices\", \"devices\", \"touchlinkScanInProgress\", \"touchlinkIdentifyInProgress\", \"touchlinkResetInProgress\"];\n\nexport default connect<{}, {}, GlobalState, TouchlinkApi>(mappedProps, actions)(TouchlinkPage);","import React, { useState, ChangeEvent, InputHTMLAttributes, useEffect } from \"react\";\n\nimport Button from \"../button\";\nimport RangeEditor from \"../range-editor/range-editor\";\n\ninterface UniversalEditorProps {\n    values?: unknown[];\n    onChange(arg1: unknown): void;\n}\n\nconst togglePairs = new Map<string | boolean, string | boolean>([\n    ['ON', 'OFF'],\n    ['OFF', 'ON'],\n    ['OPEN', 'CLOSE'],\n    ['CLOSE', 'OPEN'],\n    ['LOCK', 'UNLOCK'],\n    ['UNLOCK', 'LOCK'],\n    [true, false],\n    [false, true]\n]);\n\nconst BluringInput: React.FunctionComponent<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>> = (props) => {\n    const { onChange, value, ...rest } = props;\n    const [internalValue, setInternalValue] = useState(value);\n    useEffect(() => {\n        setInternalValue(value);\n    }, [value]);\n\n\n    return <input\n        value={internalValue}\n        onBlur={() => onChange({ target: { value: internalValue } } as ChangeEvent<HTMLInputElement>)}\n        onChange={e => setInternalValue(e.target.value)}\n        {...rest} />\n}\n\nconst UniversalEditor: React.FunctionComponent<InputHTMLAttributes<unknown> & UniversalEditorProps> = (props) => {\n    const { value, values, onChange, disabled, name, ...rest } = props;\n\n    const isToggleParameter = togglePairs.has(value as string | boolean);\n\n\n    if (values) {\n        return (<select className=\"form-select\"\n            disabled={disabled}\n            value={value as string}\n            onChange={e => onChange(e.target.value)}>\n            {values.map(val => <option key={val as string} value={val as string}>{val as string}</option>)}\n        </select>)\n    }\n    switch (typeof value) {\n        case \"boolean\":\n            return (\n                <div className=\"form-check form-switch\">\n                    <input type=\"checkbox\" className=\"form-check-input\"\n                        disabled={disabled}\n                        checked={value as boolean}\n                        onChange={e => onChange(e.target.checked)}\n                        {...rest} />\n                </div>\n            );\n        case \"number\":\n            return (<div className=\"row\">\n                <div className=\"col-9\">\n                    <RangeEditor disabled={disabled} value={value} onChange={v => onChange(v)} {...rest} />\n                </div>\n                <div className=\"col-3\">\n                    <input type=\"number\" step=\"any\" className=\"form-control col-2\"\n                        disabled={disabled}\n                        value={value as number}\n                        onChange={e => onChange(e.target.valueAsNumber)}\n                        {...rest} />\n                </div>\n\n\n            </div >);\n        default:\n            if (isToggleParameter) {\n                return (\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <Button<string | boolean> title=\"Toggle\" value=\"Toggle\"\n                                className=\"btn btn-primary\"\n                                disabled={disabled}\n                                item={togglePairs.get(value as string | boolean)}\n                                onClick={payload => onChange(payload)}>\n                                <i className=\"fa fa-exchange-alt\" />\n                            </Button>\n                        </div>\n                        <div className=\"col-9\">\n                            <BluringInput type=\"text\" className=\"form-control\"\n                                disabled={disabled}\n                                value={value as string}\n                                onChange={e => onChange(e.target.value)}\n                                {...rest}\n                            />\n                        </div>\n                    </div>\n                );\n            }\n            return (<BluringInput type=\"text\" className=\"form-control\"\n                disabled={disabled}\n                value={value as string}\n                onChange={e => onChange(e.target.value)}\n                {...rest} />);\n\n\n    }\n};\nexport default UniversalEditor;","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions, { BridgeApi, LegacyApi, UtilsApi } from \"../../actions\";\nimport { GlobalState } from \"../../store\";\nimport get from \"lodash/get\";\nimport UniversalEditor from \"../universal-editor\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Button from \"../button\";\n\n\nconst settings = [\n    {\n        key: 'last_seen',\n        path: 'config.advanced.last_seen',\n        title: 'Last seen',\n        description: 'Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message',\n        values: ['disable', 'ISO_8601', 'ISO_8601_local', 'epoch']\n    },\n    {\n        key: 'elapsed',\n        path: 'config.advanced.elapsed',\n        title: 'Elapsed',\n        description: 'Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg'\n    },\n    {\n        key: 'log_level',\n        path: 'log_level',\n        title: 'Log level',\n        description: 'Logging level',\n        values: ['debug', 'info', 'warn', 'error']\n    },\n    {\n        key: 'homeassistant',\n        path: 'config.homeassistant',\n        title: 'Homeassistant support',\n        description: 'Home Assistant integration (MQTT discovery)'\n    }\n]\ntype SettingsTab = \"settings\" | \"bridge\" | \"about\";\n\ntype UrlParams = {\n    tab?: SettingsTab;\n};\ntype SettingsPageProps = RouteComponentProps<UrlParams>;\n\ndeclare const FRONTEND_VERSION: string; //injected by webpack.DefinePlugin\n\nexport class SettingsPage extends Component<SettingsPageProps & BridgeApi & GlobalState & LegacyApi & UtilsApi, {}> {\n    updateConfig = (name: string, value: unknown): void => {\n        const { updateConfigValue } = this.props;\n        updateConfigValue(name, value);\n    }\n\n    render() {\n        return (\n            <>\n                <ul className=\"nav nav-tabs\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" activeClassName=\"active\" to={`/settings/settings`}>Settings</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" activeClassName=\"active\" to={`/settings/bridge`}>Raw</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" activeClassName=\"active\" to={`/settings/about`}>About</NavLink>\n                    </li>\n                </ul>\n                <div className=\"tab-content\">\n                    <div className=\"tab-pane fade show active\">\n                        <div className=\"container\">\n                            {this.renderSwitcher()}\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n    renderSwitcher() {\n        const { match } = this.props;\n        const { tab } = match.params;\n        switch (tab) {\n            case \"settings\":\n                return this.renderSettings();\n            case \"bridge\":\n                return this.renderBridgeInfo();\n            case \"about\":\n                return this.renderAbout();\n            default:\n                return <Redirect to={`/settings/settings`} />;\n        }\n    }\n    renderAbout() {\n        const { bridgeInfo } = this.props;\n        const isZigbee2mqttDevVersion = bridgeInfo.version?.match(/^\\d+\\.\\d+\\.\\d+$/) === null;\n        const zigbee2mqttVersion = isZigbee2mqttDevVersion ?\n            bridgeInfo.version :\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/Koenkk/zigbee2mqtt/releases/tag/${bridgeInfo.version}`}>{bridgeInfo.version}</a>;\n        const zigbee2mqttCommit = bridgeInfo.commit ?\n            <>commit: <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/Koenkk/zigbee2mqtt/commit/${bridgeInfo.commit}`}>{bridgeInfo.commit}</a></> :\n            null;\n        const v = FRONTEND_VERSION;\n        return <>\n            <dl className=\"row\">\n                <dt className=\"col-sm-3\">zigbee2mqtt version</dt>\n                <dd className=\"col-sm-9\">{zigbee2mqttVersion} {zigbee2mqttCommit}</dd>\n            </dl>\n\n            <dl className=\"row\">\n                <dt className=\"col-sm-3\">coordinator type</dt>\n                <dd className=\"col-sm-9\">{bridgeInfo.coordinator?.type ?? 'Unknown'}</dd>\n            </dl>\n            <dl className=\"row\">\n                <dt className=\"col-sm-3\">coordinator revision</dt>\n                <dd className=\"col-sm-9\">{bridgeInfo.coordinator?.meta?.revision ?? 'Unknown'}</dd>\n            </dl>\n\n            <dl className=\"row\">\n                <dt className=\"col-sm-3\">frontend version</dt>\n                <dd className=\"col-sm-9\">{v}</dd>\n            </dl>\n        </>\n    }\n    renderBridgeInfo() {\n        const { bridgeInfo } = this.props;\n        return <pre>{JSON.stringify(bridgeInfo, null, 4)}</pre>\n    }\n    renderLegacyApiSettings() {\n        const { resetZnp } = this.props;\n        return [\n            <div key={\"znp-rest\"} className=\"row\">\n                <div className=\"col\">\n                    <Button<void> className=\"btn btn-danger\" promt onClick={() => resetZnp()}>Reset coordinator</Button>\n                </div>\n            </div>\n        ];\n    }\n    renderSettings() {\n        const { bridgeInfo, exportState } = this.props;\n        return <><div className=\"mt-2\">\n            {\n                !isEmpty(bridgeInfo) && settings.map(setting => (\n                    <div key={setting.key} className=\"row\">\n                        <div className=\"col\">\n                            <label htmlFor={setting.key}>{setting.title}</label>\n                            <UniversalEditor\n                                disabled={get(bridgeInfo, setting.path) === undefined}\n                                value={get(bridgeInfo, setting.path) as string | ReadonlyArray<string> | number}\n                                values={setting.values}\n                                onChange={(value) => this.updateConfig(setting.key, value)}\n                            />\n                            <div className=\"form-text\">{setting.description}</div>\n                        </div>\n                    </div>\n                ))\n            }\n            {\n                bridgeInfo.config?.advanced.legacy_api !== false ? this.renderLegacyApiSettings() : null\n            }\n        </div>\n            <Button<void> className=\"mt-2 btn btn-primary\" onClick={exportState}>Download state</Button>\n        </>\n\n\n    }\n}\nconst SettingsPageWithRouter = withRouter(SettingsPage);\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedSettingsPage = connect<{}, {}, GlobalState, BridgeApi>(mappedProps, actions)(SettingsPageWithRouter);\nexport default ConnectedSettingsPage;","// extracted by mini-css-extract-plugin\nexport default {\"scrollable-menu\":\"_36Sntvyj-B3gg7Xj6xLUaY\"};","import React, { FunctionComponent, useRef, useState } from 'react';\n\nimport { GlobalState } from '../../store';\nimport actions, { BridgeApi } from '../../actions';\nimport { connect } from 'unistore/react';\nimport Button from '../button';\nimport cx from \"classnames\";\nimport { Link, NavLink } from 'react-router-dom';\nimport useComponentVisible from '../../hooks/useComponentVisible';\nimport { Device } from '../../types';\nimport style from \"./style.css\";\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\n\nconst urls = [\n    {\n        href: '/',\n        title: 'Devices',\n        exact: true\n    },\n    {\n        href: '/map',\n        title: 'Map'\n    },\n    {\n        href: '/settings',\n        title: 'Settings'\n    },\n    {\n        href: '/groups',\n        title: 'Groups'\n    },\n    {\n        href: '/touchlink',\n        title: 'Touchlink'\n    },\n    {\n        href: '/logs',\n        title: 'Logs'\n    }\n];\ntype StartStopJoinButtonProps = {\n    devices: Map<string, Device>;\n}\nconst StartStopJoinButton: FunctionComponent<StartStopJoinButtonProps & Pick<BridgeApi, 'setPermitJoin'> & Pick<GlobalState, 'bridgeInfo'>> = ({ devices, setPermitJoin, bridgeInfo }) => {\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n    const [selectedRouter, setSelectedRouter] = useState<Device>(null);\n    const routers = [];\n    const selectAndHide = (device: Device) => { setSelectedRouter(device); setIsComponentVisible(false) }\n    devices.forEach((device) => {\n        if (device.type == \"Router\") {\n            routers.push(<li key={device.friendly_name}>\n                <Button<Device> item={device} className=\"dropdown-item\" onClick={selectAndHide}>{device.friendly_name}</Button>\n            </li>)\n        }\n    });\n    const onBtnClick = () => {\n        setPermitJoin(!bridgeInfo.permit_join, selectedRouter);\n    }\n    return (\n        <div className=\"input-group w-auto\">\n            <button onClick={onBtnClick} type=\"button\" className=\"btn btn-outline-secondary\">{bridgeInfo.permit_join ? \"Disable join\" : \"Permit join\"} ({selectedRouter?.friendly_name ?? \"All\"})</button>\n            {routers.length ? (<><Button<boolean> type=\"button\" onClick={setIsComponentVisible} item={!isComponentVisible} className=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                <span className=\"visually-hidden\">Toggle Dropdown</span>\n            </Button>\n                <ul ref={ref} className={cx('dropdown-menu', style['scrollable-menu'], { show: isComponentVisible })}>\n                    <li key='all'>\n                        <Button<Device> item={null} className=\"dropdown-item\" onClick={selectAndHide}>All</Button>\n                    </li>\n                    {routers}\n                </ul></>) : null}\n\n        </div>\n    );\n}\n\ntype PropsFromStore = {\n    devices: Map<string, Device>;\n    bridgeInfo: object;\n}\nconst NavBar: FunctionComponent<PropsFromStore & BridgeApi & Pick<GlobalState, 'bridgeInfo'>> = ({ devices, setPermitJoin, bridgeInfo }) => {\n    const ref = useRef<HTMLDivElement>();\n    const [navbarIsVisible, setnavbarIsVisible] = useState<boolean>(false);\n    useOnClickOutside(ref, () => {\n        setnavbarIsVisible(false);\n    });\n    return (<nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n        <div ref={ref} className=\"container-fluid\">\n            <Link onClick={() => setnavbarIsVisible(false)} className=\"navbar-brand\" to=\"/\">Zigbee2MQTT</Link>\n            <button onClick={() => { console.log('click'); setnavbarIsVisible(!navbarIsVisible) }} className=\"navbar-toggler\" type=\"button\">\n                <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className={cx(\"navbar-collapse collapse\", { show: navbarIsVisible })}>\n                <ul className=\"navbar-nav mb-2 mb-md-0\">\n                    {\n                        urls.map(url =>\n                            <li key={url.href} className=\"nav-item\">\n                                <NavLink onClick={() => setnavbarIsVisible(false)} exact={url.exact} className=\"nav-link\" to={url.href} activeClassName=\"active\">\n                                    {url.title}\n                                </NavLink>\n                            </li>)\n                    }\n                </ul>\n                <StartStopJoinButton\n                    devices={devices}\n                    setPermitJoin={setPermitJoin}\n                    bridgeInfo={bridgeInfo}\n                />\n            </div>\n        </div>\n    </nav>)\n}\nconst mappedProps = [\"bridgeInfo\", \"devices\"];\nconst ConnectedNavBar = connect<{}, {}, PropsFromStore, BridgeApi>(mappedProps, actions)(NavBar);\nexport default ConnectedNavBar;\n\n","import { useState, useEffect, useRef } from 'react';\n\nexport default function useComponentVisible(initialIsVisible: boolean) {\n    const [isComponentVisible, setIsComponentVisible] = useState(\n        initialIsVisible\n    );\n    const ref = useRef(null);\n\n    const handleHideDropdown = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            setIsComponentVisible(false);\n        }\n    };\n\n    const handleClickOutside = (event: MouseEvent) => {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setIsComponentVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleHideDropdown, true);\n        document.addEventListener(\"click\", handleClickOutside, true);\n        return () => {\n            document.removeEventListener(\"keydown\", handleHideDropdown, true);\n            document.removeEventListener(\"click\", handleClickOutside, true);\n        };\n    });\n\n    return { ref, isComponentVisible, setIsComponentVisible };\n}","import {  useEffect } from 'react';\n\nexport function useOnClickOutside(ref, handler) {\n  useEffect(\n    () => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"device-pic\":\"_2p1XqBiO9XLlCB-lT60VCH\",\"device-image\":\"_3Z1i8qUrV2sErNF0__pVZt\"};","import React, { ChangeEvent, useState } from \"react\";\nimport { useInputChange } from \"../../hooks/useInputChange\";\nimport Button from \"../button\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\n\ninterface RenameGroupFormProps {\n  name: string;\n  onRename(oldName: string, newName: string): void;\n}\n\nexport function RenameGroupForm(props: RenameGroupFormProps) {\n  const { name, onRename } = props;\n  const [modalIsOpened, setModalIsOpened] = useState(false);\n\n  const [renameGroupForm, handleInputChange] = useInputChange({ friendlyName: name });\n\n  return (\n    <>\n      <Modal isOpen={modalIsOpened}>\n        <ModalHeader>\n          <h3>Rename group</h3>\n          <small>{name}</small>\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Friendly name</label>\n            <input name=\"friendlyName\" onChange={handleInputChange as (event: ChangeEvent<HTMLInputElement>) => void} type=\"text\" className=\"form-control\" value={renameGroupForm['friendlyName']} />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setModalIsOpened(false)}>Close</button>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => { onRename(name, renameGroupForm['friendlyName']); setModalIsOpened(false) }}>Save changes</button>\n        </ModalFooter>\n      </Modal>\n      <Button<void> className=\"btn btn-secondary\" onClick={() => setModalIsOpened(true)} title=\"Rename group\"><i className=\"fa fa-edit\" /></Button>\n    </>\n  )\n}\n\n","import { ChangeEvent, useState } from 'react'\ntype KVP = { [key: string]: string };\nexport const useInputChange = (initialState: KVP) => {\n  const [input, setInput] = useState<KVP>(initialState);\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => setInput({\n    ...input,\n    [e.currentTarget.name]: e.currentTarget.value\n  })\n\n  return [input, handleInputChange]\n}","import React, { ChangeEvent, Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions, { GroupsApi } from \"../../actions\";\nimport { GlobalState, Group, GroupAddress } from \"../../store\";\nimport Button from \"../button\";\nimport { Device, Endpoint } from \"../../types\";\nimport { genDeviceDetailsLink, getEndpoints } from \"../../utils\";\nimport style from './style.css';\nimport cx from 'classnames';\nimport EndpointPicker from \"../endpoint-picker\";\nimport DevicePicker from \"../device-picker\";\nimport { Link } from \"react-router-dom\";\nimport DeviceImage from \"../device-image\";\nimport { RenameGroupForm } from \"./RenameForm\";\n\n\ninterface GroupsPageState {\n    newGroupName: string;\n    newGroupId?: number;\n}\n\n\ninterface AddDeviceToGroupProps {\n    devices: Map<string, Device>;\n    group: Group;\n    addDeviceToGroup(deviceName: string, groupName: string): void;\n}\n\ninterface AddDeviceToGroupState {\n    device: string;\n    endpoint: Endpoint;\n}\n\ninterface DeviceGroupRowProps {\n    rowNumber: number;\n    groupAddress: GroupAddress;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroupRow extends Component<DeviceGroupRowProps, {}> {\n    getDeviceObj(): Device | undefined {\n        const { groupAddress, devices } = this.props;\n        return devices.get(groupAddress.ieee_address);\n    }\n    render() {\n        const { rowNumber, groupAddress, removeDeviceFromGroup } = this.props;\n        const device = this.getDeviceObj();\n\n        return <tr>\n            <th scope=\"row\">{rowNumber + 1}</th>\n            <td className={style[\"device-pic\"]}>\n                <DeviceImage className={cx(style[\"device-image\"])} device={device} />\n            </td>\n            <td><Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link></td>\n            <td>{groupAddress.ieee_address}</td>\n            <td>{groupAddress.endpoint}</td>\n            <td>{device && <Button<string> promt item={device.friendly_name} onClick={removeDeviceFromGroup} className=\"btn btn-danger btn-sm float-right\"><i className=\"fa fa-trash\" /></Button>}</td>\n        </tr>;\n    }\n}\ninterface DeviceGroupPropts {\n    group: Group;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(groupFriendlyName: string, deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroup extends Component<DeviceGroupPropts, {}> {\n    onRemove = (deviceFriendlyName: string): void => {\n        const { group, removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(group.friendly_name, deviceFriendlyName);\n    }\n    render() {\n        const { group, devices } = this.props;\n        return <table className=\"table table-sm\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Pic</th>\n                    <th scope=\"col\">friendlyName</th>\n                    <th scope=\"col\">ieee_addr</th>\n                    <th scope=\"col\">Endpoint</th>\n                    <th scope=\"col\" className=\"text-right\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                {group.members.map((groupMemebershipInfo, idx) => <DeviceGroupRow key={groupMemebershipInfo.ieee_address} removeDeviceFromGroup={this.onRemove} rowNumber={idx} devices={devices} groupAddress={groupMemebershipInfo} />)}\n            </tbody>\n        </table>;\n    }\n}\n\nclass AddDeviceToGroup extends Component<AddDeviceToGroupProps, AddDeviceToGroupState> {\n    state = {\n        device: undefined,\n        endpoint: undefined\n    };\n\n\n    onSubmit = (): void => {\n        const { addDeviceToGroup, group } = this.props;\n        const { device, endpoint } = this.state;\n        addDeviceToGroup(endpoint ? `${device}/${endpoint}` : device, group.friendly_name);\n\n    }\n    onDeviceSelect = (device: Device): void => {\n        const endpoints = getEndpoints(device);\n        this.setState({ device: device.ieee_address, endpoint: endpoints[0] });\n    }\n\n    onEpChange = (endpoint: Endpoint): void => {\n        this.setState({ endpoint });\n    }\n    render() {\n        const { device, endpoint } = this.state;\n        const { devices } = this.props;\n        const deviceObj = devices.get(device);\n\n        const endpoints = getEndpoints(deviceObj);\n\n        return <form className=\"row\">\n\n            <div className=\"col\">\n                <div className=\"input-group mb-3\">\n                    <DevicePicker type=\"device\" value={device} devices={devices} onChange={this.onDeviceSelect} />\n                    <EndpointPicker values={endpoints} value={endpoint} onChange={this.onEpChange} />\n                </div>\n\n            </div>\n\n            <div className=\"col\">\n                <Button<void> type=\"button\" onClick={this.onSubmit} className=\"btn btn-primary\">Add to group</Button>\n            </div>\n\n\n        </form>\n    }\n}\n\nexport class GroupsPage extends Component<GroupsApi & GlobalState, GroupsPageState> {\n    state: GroupsPageState = {\n        newGroupName: '',\n        newGroupId: undefined\n    }\n\n\n    changeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value } as unknown as GroupsPageState);\n    }\n\n    onGroupCreateSubmit = (): void => {\n        const { newGroupName, newGroupId } = this.state;\n        const { createGroup } = this.props;\n        createGroup(newGroupName, newGroupId);\n    }\n\n    renderGroupCreationForm() {\n        const { newGroupName, newGroupId } = this.state;\n        return (\n            <form className=\"row mt-2\">\n                <div className=\"input-group  mb-2\">\n                    <label htmlFor=\"newGroupName\" className=\"sr-only\">Group name</label>\n                    <input onChange={this.changeHandler} value={newGroupName} required type=\"text\" name=\"newGroupName\" className=\"form-control\" id=\"newGroupName\" placeholder=\"new group name\" />\n\n                    <label htmlFor=\"newGroupName\" className=\"sr-only\">Group id</label>\n                    <input onChange={this.changeHandler} value={newGroupId === undefined ? '' : newGroupId} type=\"number\" name=\"newGroupId\" className=\"form-control\" id=\"newGroupId\" placeholder=\"enter group id if necessary\" />\n\n                    <Button<void> onClick={this.onGroupCreateSubmit} className=\"btn btn-primary form-control\">Create group</Button>\n                </div>\n\n            </form>\n        )\n    }\n    removeGroup = (friendlyName: string): void => {\n        const { removeGroup } = this.props;\n        removeGroup(friendlyName);\n    }\n    removeDeviceFromGroup = (groupFriendlyName: string, deviceFriendlyName: string): void => {\n        const { removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(deviceFriendlyName, groupFriendlyName);\n    }\n    renameGroup = (oldName: string, newName: string) => {\n        const { renameGroup } = this.props;\n        renameGroup(oldName, newName);\n    }\n    renderGroups() {\n        const { groups, devices, addDeviceToGroup } = this.props;\n        return (\n            <div id=\"accordion\">\n                {\n                    groups.map(group => (\n                        <div key={group.id} className=\"card mb-1\">\n                            <div className=\"card-header\" id={`heading${group.id}`}>\n                                <h5 className=\"mb-0\">\n                                    <button className=\"btn btn-link btn-sm\">\n                                        {group.friendly_name} (#{group.id})\n                                    </button>\n                                    <div className=\"btn-group float-right btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n\n                                        <Button<string> promt title=\"Remove group\" item={group.friendly_name} onClick={this.removeGroup} className=\"btn btn-danger\"><i className=\"fa fa-trash\" /></Button>\n                                        <RenameGroupForm name={group.friendly_name} onRename={this.renameGroup} />\n                                    </div>\n                                </h5>\n                            </div>\n\n                            <div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        <DeviceGroup group={group} devices={devices} removeDeviceFromGroup={this.removeDeviceFromGroup} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-footer\">\n                                <AddDeviceToGroup addDeviceToGroup={addDeviceToGroup} devices={devices} group={group} />\n                            </div>\n                        </div>\n                    )).reverse()\n                }\n\n            </div>\n        )\n    }\n\n    render() {\n        return <div className=\"container\">\n            {this.renderGroupCreationForm()}\n            {this.renderGroups()}\n        </div>\n\n    }\n}\n\nconst mappedProps = [\"groups\", \"devices\"];\nconst ConnectedGroupsPage = connect<{}, {}, GlobalState, GroupsApi>(mappedProps, actions)(GroupsPage);\nexport default ConnectedGroupsPage;","// extracted by mini-css-extract-plugin\nexport default {\"action-column\":\"_1AmFhCTIk_ifBlEJGnLJuK\",\"device-pic\":\"_1KD_wxLENsmTnroATY4BrA\",\"device-image\":\"_1kMXLbhsSotmS-uYUbIFl0\"};","import React, { MouseEvent, ThHTMLAttributes} from \"react\";\n\n\n\nimport { SortDirection } from \"../../types\";\nimport isEqual from \"lodash/isEqual\";\n\n\ninterface ActionTHProps<T> {\n    column: T | T[];\n    current: T | T[];\n    currentDirection: SortDirection;\n    onClick?(arg1: T | T[]): void;\n}\n\nexport default class ActionTH<T> extends React.Component<ActionTHProps<T> & Omit<ThHTMLAttributes<HTMLTableHeaderCellElement>, 'onClick'>, {}> {\n    onClick = (event: MouseEvent): void => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { column, onClick } = this.props;\n        onClick && onClick(column);\n    };\n\n    renderArrow () {\n        const { currentDirection, current, column } = this.props;\n        if (isEqual(current, column)) {\n            if (currentDirection == \"asc\") {\n                return <i className={`fa fa-sort-amount-down-alt`} />;\n            }\n            return <i className={`fa fa-sort-amount-down`} />;\n        }\n        return <i className={`fa fa-sort-amount-down invisible`} />;\n    }\n\n    render () {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, onClick, current, column, currentDirection, ...rest } = this.props;\n        return (<th {...rest}>\n            <span className=\"btn btn-link\" onClick={this.onClick}>{children}</span>\n            {this.renderArrow()}\n        </th>);\n    }\n}\n","import style from \"./style.css\";\nimport React, { Component, Fragment } from \"react\";\nimport orderBy from \"lodash/orderBy\";\nimport DeviceControlGroup from \"../device-control\";\nimport { Device, SortDirection, DeviceState } from \"../../types\";\nimport { genDeviceDetailsLink, lastSeen, toHex } from \"../../utils\";\n\nimport { Notyf } from \"notyf\";\nimport PowerSource from \"../power-source\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions from \"../../actions\";\nimport ActionTH from \"./ActionTH\";\nimport isEqual from \"lodash/isEqual\";\nimport { Link } from \"react-router-dom\";\nimport DeviceImage from \"../device-image\";\nimport { ModelLink, VendorLink } from \"../vendor-links/verndor-links\";\nimport Spinner from \"../spinner\";\nimport { DisplayValue } from \"../DisplayValue\";\n\n\ntype SortColumn =\n    | \"device.network_address\"\n    | \"device.friendly_name\"\n    | \"device.ieee_address\"\n    | \"device.definition.vendor\"\n    | \"device.definition.model\"\n    | \"state.linkquality\"\n    | \"state.last_seen\"\n    | \"state.elapsed\"\n    | \"state.battery\";\n\n\ninterface ZigbeeTableState {\n    sortDirection: SortDirection;\n    sortColumn: SortColumn | SortColumn[];\n    currentTime: number;\n    sortedTableData: ZigbeeTableData[];\n    error?: object;\n}\n\n\ninterface ZigbeeTableData {\n    device: Device;\n    state: DeviceState;\n}\n\n\n\nconst storeKey = \"ZigbeeTableState\";\nconst longLoadingTimeout = 15 * 1000;\n\nexport class ZigbeeTable extends Component<GlobalState, ZigbeeTableState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortDirection: \"desc\",\n            sortColumn: \"device.network_address\",\n            currentTime: Date.now(),\n            sortedTableData: []\n        };\n    }\n\n    restoreState(): void {\n        const { sortColumn, sortDirection } = this.state;\n\n        const storedState = localStorage.getItem(storeKey);\n        if (storedState) {\n            try {\n                const restored: Pick<ZigbeeTableState, \"sortDirection\" | \"sortColumn\"> = JSON.parse(storedState);\n                this.setState(restored);\n            } catch (e) {\n                new Notyf().error(e.toString());\n            }\n        } else {\n            this.onSortChange(sortColumn, sortDirection);\n        }\n    }\n\n    saveState = (): void => {\n        const { sortDirection, sortColumn } = this.state;\n        const storeData = {\n            sortDirection,\n            sortColumn\n        };\n        //in private mode localstorage access can throw exceptions\n        try {\n            localStorage.setItem(storeKey, JSON.stringify(storeData));\n        } catch (e) {\n            new Notyf().error(e.toString());\n        }\n    };\n    handleLongLoading = () => {\n        const { devices } = this.props;\n\n        if (devices.size == 0) {\n            const error = <Fragment>\n                <strong>Loading devices takes too long time.</strong>\n                <div>Consider reading <a href=\"https://www.zigbee2mqtt.io/information/frontend.html\">documentation</a></div>\n            </Fragment>;\n            this.setState({ error });\n        }\n    }\n    componentDidMount(): void {\n        setTimeout(this.handleLongLoading, longLoadingTimeout);\n        this.restoreState();\n    }\n\n    static getDerivedStateFromProps(props: Readonly<GlobalState>, state: ZigbeeTableState): Partial<ZigbeeTableState> {\n        const { sortColumn, sortDirection } = state;\n        const { devices, deviceStates } = props;\n        const tableData: ZigbeeTableData[] = [];\n        devices.forEach((device) => {\n            if (device.type !== \"Coordinator\") {\n                tableData.push({\n                    device,\n                    state: deviceStates.get(device.friendly_name)\n\n                });\n            }\n        });\n        return { sortedTableData: orderBy<ZigbeeTableData>(tableData, sortColumn, [sortDirection]) };\n    }\n\n\n    onSortChange = (column: SortColumn | SortColumn[], sortDir: SortDirection = undefined): void => {\n        const { sortColumn } = this.state;\n        let { sortDirection } = this.state;\n\n        if (isEqual(sortColumn, column)) {\n            if (sortDir) {\n                sortDirection = sortDir;\n            } else if (sortDirection == \"asc\") {\n                sortDirection = \"desc\";\n            } else {\n                sortDirection = \"asc\";\n            }\n        }\n\n        this.setState({ sortColumn: column, sortDirection }, this.saveState);\n    };\n\n    renderError() {\n        const { error } = this.state;\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <div className=\"d-flex align-items-center\">\n                {error}\n            </div>\n        </div>);\n    }\n\n    render() {\n        const { error } = this.state;\n        const { devices } = this.props;\n        if (devices.size) {\n            return this.renderDevicesTable();\n        }\n        if (error) {\n            return this.renderError();\n        }\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <Spinner />\n        </div>);\n    }\n    lastSeenIsAvaliable(): boolean {\n        const { bridgeInfo } = this.props;\n        return bridgeInfo?.config?.advanced?.elapsed || bridgeInfo?.config?.advanced?.last_seen != \"disable\";\n    }\n\n    renderDevicesTableHeader() {\n        const { sortColumn, sortDirection } = this.state;\n        const { onSortChange } = this;\n        return (\n            <thead>\n                <tr className=\"text-nowrap\">\n                    <th>#</th>\n                    <th>Pic</th>\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.friendly_name\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>Friendly name</ActionTH>\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.ieee_address\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>IEEE address</ActionTH>\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.definition.vendor\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange} title=\"definition.vendor\">Manufacturer</ActionTH>\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.definition.model\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>Model</ActionTH>\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.linkquality\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>LQI</ActionTH>\n                    {this.lastSeenIsAvaliable() && <ActionTH<SortColumn> className={style[\"action-column\"]} column={[\"state.last_seen\", \"state.elapsed\"]}\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>Last seen</ActionTH>}\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.battery\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>Power</ActionTH>\n                    <th>&nbsp;</th>\n                </tr>\n            </thead>\n        )\n    }\n\n    renderDevicesTable() {\n        const { sortedTableData } = this.state;\n        return (\n            <div className=\"row no-gutters table-responsive\">\n                <table className=\"table align-middle col-12\">\n                    {this.renderDevicesTableHeader()}\n                    <tbody>\n                        {sortedTableData.map(({ device, state }, id) =>\n                            <tr key={device.friendly_name} title={state?.update?.state == \"available\" ? 'Avaliable OTA update' : device.definition?.description}>\n                                <td className=\"font-weight-bold\">{id + 1}</td>\n                                <td className={style[\"device-pic\"]}>\n                                    <DeviceImage className={style[\"device-image\"]} device={device} deviceStatus={state} />\n                                </td>\n                                <td>\n                                    <Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link>\n                                </td>\n                                <td>{device.ieee_address} ({toHex(device.network_address, 4)})</td>\n                                <td className=\"text-truncate text-nowrap position-relative\"><VendorLink device={device} /></td>\n                                <td title={device?.definition?.description}><ModelLink device={device} /></td>\n                                <td><DisplayValue value={state?.linkquality}/></td>\n                                {this.lastSeenIsAvaliable() && <td>{lastSeen(state?.last_seen, state?.elapsed)}</td>}\n                                <td className=\"text-left\">\n                                    <PowerSource source={device.power_source} battery={state?.battery} batteryLow={state?.battery_low} />\n                                </td>\n                                <td>\n                                    <DeviceControlGroup device={device} state={state} />\n                                </td>\n                            </tr>)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"devices\", \"deviceStates\", \"bridgeInfo\"];\nconst ConnectedZigbeePage = connect<{}, ZigbeeTableState, GlobalState, {}>(mappedProps, actions)(ZigbeeTable);\nexport default ConnectedZigbeePage;\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions\";\nimport { GlobalState } from \"../../store\";\nimport cx from \"classnames\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\n\n\n\ntype LogsPageState = {\n    search: string;\n    logLevel: string;\n}\nconst ALL = 'ALL';\n// eslint-disable-next-line react/prefer-stateless-function\n\nconst Highlighted = ({ text = '', highlight = '' }) => {\n    if (!highlight.trim()) {\n        return <span>{text}</span>\n    }\n    const regex = new RegExp(`(${escapeRegExp(highlight)})`, 'gi')\n    const parts = text.split(regex)\n    return (\n        <span>\n            {parts.filter(part => part).map((part, i) => (\n                regex.test(part) ? <mark key={i}>{part}</mark> : <span key={i}>{part}</span>\n            ))}\n        </span>\n    )\n}\nexport class LogsPage extends Component<GlobalState, LogsPageState> {\n    state = { search: '', logLevel: ALL }\n    renderSearch() {\n        const { search } = this.state;\n        const { logs } = this.props;\n        const logLevels = Array.from(new Set(logs.map(l => l.level))) as string[];\n        logLevels.unshift(ALL);\n        return <form className=\"row row-cols-lg-auto g-3 align-items-center\">\n            <div className=\"col-12\">\n                <select className=\"form-select\" onChange={e => this.setState({ logLevel: e.target.value })}>\n                    {logLevels.map(level => <option key={level} value={level}>{level.toUpperCase()}</option>)}\n                </select>\n            </div>\n            <div className=\"col-12\">\n                <input className=\"form-control col-10\" placeholder=\"Enter search criteria\" value={search} onChange={(e) => this.setState({ search: e.target.value })} type=\"text\"></input>\n            </div>\n        </form>;\n    }\n    render() {\n        let { logs } = this.props;\n        const { search, logLevel } = this.state;\n\n        const _search = new RegExp(search, 'gi');\n        logs = logs.filter(l => {\n            return (logLevel === ALL || l.level === logLevel) && (!search || _search.test(l.message));\n        });\n\n        return <div className=\"container-fluid h-100 overflow-auto pt-2\">\n            {this.renderSearch()}\n            {\n                logs.map((l, idx) => <div key={idx}>\n                    <span className={cx({\n                        'text-danger': l.level === 'error',\n                        'text-warning': l.level === 'warning',\n                        'text-info': l.level === 'info',\n                        'd-none': logLevel !== ALL\n                    })}>{l.level.toUpperCase()}:&nbsp;</span><code>\n                        <Highlighted text={l.message} highlight={search}></Highlighted>\n                    </code></div>)\n            }</div>\n    }\n}\n\nconst mappedProps = [\"logs\"];\n\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(LogsPage);","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Button from \"./button\";\nimport store from \"../store\";\nimport { download } from \"../utils\";\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\ntype ErrorBoundaryProps = RouteComponentProps<{}>;\n\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    state: Readonly<ErrorBoundaryState> = {};\n\n    static getDerivedStateFromError(error: Error) {\n        return { hasError: true, error };\n    }\n\n    donwloadState = () => {\n        download(store.getState(), 'state.json');\n    }\n\n    render() {\n        const { error } = this.state;\n        if (error) {\n            return <div className=\"container\">\n                <h1 className=\"text-danger\">Take screenshot of this page and attach it to github issue, additionally <Button<void> className=\"mt-2 btn btn-link\" onClick={() => this.donwloadState()}>download state</Button> and attach to the issue</h1>\n                <h2>{error.name}</h2>\n                <h3>{error.message}</h3>\n                <pre>{error.stack}</pre>\n            </div>\n\n        }\n        return this.props.children;\n    }\n\n    componentDidUpdate(prevProps: ErrorBoundaryProps) {\n        const { location: { pathname } } = this.props;\n        const { location: { pathname: prevPathname } } = prevProps;\n        if (prevPathname !== pathname) {\n            this.setState({ error: null });\n        }\n    }\n}\n\n","import \"./main.css\";\n\nimport \"notyf/notyf.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\nimport React, { Component, FunctionComponent } from 'react';\n\nimport ConnectedMap from \"./components/map\";\n\nimport {\n    Switch,\n    Route,\n    HashRouter\n} from \"react-router-dom\";\n\nimport ConnectedDevicePage from \"./components/device-page\";\nimport TouchlinkPage from \"./components/touchlink-page\";\n\nimport store from \"./store\";\nimport { Provider } from \"unistore/react\";\nimport api from './api';\n\n\nimport ConnectedSettingsPage from \"./components/settings\";\nimport NavBar from \"./components/navbar\";\nimport ConnectedGroupsPage from \"./components/groups\";\nimport ConnectedZigbeePage from \"./components/zigbee\";\nimport LogsPage from \"./components/logs-page\";\nimport ReactDOM from \"react-dom\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\n\nconst ConnectedDevicePageWrap: FunctionComponent<{ dev: string }> = ({ dev }) => (\n    <ConnectedDevicePageWrap dev={dev} />\n);\n\n\napi.connect();\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Main extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <HashRouter>\n                    <NavBar />\n                    <Switch>\n                        <Route path=\"/map\" render={(props) => <ErrorBoundary {...props}><ConnectedMap /></ErrorBoundary>} />\n                        <Route path=\"/device/:dev/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedDevicePage /></ErrorBoundary>} />\n                        <Route path=\"/settings/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedSettingsPage /></ErrorBoundary>} />\n                        <Route path=\"/groups\" render={(props) => <ErrorBoundary {...props}><ConnectedGroupsPage /></ErrorBoundary>} />\n                        <Route path=\"/logs\" render={(props) => <ErrorBoundary {...props}><LogsPage /></ErrorBoundary>} />\n                        <Route path=\"/touchlink\" render={(props) => <ErrorBoundary {...props}><TouchlinkPage /></ErrorBoundary>} />\n                        <Route path=\"/\" render={(props) => <ErrorBoundary {...props}><ConnectedZigbeePage /></ErrorBoundary>} />\n                    </Switch>\n                </HashRouter>\n            </Provider >\n\n        );\n    }\n}\n\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}