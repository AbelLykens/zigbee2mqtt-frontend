{"version":3,"sources":["webpack://zigbee2mqtt-frontend/./src/components/map/map.css?4978","webpack://zigbee2mqtt-frontend/./src/components/map/links.tsx","webpack://zigbee2mqtt-frontend/./src/utils.ts","webpack://zigbee2mqtt-frontend/./src/components/device-image/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-image/style.css?fbce","webpack://zigbee2mqtt-frontend/./src/components/map/nodes.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/types.ts","webpack://zigbee2mqtt-frontend/./src/store.ts","webpack://zigbee2mqtt-frontend/./src/api.ts","webpack://zigbee2mqtt-frontend/./src/actions/BridgeApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/DeviceApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/GroupsApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/StateApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/OtaApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/BindApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/TouchlinkApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/ExtensionApi.ts","webpack://zigbee2mqtt-frontend/./src/actions/actions.ts","webpack://zigbee2mqtt-frontend/./src/components/button/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/consts.ts","webpack://zigbee2mqtt-frontend/./src/components/spinner.tsx","webpack://zigbee2mqtt-frontend/./src/components/map/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/modal/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-control/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/vendor-links/verndor-links.tsx","webpack://zigbee2mqtt-frontend/./src/components/power-source/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/info.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/endpoint-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/cluster-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/bind-row.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/bind.tsx","webpack://zigbee2mqtt-frontend/./src/components/attribute-picker/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/reporting-row.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/reporting.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/states.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/type-guards.ts","webpack://zigbee2mqtt-frontend/./src/types.ts","webpack://zigbee2mqtt-frontend/./src/components/display-value/DisplayValue.tsx","webpack://zigbee2mqtt-frontend/./src/components/toggle/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/base.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/binary/binary.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/climate/climate.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/cover/cover.tsx","webpack://zigbee2mqtt-frontend/./src/components/color-editor/color-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/color/color.tsx","webpack://zigbee2mqtt-frontend/./src/components/enum-editor/enum-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/enum/enum.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/light/light.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/lock/lock.tsx","webpack://zigbee2mqtt-frontend/./src/components/range-editor/range-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/numeric/numeric.tsx","webpack://zigbee2mqtt-frontend/./src/components/textual-editor/textual-editor.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/textual/textual.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/switch/switch.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/Feature.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/composite.tsx","webpack://zigbee2mqtt-frontend/./src/components/features/composite/FeatureWrapper.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/exposes.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/clusters.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/settings.tsx","webpack://zigbee2mqtt-frontend/./src/components/device-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/touchlink-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/settings/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/theme-switcher.tsx","webpack://zigbee2mqtt-frontend/./src/components/navbar/index.tsx","webpack://zigbee2mqtt-frontend/./src/hooks/useComponentVisible.tsx","webpack://zigbee2mqtt-frontend/./src/components/navbar/style.css?01da","webpack://zigbee2mqtt-frontend/./src/hooks/useOnClickOutside.tsx","webpack://zigbee2mqtt-frontend/./src/components/groups/RenameForm.tsx","webpack://zigbee2mqtt-frontend/./src/hooks/useInputChange.ts","webpack://zigbee2mqtt-frontend/./src/components/groups/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/groups/style.css?e996","webpack://zigbee2mqtt-frontend/./src/components/zigbee/ActionTH.tsx","webpack://zigbee2mqtt-frontend/./src/components/zigbee/style.css?5857","webpack://zigbee2mqtt-frontend/./src/components/zigbee/TableHeader.tsx","webpack://zigbee2mqtt-frontend/./src/components/zigbee/TableRow.tsx","webpack://zigbee2mqtt-frontend/./src/components/zigbee/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/logs-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/ota-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/ErrorBoundary.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DeviceFooter.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardDevice.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardDevice.scss?8dc3","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/DashboardFeatureWrapper.tsx","webpack://zigbee2mqtt-frontend/./src/components/dashboard-page/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/extensions-editor/index.tsx","webpack://zigbee2mqtt-frontend/./src/components/state-notifier/StateNotifier.tsx","webpack://zigbee2mqtt-frontend/./src/index.tsx"],"names":["Link","props","linkType","id","rest","className","strokeWidth","fill","LinkLabel","link","linkqualities","join","links","ref","useRef","useLayoutEffect","current","selectAll","data","length","map","Fragment","key","sourceIeeeAddr","targetIeeeAddr","xlinkHref","genDeviceDetailsLink","deviceIdentifier","toHex","input","padding","repeat","toString","substr","toUpperCase","lastSeen","elapsed","diff","undefined","Date","now","parse","sanitizeGraph","inGraph","nodes","Map","forEach","node","ieeeAddr","sort","a","b","relationship","src","source","dst","target","linkId","repeatedLink","get","type","push","linkquality","relationships","set","console","warn","Array","from","values","randomString","len","Math","random","replacer","value","originalObject","this","dataType","entries","serialize","JSON","stringify","download","filename","blob","Blob","url","window","URL","createObjectURL","document","createElement","body","appendChild","href","setTimeout","click","revokeObjectURL","removeChild","getEndpoints","obj","endpoints","keys","members","g","endpoint","stringifyWithPreservingUndefinedAsNull","k","v","genericDeiviceImageFallback","device","AVALIABLE_GENERATORS","deviceName","definition","model","replace","modelName","model_id","useState","imageGenerators","setimageGenerators","deviceStatus","onImageError","newGenerators","shift","otaSpinner","update","state","title","interviewSpinner","interviewing","unseccessfullInterview","interview_completed","onError","getStarShape","innerCircleArms","innerRadius","outerRadius","angle","PI","totalArms","points","i","r","cos","sin","createRef","onMouseOut","onMouseOver","onDblClick","componentDidMount","render","deviceType","cn","onDoubleClick","cx","cy","stroke","width","height","x","y","friendlyName","Component","toggle","updateDrag","simulation","root","dragForce","drag","on","event","d","active","alphaTarget","restart","fx","fy","call","componentDidUpdate","Node","ZigbeeRelationship","str","theme","localStorage","getItem","_initState","initialState","TOKEN_LOCAL_STORAGE_ITEM_NAME","AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME","notyf","blacklistedMessages","showNotity","msg","message","level","status","isResponseWithStatus","error","success","requests","transactionNumber","send","topic","payload","debug","startsWith","transactionRndPreffix","promise","Promise","resolve","reject","socket","transaction","urlProvider","token","prompt","setItem","searchParams","append","procsessBridgeMessage","bridgeConfig","bridgeInfo","bridgeState","dev","Object","ieee_address","devices","groups","extensions","newLogs","slice","logs","every","val","test","response","networkGraphIsLoading","networkGraph","payloadData","touchlinkScanInProgress","touchlinkDevices","found","touchlinkIdentifyInProgress","touchlinkResetInProgress","resolvePromises","onClose","e","code","removeItem","location","reload","onMessage","deviceStates","newDeviceStates","connect","addEventListener","has","delete","apiUrl","host","pathname","Api","protocol","setPermitJoin","permit","friendly_name","updateBridgeConfig","options","restartBridge","renameDevice","to","homeassistantRename","removeDevice","force","block","configureDevice","name","setDeviceOptions","createGroup","group","removeGroup","addDeviceToGroup","removeDeviceFromGroup","renameGroup","oldName","newName","setStateValue","setDeviceState","getDeviceState","checkOTA","updateOTA","bindOp","operation","params","addBind","removeBind","touchlinkScan","touchlinkIdentify","touchlinkReset","updateExtensionCode","extension","newExtensions","filter","f","concat","saveExtensionCode","removeExtension","store","networkMapRequest","setState","routes","exportState","configureReport","config","setTheme","saveCurrentTheme","onClick","item","promt","confirmed","confirm","children","linkTypes","NeigbhorIsParent","NeigbhorIsAChild","NeigbhorIsASibling","NoneOfTheAbove","role","parentOrChild","linkStrregth","includes","distancesMap","BrokenLink","Router2Router","Coordinator2Router","Coordinator2EndDevice","EndDevice2Router","getDistance","ticked","transform","linkLabel","apply","x1","y1","x2","y2","attr","computeLink","applyX","applyY","processHighlights","selectedNode","linkedByIndex","Set","n","add","l","neighboring","computeOpacity","style","o","svgRef","visibleLinks","legendIsVisible","updateNodes","container","everything","extent","scaleExtent","zoomHandler","initPage","getBoundingClientRect","updateForces","onRequestClick","onLinkTypeFilterChange","stateVisibleLinks","checked","inValue","parseInt","distance","strength","renderMap","viewBox","renderMessage","renderMapControls","onChange","htmlFor","renderHelp","MapComponent","ModalHeader","ModalBody","ModalFooter","el","split","classList","componentWillUnmount","openModal","closeModal","remove","isOpen","prevProps","display","BodyEnd","isRenameModalOpened","isDeviceRemovalModalOpened","renameParams","isHassRename","removeParams","onRenameClick","onRemoveClick","toggleRenameModal","toggleDeviceRemovalModal","onHassEntityIdChange","onFriendlyNameChange","onDeviceRemovalParamChange","renderRenameButton","homeassistant","renderDeviceRemovalButton","checks","label","check","DeviceControlGroup","normalizeModel","re","RegExp","VendorLink","supported","encodeURIComponent","vendor","toLowerCase","rel","ModelLink","acnchor","battery","batteryLow","showLevel","batteryClass","markdownLinkRegex","displayProps","if","result","exec","description","content","supports","network_address","power_source","battery_low","prop","DeviceInfo","onSelect","find","hidden","devicesOptions","getDeviceDisplayName","groupOptions","disabled","hasOnlyOneEP","ep","unshift","PickerType","clusterDescriptions","genPowerCfg","genScenes","genOnOff","genLevelCtrl","lightingColorCtrl","closuresWindowCovering","genMultistateInput","genGroups","genOta","touchlink","genIdentify","msTemperatureMeasurement","msIlluminanceMeasurement","msRelativeHumidity","msPressureMeasurement","msSoilMoisture","isClusterGroup","clusters","pickerId","pickerType","MULTIPLE","renderMultiPicker","renderSinglePicker","cluster","stateRule","setSourceEp","sourceEp","setDestination","destination","setDestinationEp","destinationEp","setClusters","onBindOrUnBindClick","action","onUnBind","onBind","getBidningParams","getDerivedStateFromProps","targeDevice","isValidRule","valid","targetType","sourceEndpoints","rule","getTarget","destinationEndpoints","possibleClusters","destEndpoint","output","isNew","rule2key","bidingRules","bindings","targetId","convertBidningsIntoNiceStructure","renderBody","idx","Bind","attrs","clusterDefinition","attributes","getClusters","currentCluster","availableClusters","requiredRuleFileds","field","setCluster","setAttribute","attribute","changeHandler","applyRule","onApply","disableRule","maximum_report_interval","SINGLE","minimum_report_interval","required","placeholder","reportable_change","reportingRules","reportings","configured_reportings","reportingRule","Reporting","deviceState","States","isLightFeature","feature","isCompositeFeature","FeatureAccessMode","booleansMap","contact","occupancy","water_leak","tamper","_default","DisplayValue","mapValue","ControlButton","valueOn","valueOff","minimal","valueExists","showOnOffButtons","BaseViewer","property","unit","NoAccessError","access","ACCESS_WRITE","ACCESS_STATE","stepsConfiguration","position","tilt","toRGB","sourceFormat","X","Z","Y","hue","saturation","rgbToTargetFormat","targetFormat","hex","pridePallete","format","steps","currentColor","setCurrentColor","useEffect","step","backgroundColor","minWidth","features","innerFeature","color","isPrimitive","selectedValue","brightness","inputY","yRange","xRange","xMin","xMax","yMin","kelvin","min","max","currentValue","setCurrentValue","showRange","valueAsNumber","onMouseUp","onBlur","presets","valueMax","valueMin","Feature","onRead","FeatureWrapper","genericParams","featureWrapperClass","wrapperParams","isBinaryFeature","isNumericFeature","isTextualFeature","isEnumFeature","isSwitchFeature","isCoverFeature","isLockFeature","isColorFeature","isClimateFeature","onApplyClick","groupedFeatures","epName","featuresGroup","isColor","isReadable","ACCESS_READ","exposes","Exposes","ClustersComp","tree","epData","uiSchema","updateConfig","formData","configSchema","deviceConfig","device_options","schema","definitions","onSubmit","DeviceSettings","renderContent","match","tab","getDeviceLinks","activeClassName","devicePageWithRouter","DevicePage","onIdentifyClick","onResetClick","renderTouchlinkDevices","touchlinkInProgress","scope","touchlinkDevice","channel","renderNoDevices","TouchlinkPage","ROOT_KEY_NAME","ingoredFields","validJsonSchemasAsTabs","removePropertiesFromSchema","names","properties","tabs","keyName","onSettingsSave","renderCategoriesTabs","renderSwitcher","renderTools","renderBridgeInfo","renderAbout","renderSettings","renderDonate","zigbee2mqttVersion","version","zigbee2mqttCommit","commit","rows","coordinator","meta","revision","row","getSettingsTabs","oneOf","getSettingsInfo","originalConfig","configAndSchema","currentSchema","currentConfig","ignoreTabNames","renderSettingsTabs","preventDefault","SettingsPageWithRouter","SettingsPage","ThemeSwitcher","useThemeSwitcher","switcher","themes","isDarkMode","light","dark","urls","exact","StartStopJoinButton","initialIsVisible","isComponentVisible","setIsComponentVisible","handleHideDropdown","handleClickOutside","contains","removeEventListener","useComponentVisible","selectedRouter","setSelectedRouter","routers","selectAndHide","permit_join","show","navbarIsVisible","setnavbarIsVisible","handler","listener","useOnClickOutside","restart_required","RenameGroupForm","onRename","modalIsOpened","setModalIsOpened","setInput","currentTarget","useInputChange","renameGroupForm","handleInputChange","getDeviceObj","groupAddress","rowNumber","onRemove","deviceFriendlyName","groupMemebershipInfo","DeviceGroupRow","onDeviceSelect","onEpChange","deviceObj","newGroupName","newGroupId","onGroupCreateSubmit","groupFriendlyName","renderGroupCreationForm","renderGroups","DeviceGroup","AddDeviceToGroup","reverse","GroupsPage","stopPropagation","column","renderArrow","currentDirection","TableHeader","sortColumn","sortDirection","onSortChange","lastSeenIsAvaliable","TableRow","last_seen","storeKey","saveState","storeData","handleLongLoading","size","sortDir","currentTime","sortedTableData","restoreState","storedState","restored","tableData","renderError","renderDevicesTable","advanced","ZigbeeTable","ALL","TextWrapper","text","Highlighted","highlight","trim","regex","parts","part","logLevels","search","logLevel","renderSearch","_search","LogsPage","StateCell","secs","progress","remaining","floor","OtaRow","date_code","software_build_id","checkAllOTA","getAllOtaDevices","supports_ota","otaApi","otaDevices","colSpan","OtaPage","donwloadState","getDerivedStateFromError","hasError","githubUrlParams","referrer","stack","githubUrl","URLSearchParams","footerFeatures","lastSeenTime","rederedFeatures","typeToClassMap","humidity","illuminance","pressure","co2","voltage","power","energy","frequency","smoke","radiation_dose_per_hour","radioactive_events_per_minute","power_factor","color_xy","color_hs","color_temp","illuminance_lux","soil_moisture","DashboardFeatureWrapper","icon","temperature","classes","getGenericFeatureIcon","genericRendererIgnoredNames","whitelistFeatureNames","whitelistFeatureTypes","nullish","onlyValidFeaturesForDashboard","filteredOutFeature","isArray","filteredFeatures","loadExtension","currentExtension","onExtensionCodeChange","onSaveClick","addNewExtension","ts","templatedCode","renderEditor","editorTheme","mode","editorProps","$blockScrolling","maxLines","Infinity","showPrintMargin","ExtensionsEditorPage","modalOpened","setModalOpened","ThemeSwitcherProvider","themeMap","defaultTheme","path","getElementById"],"mappings":"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","file":"main.b82dcf8e3d59811a9027.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"_1TK12NlMUcpu0IZGw5KG9F\",\"img\":\"-vLZFy4QqTaA5Lql2j7WL\",\"node\":\"_3VABKCYaUBV0N55MRkEiCg\",\"link\":\"_2MMYgLsCQ5mPT-AJSdZ4Uz\",\"linkLabel\":\"EFSV-Lj6sJyoW14QA3ig0\",\"links\":\"_3m9RTJKJZqiJx1UmLLzi4\",\"nodes\":\"_1RxBn1bAxqYxk5W0mPwZMS\",\"EndDevice\":\"JhUbmgThutQMk8laPcsxg\",\"Coordinator\":\"_3F14ZWmKtSPPHai2y_MRRj\",\"Router\":\"_1I1ZcuMgRbn_B5HXF9Z2mw\",\"BrokenLink\":\"_3FeEi6FG3R9pYpboNF-OBu\",\"Coordinator2Router\":\"_2cFMSmedVqD5hjj2K7XpsQ\",\"Router2Coordinator\":\"_3KnTt0kzrMwLh56UMBBqwe\",\"Router2Router\":\"_3HeSfltIQjH_mQxhaoHnCs\",\"Coordinator2EndDevice\":\"_2zGuiMZ7r-Z4mfRvCVQEAp\",\"EndDevice2Coordinator\":\"_35uGMHQCj1Sx5FyJk5-Ec1\",\"Router2EndDevice\":\"_1nD8O-bIFFZWctv6x4zD8j\",\"EndDevice2Router\":\"_2tVxslI3DwN1gBA6s3V24b\",\"foreignObject\":\"_1PgTRqMkYD7R1RqIF7R5ni\",\"offline\":\"_3goiiMv86rV5wazL6jDpjU\",\"controls\":\"RIAc5GeET4TLTKyCVy7yK\"};","import { LinkI } from \"./types\";\nimport React, { Fragment, FunctionComponent, RefObject, useLayoutEffect, useRef } from \"react\";\nimport style from \"./map.css\";\nimport cx from \"classnames\";\nimport { select } from \"d3-selection\";\n\ninterface LinkProps {\n    link: LinkI;\n    id?: string;\n}\n\nconst Link: FunctionComponent<LinkProps> = props => {\n    const { link: { linkType }, id, ...rest } = props;\n    return <path\n        id={id}\n        className={cx(style.link, style[linkType])}\n        strokeWidth={1}\n        fill=\"transparent\"\n        {...rest}\n    />;\n};\n\ninterface LinkLabelProps extends LinkProps {\n    xlinkHref: string;\n}\n\nconst LinkLabel: FunctionComponent<LinkLabelProps> = props => {\n    const { link } = props;\n    return <text className={style.linkLabel}>{link.linkqualities.join('/')}</text>;\n};\n\ninterface LinksPros {\n    links: LinkI[];\n}\n\nconst Links: FunctionComponent<LinksPros> = props => {\n    const { links } = props;\n    const ref = useRef<SVGGElement>();\n    useLayoutEffect(() => {\n        select(ref.current as SVGGElement).selectAll(`.${style.link}`).data(links);\n        select(ref.current as SVGGElement).selectAll(`.${style.linkLabel}`).data(links);\n    }, [links.length]);\n\n    return (\n        <g ref={ref as RefObject<SVGGElement>} className={style.links}>\n            {links.map((link: LinkI) =>\n                <Fragment key={`fragment${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}>\n                    <Link\n                        id={`edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                        link={link}\n                    />\n                    <LinkLabel\n                        xlinkHref={`#edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                        link={link}\n                    />\n                </Fragment>\n            )}\n        </g>\n    );\n};\nexport default Links;\n","\nimport { Device, Endpoint } from \"./types\";\nimport { GraphI, LinkI, NodeI } from \"./components/map/types\";\nimport { format, TDate } from 'timeago.js';\nimport { Group } from \"./store\";\nimport { Theme } from \"./components/theme-switcher\";\n\nexport const genDeviceDetailsLink = (deviceIdentifier: string | number): string => (`/device/${deviceIdentifier}`);\n\nexport const toHex = (input: number, padding = 4): string => {\n    return `0x${(`${'0'.repeat(padding)}${input.toString(16)}`).substr(-1 * padding).toUpperCase()}`;\n};\n\n\nexport const toHHMMSS = (secs: number): string => {\n    if (!secs) {\n        return 'N/A';\n    }\n    const hours = Math.floor(secs / 3600);\n    const minutes = Math.floor(secs / 60) % 60;\n    const seconds = Math.floor(secs % 60);\n\n    return [hours, minutes, seconds]\n        .map(v => v < 10 ? `0${v}` : v)\n        .filter((v, i) => v !== \"00\" || i > 0)\n        .join(\":\");\n};\n\nexport type CallbackHandler<T> = (err: boolean, res: T) => void;\nexport interface ApiResponse<T> {\n    success: boolean;\n    result: T;\n}\n\nexport const lastSeen = (lastSeen?: string | number, elapsed?: number): string => {\n    if (!lastSeen && !elapsed) {\n        return \"N/A\";\n    }\n    let diff: TDate;\n    if (elapsed !== undefined) {\n        diff = Date.now() - elapsed;\n    } else {\n        if (typeof lastSeen === \"string\") {\n            diff = Date.parse(lastSeen);\n        } else {\n            diff = new Date(lastSeen as number);\n        }\n    }\n    return format(diff);\n};\n\n\nexport const sanitizeGraph = (inGraph: GraphI): GraphI => {\n    const nodes = {};\n    const links = new Map<string, any>();\n\n    inGraph.nodes.forEach(node => {\n        nodes[node.ieeeAddr] = node;\n    });\n\n    inGraph.links.sort((a, b) => a.relationship - b.relationship).forEach(link => {\n        const src: NodeI = nodes[link.source.ieeeAddr];\n        const dst: NodeI = nodes[link.target.ieeeAddr];\n        if (src && dst) {\n            const linkId = [link.source.ieeeAddr, link.target.ieeeAddr].sort().join('');\n            const repeatedLink = links.get(linkId);\n            const linkType = [src.type, dst.type].join('2');\n            if (repeatedLink) {\n                repeatedLink.linkqualities.push(link.linkquality);\n                repeatedLink.relationships.push(link.relationship);\n            } else {\n                links.set(linkId, { ...link, ...{ source: link.source.ieeeAddr, linkType, target: link.target.ieeeAddr, linkqualities: [link.linkquality], relationships: [link.relationship] } });\n            }\n        } else {\n            console.warn(\"Broken link\", link);\n        }\n    });\n\n    inGraph.links = Array.from(links.values());\n    return inGraph;\n};\n\nexport const getDeviceDisplayName = (device: Device): string => {\n    return `${device.friendly_name} ${device.definition?.model ? `(${device.definition?.model})` : ''}`;\n};\n\nexport const randomString = (len: number): string => Math.random().toString(36).substr(2, len);\n\nexport const isSecurePage = (): boolean => location.protocol === 'https:';\n\n\nexport const scale = (inputY: number, yRange: Array<number>, xRange: Array<number>): number => {\n    const [xMin, xMax] = xRange;\n    const [yMin, yMax] = yRange;\n\n    const percent = (inputY - yMin) / (yMax - yMin);\n    const outputX = percent * (xMax - xMin) + xMin;\n\n    return outputX;\n};\n\n\n\n\nfunction replacer(key: string, value: object) {\n    const originalObject = this[key];\n    if (originalObject instanceof Map) {\n        return {\n            dataType: 'Map',\n            value: Array.from(originalObject.entries()),\n        };\n    } else {\n        return value;\n    }\n}\n\nfunction reviver(key: string, value: { dataType: string; value: Iterable<readonly [unknown, unknown]>; }) {\n    if (typeof value === 'object' && value !== null) {\n        if (value.dataType === 'Map') {\n            return new Map(value.value);\n        }\n    }\n    return value;\n}\n\nexport const serialize = (data: object) => {\n    return JSON.stringify(data, replacer);\n}\n\nexport const deSerialize = (str: string) => {\n    return JSON.parse(str, reviver);\n}\n\n\nexport const download = (data: object, filename: string): void => {\n    const blob = new Blob([serialize(data)], { type: 'octet/stream' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.href = url;\n    a.download = filename;\n\n    setTimeout(() => {\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n    }, 1);\n\n}\n\nexport const sanitizeZ2MDeviceName = (deviceName?: string): string => deviceName ? deviceName.replace(/:|\\s|\\//g, \"-\") : \"NA\";\n\n\nexport const getEndpoints = (obj: Device | Group): Endpoint[] => {\n    if (!obj) {\n        return [];\n    } else if ((obj as Device).endpoints) {\n        return Array.from((obj as Device).endpoints.keys());\n    } else if ((obj as Group).members) {\n        return (obj as Group).members.map(g => g.endpoint);\n    }\n    return [];\n}\n\n\nexport const stringifyWithPreservingUndefinedAsNull = (data: object): string => JSON.stringify(data, (k, v) => v === undefined ? null : v)\n\n\n\nexport const isOnlyOneBitIsSet = (b: number): number | boolean => {\n    return b && !(b & (b - 1));\n}\n\nexport const getCurrentTheme = (): Theme => localStorage.getItem('theme') as Theme ?? 'light';\nexport const saveCurrentTheme = (theme: string) => localStorage.setItem('theme', theme);\n","import React, { FunctionComponent, ImgHTMLAttributes, useState } from \"react\";\nimport genericDevice from \"../../images/generic-zigbee-device.png\";\nimport { Device, DeviceState } from \"../../types\";\nimport cx from \"classnames\";\nimport { sanitizeZ2MDeviceName } from \"../../utils\";\nimport style from \"./style.css\";\ntype DeviceImageProps = {\n    device: Device;\n    deviceStatus?: DeviceState;\n    type?: \"img\" | \"svg\";\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst genericDeiviceImageFallback = (device: Device): string => genericDevice;\nconst genSlsDeviceImageUrlZ2M = (device: Device): string => `https://www.zigbee2mqtt.io/images/devices/${sanitizeZ2MDeviceName(device?.definition?.model)}.jpg`;\n\nconst sanitizeModelIDForImageUrl = (modelName: string): string => modelName?.replace(\"/\", \"_\");\n\nexport const genSlsDeviceImageUrlSLS = (device: Device): string => (`https://slsys.github.io/Gateway/devices/png/${sanitizeModelIDForImageUrl(device.model_id)}.png`);\n\n\nconst AVALIABLE_GENERATORS = [\n    genSlsDeviceImageUrlZ2M, genSlsDeviceImageUrlSLS, genericDeiviceImageFallback\n]\n\nconst DeviceImage: FunctionComponent<DeviceImageProps & ImgHTMLAttributes<HTMLDivElement | SVGImageElement>> = (props) => {\n    const [imageGenerators, setimageGenerators] = useState(AVALIABLE_GENERATORS);\n    const { device, deviceStatus, type = \"img\", className, ...rest } = props;\n    let src = genericDeiviceImageFallback(device);\n    if (device?.definition?.model && imageGenerators.length) {\n        src = imageGenerators[0](device);\n    }\n\n    const onImageError = () => {\n        const newGenerators = [...imageGenerators];\n        newGenerators.shift();\n        setimageGenerators(newGenerators);\n    };\n    const otaSpinner = deviceStatus?.update?.state === \"updating\" ? <i title=\"Updating firmware\" className=\"fa fa-sync fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const interviewSpinner = device.interviewing ? <i title=\"Interviewing\" className=\"fa fa-spinner fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const unseccessfullInterview = !device.interviewing && !device.interview_completed ? <i title=\"Interview failed\" className=\"fa fa-exclamation-triangle position-absolute top-0 right-0 text-danger\" /> : null;\n    switch (type) {\n        case \"svg\":\n            return src ? <image {...rest} onError={onImageError} href={src} /> : null;\n        case \"img\":\n        default:\n            return src ? <div className={cx(className, \"position-relative\")} {...rest}>\n                <img onError={onImageError} src={src} className={style.img} />\n                {interviewSpinner}\n                {otaSpinner}\n                {unseccessfullInterview}\n            </div> : null;\n    }\n}\nexport default DeviceImage;\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"_2MpGRLox3gkk1O7Ojpw0KG\"};","import React, { Component, createRef, RefObject } from \"react\";\nimport { LinkI, NodeI } from \"./types\";\nimport cx from \"classnames\";\nimport style from \"./map.css\";\nimport { MouseEventsResponderNode } from \".\";\nimport { Device } from \"../../types\";\nimport DeviceImage from \"../device-image\";\nimport { Simulation } from \"d3-force\";\nimport { select } from \"d3-selection\";\nimport { drag } from \"d3-drag\";\n\n\nexport const getStarShape = (innerCircleArms: number, innerRadius: number, outerRadius: number): string => {\n    const centerX = 15;\n    const centerY = 15;\n\n    const angle = Math.PI / innerCircleArms;\n    const angleOffsetToCenterStar = 60;\n    const totalArms = innerCircleArms * 2;\n    let points = \"\";\n    for (let i = 0; i < totalArms; i++) {\n        const isEvenIndex = i % 2 == 0;\n        const r = isEvenIndex ? outerRadius : innerRadius;\n        const currX = centerX + Math.cos(i * angle + angleOffsetToCenterStar) * r;\n        const currY = centerY + Math.sin(i * angle + angleOffsetToCenterStar) * r;\n        points += `${currX}, ${currY} `;\n    }\n    return points;\n};\n\ninterface NodeProps extends MouseEventsResponderNode {\n    node: NodeI;\n}\n\nconst offlineTimeout = 3600 * 2;\n\nexport const isOnline = (device: Device): boolean => {\n\n    return true; //Date.now() - device.lastSeen < offlineTimeout;\n};\n\nclass Node extends Component<NodeProps, {}> {\n    ref = createRef<SVGElement>();\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { node } = this.props;\n        select(current as SVGElement).data([node]);\n    }\n\n    onMouseOut = (): void => {\n        const { node, onMouseOut } = this.props;\n        this.ref && this.ref.current && onMouseOut && onMouseOut(node, this.ref.current);\n    };\n\n    onMouseOver = (): void => {\n        const { node, onMouseOver } = this.props;\n        this.ref && this.ref.current && onMouseOver && onMouseOver(node, this.ref.current);\n    };\n\n    onDblClick = (): void => {\n        const { node, onDblClick } = this.props;\n        this.ref && this.ref.current && onDblClick && onDblClick(node, this.ref.current);\n    };\n\n    render() {\n\n        const { node } = this.props;\n        const { onMouseOver, onMouseOut, onDblClick } = this;\n        const deviceType = node.type as string;\n        const cn = cx(style.node, style[deviceType]); //{ [style.offline]: !isOnline(node.device, time) }\n        return (<g className={cn}\n            ref={this.ref as RefObject<SVGImageElement>}\n            onMouseOver={onMouseOver}\n            onMouseOut={onMouseOut}\n            onDoubleClick={onDblClick}\n        >\n\n            {\n                node.type === \"Coordinator\" ? (\n                    <>\n                        <circle cx={15} cy={16} r={24} fill={\"#fff\"} stroke={\"blue\"} strokeWidth={1} />\n                        <polygon\n                            stroke=\"blue\"\n                            strokeWidth={1}\n                            points={getStarShape(5, 5, 14) as string}\n                        />\n                    </>\n                ) : (\n                        <>\n                            <circle cx={16} cy={17} r={24} fill={\"#fff\"} stroke={\"blue\"} strokeWidth={1} />\n                            <DeviceImage\n                                type=\"svg\"\n                                width={32}\n                                height={32}\n                                device={node as unknown as Device}\n                                className={`${style.img}`}\n                            />\n                        </>\n                    )\n            }\n            <text x={45} y={25}>{node.friendlyName}</text>\n        </g>);\n\n    }\n}\n\ninterface NodesProps extends MouseEventsResponderNode {\n    root: SVGElement;\n    nodes: NodeI[];\n    simulation: Simulation<NodeI, LinkI>;\n}\n\ntype NodesState = {\n    toggle: boolean;\n}\n\nexport default class Nodes extends Component<NodesProps, NodesState> {\n    state: Readonly<NodesState> = {\n        toggle: false\n    }\n    updateDrag(): void {\n        const { simulation, root } = this.props;\n        const dragForce = drag<SVGCircleElement, NodeI>()\n            .on(\"start\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0.3).restart();\n                }\n\n                d.fx = d.x;\n                d.fy = d.y;\n            })\n            .on(\"drag\", ({ x, y }, d) => {\n                d.fx = x;\n                d.fy = y;\n            })\n            .on(\"end\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0);\n                }\n                d.fx = undefined;\n                d.fy = undefined;\n            });\n        select(root).selectAll<SVGCircleElement, NodeI>(`.${style.node}`)\n            .call(dragForce);\n    }\n\n    componentDidMount(): void {\n        this.updateDrag();\n    }\n\n    componentDidUpdate(): void {\n        this.updateDrag();\n    }\n\n\n\n    render() {\n        const { nodes, onMouseOut, onMouseOver } = this.props;\n        return (\n            <g className={style.nodes}>\n                {nodes.map((node: NodeI) => (\n                    <Node\n                        onMouseOut={onMouseOut}\n                        onMouseOver={onMouseOver}\n                        key={node.ieeeAddr}\n                        node={node}\n                    />\n                ))}\n            </g>\n        );\n    }\n}\n","import { SimulationLinkDatum, SimulationNodeDatum } from \"d3-force\";\nimport { DeviceType, DeviceDefinition } from \"../../types\";\n\nexport interface NodeI extends SimulationNodeDatum {\n    ieeeAddr: string;\n    friendlyName?: string;\n    type?: DeviceType;\n    failed?: string[];\n    lastSeen?: number;\n    definition?: DeviceDefinition;\n}\n\nexport type LinkType =\n    \"Coordinator2EndDevice\" |\n    \"EndDevice2Coordinator\" |\n\n    \"Coordinator2Router\" |\n    \"Router2Coordinator\" |\n\n    \"EndDevice2Router\" |\n    \"Router2EndDevice\" |\n\n    \"Router2Router\" |\n\n    \"BrokenLink\";\n\nexport interface Source extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\n\nexport interface Target extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\nexport enum ZigbeeRelationship {\n    NeigbhorIsParent,\n    NeigbhorIsAChild,\n    NeigbhorIsASibling,\n    NoneOfTheAbove,\n    NeigbhorIsAFormerChild\n}\n\nexport interface LinkI extends SimulationLinkDatum<NodeI> {\n    source: Source;\n    target: Target;\n    linkquality: number;\n    linkqualities: number[];\n    depth: number;\n    routes: unknown[];\n    sourceIeeeAddr: string;\n    targetIeeeAddr: string;\n    sourceNwkAddr: number;\n    lqi: number;\n    relationship: ZigbeeRelationship;\n    relationships: ZigbeeRelationship[];\n    linkType: LinkType;\n}\n\nexport interface GraphI {\n    nodes: NodeI[];\n    links: LinkI[];\n}\n","import createStore from \"unistore\";\nimport devtools from \"unistore/devtools\";\nimport initialState from './initialState.txt';\n\n\nimport { Device, DeviceState, BridgeConfig, BridgeInfo, TouchLinkDevice, BridgeState } from \"./types\";\nimport { GraphI } from \"./components/map/types\";\nimport { deSerialize, getCurrentTheme } from \"./utils\";\nimport { Theme } from \"./components/theme-switcher\";\n\n\nexport interface GroupAddress {\n    endpoint: number;\n    ieee_address: string;\n}\n\nexport interface Group {\n    id: number;\n    friendly_name: string;\n    members: GroupAddress[];\n}\n\nexport interface LogMessage {\n    level: \"error\" | \"info\" | \"warning\";\n    message: string;\n}\n\nexport type Extension = {\n    name: string;\n    code: string;\n};\nexport interface GlobalState {\n    devices: Map<string, Device>;\n    deviceStates: Map<string, DeviceState>;\n    touchlinkDevices: TouchLinkDevice[];\n    touchlinkScanInProgress: boolean;\n    touchlinkIdentifyInProgress: boolean;\n    touchlinkResetInProgress: boolean;\n    networkGraph: GraphI;\n    networkGraphIsLoading: boolean;\n    groups: Group[];\n    bridgeConfig: BridgeConfig;\n    bridgeInfo: BridgeInfo;\n    bridgeState: BridgeState;\n    logs: LogMessage[];\n    extensions: Extension[];\n    theme: Theme;\n};\nconst theme = getCurrentTheme();\nconst _initState = deSerialize(initialState) as GlobalState;\n_initState.theme = theme;\n\nconst _store = createStore(_initState);\nconst store = process.env.NODE_ENV === 'production' ?  _store : devtools(_store);\n\nexport default store;\n","import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport store, { Extension, Group, LogMessage } from \"./store\";\nimport { BridgeConfig, BridgeInfo, TouchLinkDevice, Device, DeviceState, BridgeState } from './types';\nimport { sanitizeGraph, isSecurePage, randomString, stringifyWithPreservingUndefinedAsNull } from \"./utils\";\nimport { Notyf } from \"notyf\";\nimport { GraphI } from \"./components/map/types\";\n\nimport orderBy from \"lodash/orderBy\";\n\n\nconst MAX_LOGS_RECORDS_IN_BUFFER = 100;\nconst TOKEN_LOCAL_STORAGE_ITEM_NAME = \"z2m-token\";\nconst AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME = \"z2m-auth\";\nconst UNAUTHORIZED_ERROR_CODE = 4401;\n\nconst notyf = new Notyf();\n\ninterface Message {\n    topic: string;\n    payload: string | object | object[] | string[];\n}\n\nconst blacklistedMessages: RegExp[] = [\n    /MQTT publish/\n];\n\nconst isLogMessage = (msg: LogMessage | ResponseWithStatus): msg is LogMessage => {\n    return (msg as LogMessage).level !== undefined && (msg as LogMessage).message !== undefined;\n}\n\nconst isResponseWithStatus = (msg: LogMessage | ResponseWithStatus): msg is ResponseWithStatus => {\n    return (msg as ResponseWithStatus).status !== undefined;\n}\n\nconst showNotity = (data: LogMessage | ResponseWithStatus): void => {\n    let message = \"\", level = \"\";\n    if (isLogMessage(data)) {\n        message = data.message;\n        level = data.level;\n    } else if (isResponseWithStatus(data)) {\n        switch (data.status) {\n            case \"error\":\n                level = \"error\";\n                message = data.error as string;\n                break;\n            default:\n                break;\n        }\n    }\n\n    switch (level) {\n        case \"error\":\n        case \"warning\":\n            notyf.error(message);\n            break;\n        case \"info\":\n            notyf.success(message);\n            break;\n\n        default:\n            break;\n    }\n};\n\ninterface ResponseWithStatus {\n    status: \"ok\" | \"error\";\n    data: unknown;\n    error?: string;\n    transaction?: string;\n}\ninterface TouchllinkScanResponse extends ResponseWithStatus {\n    data: {\n        found: TouchLinkDevice[];\n    };\n}\ninterface ExtensionReadResponse extends ResponseWithStatus {\n    data: {\n        name: string;\n        content: string;\n    };\n}\ninterface Callable {\n    (): void;\n}\n\nclass Api {\n    url: string;\n    socket: ReconnectingWebSocket;\n    requests: Map<string, [Callable, Callable]> = new Map<string, [Callable, Callable]>();\n    transactionNumber = 1;\n    transactionRndPreffix: string;\n    constructor(url: string) {\n        this.url = url;\n        this.transactionRndPreffix = randomString(5);\n    }\n    send = (topic: string, payload: object): Promise<void> => {\n        console.debug(\"Calling API\", { topic, payload });\n\n        if (topic.startsWith('bridge/request/')) {\n            const transaction = `${this.transactionRndPreffix}-${this.transactionNumber++}`;\n            const promise = new Promise<void>((resolve, reject) => {\n                this.requests.set(transaction, [resolve, reject]);\n            });\n            this.socket.send(stringifyWithPreservingUndefinedAsNull({ topic, payload: { ...payload, transaction } }));\n            return promise;\n        } else {\n            this.socket.send(stringifyWithPreservingUndefinedAsNull({ topic, payload }));\n            return Promise.resolve();\n        }\n    }\n\n    urlProvider = async () => {\n        const url = new URL(this.url)\n        let token = localStorage.getItem(TOKEN_LOCAL_STORAGE_ITEM_NAME);\n        const authRequired = !!localStorage.getItem(AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME);\n        if (authRequired) {\n            if (!token) {\n                token = prompt(\"enter your z2m admin token\");\n                localStorage.setItem(TOKEN_LOCAL_STORAGE_ITEM_NAME, token as string);\n            }\n            url.searchParams.append(\"token\", token as string);\n        }\n        return url.toString();\n    }\n\n    connect(): void {\n        this.socket = new ReconnectingWebSocket(this.urlProvider);\n        this.socket.addEventListener(\"message\", this.onMessage);\n        this.socket.addEventListener(\"close\", this.onClose);\n    }\n    private procsessBridgeMessage = (data: Message): void => {\n        switch (data.topic) {\n            case \"bridge/config\":\n                store.setState({\n                    bridgeConfig: data.payload as BridgeConfig\n                });\n                break;\n\n            case \"bridge/info\":\n                store.setState({\n                    bridgeInfo: data.payload as BridgeInfo\n                });\n                break;\n\n            case \"bridge/state\":\n                store.setState({\n                    bridgeState: data.payload as BridgeState\n                });\n                break;\n\n            case \"bridge/devices\":\n                {\n                    const devicesMap = new Map();\n                    orderBy((data.payload as Device[]), \"friendly_name\").forEach((device) => {\n                        const dev = { ...device };\n                        dev.endpoints = new Map(Object.entries(device.endpoints));\n                        devicesMap.set(device.ieee_address, dev);\n                    });\n                    store.setState({\n                        devices: devicesMap\n                    })\n                }\n                break;\n\n            case \"bridge/groups\":\n                store.setState({\n                    groups: data.payload as Group[]\n                })\n                break;\n\n            case \"bridge/event\":\n                break;\n\n            case \"bridge/extensions\":\n                {\n                    const extensions = data.payload as Extension[];\n                    store.setState({ extensions });\n                }\n                break;\n\n            case \"bridge/logging\":\n                {\n                    const { logs } = store.getState();\n                    const newLogs = [...logs.slice(-MAX_LOGS_RECORDS_IN_BUFFER)];\n                    newLogs.push(data.payload as LogMessage);\n                    store.setState({ logs: newLogs });\n                    const log = data.payload as LogMessage;\n                    if (blacklistedMessages.every(val => !val.test(log.message))) {\n                        showNotity(log);\n                    }\n                }\n                break;\n\n            case \"bridge/response/networkmap\":\n                {\n                    const response = data.payload as ResponseWithStatus;\n                    if (response.status == \"ok\") {\n                        const { value } = response.data as { value: unknown };\n                        store.setState({\n                            networkGraphIsLoading: false,\n                            networkGraph: sanitizeGraph(value as GraphI)\n                        });\n                    } else {\n                        store.setState({ networkGraphIsLoading: false });\n                    }\n                }\n                break;\n\n\n            case \"bridge/response/touchlink/scan\":\n                {\n                    const { status, data: payloadData } = data.payload as TouchllinkScanResponse;\n                    if (status === \"ok\") {\n                        store.setState({ touchlinkScanInProgress: false, touchlinkDevices: payloadData.found });\n                    } else {\n                        store.setState({ touchlinkScanInProgress: false });\n                    }\n                }\n                break;\n\n            case \"bridge/response/touchlink/identify\":\n                store.setState({ touchlinkIdentifyInProgress: false });\n                break;\n\n            case \"bridge/response/touchlink/factory_reset\":\n                store.setState({ touchlinkResetInProgress: false });\n                break;\n\n\n            default:\n                break;\n        }\n        if (data.topic.startsWith(\"bridge/response/\")) {\n            showNotity(data.payload as ResponseWithStatus);\n            this.resolvePromises(data.payload as ResponseWithStatus);\n        }\n    }\n\n    private resolvePromises(message: ResponseWithStatus): void {\n        const { transaction, status } = message;\n        if (transaction !== undefined && this.requests.has(transaction)) {\n            const [resolve, reject] = this.requests.get(transaction) as [Callable, Callable];\n            if (status == \"ok\" || status == undefined) {\n                resolve();\n            } else {\n                reject();\n            }\n            this.requests.delete(transaction);\n        }\n    }\n\n    private onClose = (e: CloseEvent): void => {\n        if (e.code === UNAUTHORIZED_ERROR_CODE) {\n            localStorage.setItem(AUTH_FLAG_LOCAL_STORAGE_ITEM_NAME, \"true\");\n            localStorage.removeItem(TOKEN_LOCAL_STORAGE_ITEM_NAME);\n            notyf.error(\"Unauthorized\");\n            setTimeout(() => {\n                window.location.reload();\n            }, 1000);\n        }\n    }\n\n    private onMessage = (event: MessageEvent): void => {\n        let data = {} as Message;\n        try {\n            data = JSON.parse(event.data) as Message;\n        } catch (e) {\n            notyf.error(e.message);\n            notyf.error(event.data);\n        }\n\n        if (data.topic.startsWith(\"bridge/\")) {\n            this.procsessBridgeMessage(data);\n        } else {\n            const { deviceStates } = store.getState();\n            const newDeviceStates = new Map(deviceStates);\n            newDeviceStates.set(data.topic, { ...newDeviceStates.get(data.topic), ...(data.payload as DeviceState) });\n            store.setState({ deviceStates: newDeviceStates });\n        }\n    }\n}\nconst apiUrl = `${window.location.host}${document.location.pathname}api`;\nconst api = new Api(`${isSecurePage() ? 'wss' : 'ws'}://${apiUrl}`);\nexport default api;\n","import api from \"../api\";\nimport { Device } from \"../types\";\n\nexport interface BridgeApi {\n    setPermitJoin(permit: boolean, device: Device): Promise<void>;\n    updateBridgeConfig(options: object): Promise<void>;\n    restartBridge(): Promise<void>;\n}\n\n\nexport default {\n    setPermitJoin(state, permit = true, device: Device): Promise<void> {\n        return api.send(\"bridge/request/permit_join\", { value: permit, device: device?.friendly_name });\n    },\n    updateBridgeConfig(state, options: object): Promise<void> {\n        return api.send('bridge/request/options', { options });\n    },\n    restartBridge(state): Promise<void> {\n        return api.send('bridge/request/restart', {});\n    },\n}\n","import api from \"../api\";\n\nexport interface DeviceApi {\n    renameDevice(\n        old: string,\n        newName: string,\n        homeassistantRename: boolean\n    ): Promise<void>;\n    removeDevice(dev: string, force: boolean, block: boolean): Promise<void>;\n    configureDevice(name: string): Promise<void>;\n\n    setDeviceOptions(id: string, options: object): Promise<void>;\n}\n\n\nexport default {\n    renameDevice: (\n        state,\n        from: string,\n        to: string,\n        homeassistantRename: boolean\n    ): Promise<void> => {\n        return api.send(\"bridge/request/device/rename\", {\n            from,\n            to,\n            'homeassistant_rename': homeassistantRename,\n        });\n    },\n    removeDevice: (\n        state,\n        dev: string,\n        force: boolean,\n        block: boolean\n    ): Promise<void> => {\n        return api.send(\"bridge/request/device/remove\", { id: dev, force, block });\n    },\n\n    configureDevice: (state, name: string): Promise<void> => {\n        return api.send(\"bridge/request/device/configure\", { id: name });\n    },\n\n    setDeviceOptions: (state, id: string, options: object): Promise<void> => {\n        return api.send(\"bridge/request/device/options\", { id, options });\n    }\n}\n","import api from \"../api\";\n\nexport interface GroupsApi {\n    createGroup(name: string, id?: number): Promise<void>;\n    removeGroup(name: string): Promise<void>;\n    addDeviceToGroup(device: string, group: string): Promise<void>;\n    removeDeviceFromGroup(device: string, group: string): Promise<void>;\n    renameGroup(oldName: string, newName: string): Promise<void>;\n}\n\n\nexport default {\n    createGroup: (state, group: string, id: number): Promise<void> => {\n        const payload = {\n            'friendly_name': group\n        };\n        if (id) {\n            payload['id'] = id;\n        }\n        return api.send(\"bridge/request/group/add\", payload);\n    },\n\n    removeGroup: (state, group: string): Promise<void> => {\n        return api.send(\"bridge/request/group/remove\", { id: group });\n    },\n\n    addDeviceToGroup: (state, device: string, group: string): Promise<void> => {\n        return api.send(\"bridge/request/group/members/add\", { group, device });\n    },\n\n    removeDeviceFromGroup: (\n        state,\n        device: string,\n        group: string\n    ): Promise<void> => {\n        return api.send(\"bridge/request/group/members/remove\", { device, group });\n    },\n    renameGroup: (state, oldName: string, newName: string): Promise<void> => {\n        return api.send(\"bridge/request/group/rename\", { from: oldName, to: newName });\n    },\n}\n","import api from \"../api\";\n\nexport interface StateApi {\n    setStateValue(dev: string, name: string, value: unknown): Promise<void>;\n    setDeviceState(dev: string, value: object): Promise<void>;\n    getDeviceState(dev: string, value: object): Promise<void>;\n}\n\nexport default {\n    setStateValue(\n        state,\n        dev: string,\n        name: string,\n        value: string | number | boolean\n    ): Promise<void> {\n        return api.send(`${dev}/set`, { [name]: value });\n    },\n    setDeviceState(state, dev: string, value: object) {\n        return api.send(`${dev}/set`, value);\n    },\n    getDeviceState(state, dev: string, value: object) {\n        return api.send(`${dev}/get`, value);\n    },\n}\n","import api from \"../api\";\n\nexport interface OtaApi {\n    checkOTA(deviceName: string): Promise<void>;\n    updateOTA(deviceName: string): Promise<void>;\n}\nexport default {\n    checkOTA: (state, deviceName: string): Promise<void> => {\n        return api.send(\"bridge/request/device/ota_update/check\", { id: deviceName });\n    },\n    updateOTA: (state, deviceName: string): Promise<void> => {\n        return api.send(\"bridge/request/device/ota_update/update\", { id: deviceName });\n    },\n}\n","import api from \"../api\";\nimport { Cluster } from \"../types\";\n\nexport type BindParams = {\n    from: string;\n    to: string;\n    clusters: Cluster[];\n}\nexport interface BindApi {\n    addBind(params: BindParams): Promise<void>;\n    removeBind(params: BindParams): Promise<void>;\n}\n\ntype BindOperation = \"bind\" | \"unbind\";\nconst bindOp = (operation: BindOperation, params: object) => {\n    return api.send(`bridge/request/device/${operation}`, params);\n}\nexport default {\n    addBind: (state, params: BindParams): Promise<void> => bindOp(\"bind\", params),\n    removeBind: (state, params: BindParams): Promise<void> => bindOp(\"unbind\", params),\n}\n","import api from \"../api\";\nimport store from \"../store\";\nimport { TouchLinkDevice } from \"../types\";\n\n\nexport interface TouchlinkApi {\n    touchlinkScan(): Promise<void>;\n    touchlinkIdentify(device: TouchLinkDevice): Promise<void>;\n    touchlinkReset(device: TouchLinkDevice): Promise<void>;\n}\n\nexport default {\n    touchlinkScan(state): Promise<void> {\n        store.setState({ touchlinkScanInProgress: true, touchlinkDevices: [] });\n        return api.send(\"bridge/request/touchlink/scan\", { value: true });\n    },\n    touchlinkIdentify(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkIdentifyInProgress: true });\n        return api.send(\"bridge/request/touchlink/identify\", device);\n\n    },\n    touchlinkReset(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkResetInProgress: true });\n        return api.send(\"bridge/request/touchlink/factory_reset\", device);\n    },\n}\n","import api from \"../api\";\nimport store, { Extension } from \"../store\";\n\n\n\nexport interface ExtensionApi {\n    updateExtensionCode(extension: Extension): Promise<void>;\n    saveExtensionCode(extension: Extension): Promise<void>;\n    removeExtension(extension: Extension): Promise<void>;\n}\n\n\nexport default {\n    updateExtensionCode: (state, extension: Extension): Promise<void> => {\n        const { extensions } = store.getState();\n        const newExtensions = extensions.filter(f => f.name !== extension.name).concat([extension]);\n        store.setState({ extensions: newExtensions });\n        return Promise.resolve();\n    },\n\n    saveExtensionCode: (state, extension: Extension): Promise<void> => {\n        return api.send(`bridge/request/extension/save`, extension);\n    },\n    removeExtension: (state, extension: Extension): Promise<void> => {\n        const { extensions } = store.getState();\n        const newExtensions = extensions.filter(f => f.name !== extension.name);\n        store.setState({ extensions: newExtensions });\n\n        return api.send(`bridge/request/extension/remove`, {name: extension.name});\n    }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport store, { GlobalState } from \"../store\";\nimport { Store } from \"unistore\";\n\nimport { ReportingConfig } from \"../types\";\nimport api from \"../api\";\nimport { download, saveCurrentTheme } from \"../utils\";\nimport bridgeActions from \"./BridgeApi\";\nimport deviceActions from \"./DeviceApi\";\nimport groupActions from \"./GroupsApi\";\nimport stateActions from \"./StateApi\";\nimport otaActions from \"./OtaApi\";\nimport bindActions from \"./BindApi\";\nimport touchlinkActions from \"./TouchlinkApi\";\nimport extensionActions from \"./ExtensionApi\";\nimport { Theme } from \"../components/theme-switcher\";\n\nexport interface UtilsApi {\n    exportState(): Promise<void>;\n}\n\nexport interface MapApi {\n    networkMapRequest(): Promise<void>;\n}\nexport interface ReportingApi {\n    configureReport(device: string, config: ReportingConfig): Promise<void>;\n}\nexport interface ThemeActions {\n    setTheme(theme: Theme): Promise<void>;\n}\n\n\nconst actions = (store: Store<GlobalState>): object => ({\n    ...bridgeActions,\n    ...deviceActions,\n    ...groupActions,\n    ...stateActions,\n    ...otaActions,\n    ...bindActions,\n    ...touchlinkActions,\n    ...extensionActions,\n\n    networkMapRequest: (state): Promise<void> => {\n        store.setState({ networkGraphIsLoading: true, networkGraph: { nodes: [], links: [] } });\n        return api.send(\"bridge/request/networkmap\", { type: \"raw\", routes: false });\n    },\n\n    exportState(state): Promise<void> {\n        download(state, 'state.json');\n        return Promise.resolve();\n    },\n    configureReport(state, device: string, config: ReportingConfig): Promise<void> {\n        return api.send('bridge/request/device/configure_reporting', {\n            id: device,\n            ...config\n        });\n    },\n    setTheme(state, theme: Theme): Promise<void> {\n        saveCurrentTheme(theme);\n        store.setState({ theme });\n        return Promise.resolve();\n    }\n});\nexport default actions;\n","import React, { ButtonHTMLAttributes, Component } from \"react\";\n\ninterface ButtonProps<T> {\n    item?: T;\n    onClick?(arg1: T): void;\n    promt?: boolean | string;\n}\n\nexport default class Button<T> extends Component<ButtonProps<T> & Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'onClick'>, {}> {\n    onClick = (): void => {\n        const { item, onClick, promt } = this.props;\n        let confirmed = true;\n        if (promt) {\n            confirmed = confirm(typeof promt === \"string\" ? promt : \"Are you sure?\");\n        }\n        confirmed && onClick && onClick(item as T);\n    };\n\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, item, promt, ...rest } = this.props;\n        return <button type=\"button\" {...rest} onClick={this.onClick}>{children}</button>;\n    }\n}","import { ZigbeeRelationship } from \"./types\";\n\ninterface LinkType {\n  title: string;\n  relationship: ZigbeeRelationship;\n}\nexport const linkTypes: LinkType[] = [\n  {\n      title: 'IsParent',\n      relationship: ZigbeeRelationship.NeigbhorIsParent\n  },\n  {\n      title: 'IsAChild',\n      relationship: ZigbeeRelationship.NeigbhorIsAChild\n  },\n  {\n      title: 'IsASibling',\n      relationship: ZigbeeRelationship.NeigbhorIsASibling\n  },\n  {\n      title: 'NoneOfTheAbove',\n      relationship: ZigbeeRelationship.NoneOfTheAbove\n  }\n];","import React, { FunctionComponent } from \"react\";\n\nconst Spinner: FunctionComponent = () => {\n  return <div className=\"d-flex align-items-center\">\n    <strong>Loading, please wait.</strong>\n    <div className=\"spinner-border me-2\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n}\nexport default Spinner;","import React, { ChangeEvent, Component, createRef, Fragment } from \"react\";\nimport Links from \"./links\";\nimport Nodes, { getStarShape } from \"./nodes\";\nimport { GraphI, LinkI, NodeI, Source, Target, ZigbeeRelationship } from \"./types\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions, { MapApi } from \"../../actions/actions\";\n\nimport Button from \"../button\";\nimport { ForceLink, forceLink, forceCollide, forceCenter, forceSimulation, forceX, forceY } from \"d3-force\";\nimport { select, Selection } from \"d3-selection\";\nimport { forceManyBodyReuse } from \"d3-force-reuse\"\nimport { zoom, zoomIdentity, ZoomTransform } from \"d3-zoom\";\nimport { linkTypes } from \"./consts\";\nimport Spinner from \"../spinner\";\nimport intersection from \"lodash/intersection\";\nimport style from \"./map.css\";\nimport cx from \"classnames\";\nexport interface MouseEventsResponderNode {\n    onMouseOver?: (arg0: NodeI, el: SVGElement) => void;\n    onMouseOut?: (arg0: NodeI, el: SVGElement) => void;\n    onDblClick?: (arg0: NodeI, el: SVGElement) => void;\n}\n\ninterface MapState {\n    selectedNode?: NodeI;\n    width: number;\n    height: number;\n    visibleLinks: ZigbeeRelationship[];\n    legendIsVisible: boolean;\n}\n\nconst parentOrChild = [ZigbeeRelationship.NeigbhorIsAChild, ZigbeeRelationship.NeigbhorIsParent];\nconst linkStrregth = (d: LinkI) => {\n    if (d.linkType === \"Router2Router\") {\n        return 1;\n    }\n    if (parentOrChild.includes(d.relationship)) {\n        return 0.5;\n    }\n\n    return 0;\n}\nconst baseDistance = 100;\nconst distancesMap = {\n    BrokenLink: 5 * baseDistance,\n    Router2Router: 2.5 * baseDistance,\n    Coordinator2Router: 2.5 * baseDistance,\n    Coordinator2EndDevice: 1 * baseDistance,\n    EndDevice2Router: 1 * baseDistance\n};\n\n\nconst getDistance = (d: LinkI): number => {\n    return distancesMap[d.linkType] ?? 250;\n};\n\nconst computeLink = (d: LinkI, transform: ZoomTransform): string => {\n    const src = d.source;\n    const dst = d.target;\n    const [x1, y1] = transform.apply([src.x as number, src.y as number]);\n    const [x2, y2] = transform.apply([dst.x as number, dst.y as number]);\n    return `M ${x1} ${y1} L ${x2} ${y2}`;\n}\n\ntype SelNode = Selection<SVGElement, NodeI, SVGElement, {}>;\ntype SelLink = Selection<SVGElement, LinkI, SVGElement, {}>;\n\ntype TickedParams = {\n    transform: ZoomTransform;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n    links: LinkI[];\n}\n\n\n\nconst ticked = ({ transform, node, link, linkLabel, links }: TickedParams): void => {\n    links.forEach((d) => {\n        const [x1, y1] = transform.apply([d.source.x as number, d.source.y as number]),\n            [x2, y2] = transform.apply([d.target.x as number, d.target.y as number]);\n\n        (d as unknown as NodeI).x = (x2 + x1) / 2;\n        (d as unknown as NodeI).y = (y2 + y1) / 2;\n    });\n    link.attr(\"d\", (d) => computeLink(d, transform));\n    linkLabel\n        .attr('x', ({ source, target }) => transform.applyX(((source.x as number) + (target.x as number)) / 2))\n        .attr('y', ({ source, target }) => transform.applyY(((source.y as number) + (target.y as number)) / 2));\n\n    node.attr(\"transform\", (d: NodeI) => {\n        const imgXShift = 32 / 2;\n        const imgYShift = 32 / 2;\n        const [X, Y] = transform.apply([d.x as number, d.y as number]);\n        return `translate(${X - imgXShift}, ${Y - imgYShift})`;\n    });\n};\ntype ProcessHighlightsParams = {\n    networkGraph: GraphI;\n    links: LinkI[];\n    selectedNode?: NodeI;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n}\nconst processHighlights = ({ networkGraph, links, selectedNode, node, link, linkLabel }: ProcessHighlightsParams) => {\n    const linkedByIndex = new Set<string>();\n    networkGraph.nodes.forEach(n => linkedByIndex.add(n.ieeeAddr + \",\" + n.ieeeAddr));\n    links.forEach((l) => linkedByIndex.add(l.sourceIeeeAddr + \",\" + l.targetIeeeAddr));\n\n    const neighboring = (a: Source, b: Target): boolean => linkedByIndex.has(a.ieeeAddr + \",\" + b.ieeeAddr)\n    const computeOpacity = (l: LinkI) => (l.source === selectedNode || l.target === selectedNode ? 1 : 0.15);\n    if (selectedNode) {\n        node.style(\"opacity\", (o: NodeI) => neighboring(selectedNode, o) || neighboring(o, selectedNode) ? 1 : 0.15);\n        link.style(\"stroke-opacity\", computeOpacity);\n        linkLabel.style(\"opacity\", computeOpacity);\n    } else {\n        node.style(\"opacity\", 1);\n        link.style(\"stroke-opacity\", 1);\n        linkLabel.style(\"opacity\", 1);\n    }\n}\n\nexport class MapComponent extends Component<GlobalState & MapApi, MapState> {\n    ref = createRef<HTMLDivElement>();\n    svgRef = createRef<SVGSVGElement>();\n    simulation = forceSimulation<NodeI, LinkI>();\n    state: Readonly<MapState> = {\n        width: 0,\n        height: 0,\n        visibleLinks: parentOrChild,\n        legendIsVisible: true,\n    };\n    transform: ZoomTransform = zoomIdentity;\n\n    updateNodes = (): void => {\n        const { networkGraph } = this.props;\n        if (!networkGraph.nodes.length) {\n            return;\n        }\n        const { visibleLinks, selectedNode, width, height } = this.state;\n        const container = select<SVGElement, {}>(this.svgRef.current as SVGElement);\n        const node = container.selectAll<SVGElement, NodeI>(`.${style.node}`);\n        const link = container.selectAll<SVGElement, LinkI>(`.${style.link}`);\n        const linkLabel = container.selectAll<SVGElement, LinkI>(`.${style.linkLabel}`);\n\n        const links = networkGraph.links.filter(l => intersection(visibleLinks, l.relationships).length);\n        this.simulation.nodes(networkGraph.nodes.concat(links as unknown as NodeI[]));\n        this.simulation.force<ForceLink<NodeI, LinkI>>(\"link\")?.links(links);\n        this.simulation.on(\"tick\", () => ticked({ transform: this.transform, node, link, linkLabel, links }));\n\n\n        //add zoom capabilities\n        const everything = container.selectAll<SVGGeometryElement, NodeI>('.everything');\n        const zoomHandler = zoom()\n            .extent([[0, 0], [width, height]])\n            .scaleExtent([1 / 10, 8])\n            .on(\"zoom\", ({ transform }) => {\n                everything.attr(\"transform\", transform);\n            });\n        zoomHandler(container);\n\n        processHighlights({ networkGraph, links, selectedNode, node, link, linkLabel });\n        node.on(\"click\", (event, d: NodeI) => {\n            const { selectedNode } = this.state;\n            this.setState({ selectedNode: selectedNode ? null as unknown as NodeI : d });\n        });\n        this.simulation.alphaTarget(0.03).restart();\n    }\n\n\n    updateForces(width: number, height: number): void {\n        this.simulation = this.simulation\n            .force(\"link\", forceLink<NodeI, LinkI>().id(d => d.ieeeAddr).distance(getDistance).strength(linkStrregth))\n            .force(\"charge\", forceManyBodyReuse().strength(-700))\n            .force(\"collisionForce\", forceCollide())\n            .force(\"center\", forceCenter(width / 2, height / 2))\n            .force(\"x\", forceX().strength(0.1))\n            .force(\"y\", forceY().strength(0.2))\n    }\n\n    initPage = () => {\n        const { width, height } = (this.ref.current as HTMLDivElement).getBoundingClientRect();\n        this.setState({ width, height });\n        this.updateForces(width, height);\n    }\n\n    componentDidMount(): void {\n        setTimeout(this.initPage, 200);\n    }\n\n    componentDidUpdate(): void {\n        this.updateNodes();\n    }\n\n    renderMap() {\n        const { width, height, visibleLinks } = this.state;\n\n        const { networkGraph } = this.props;\n        const links = networkGraph.links.filter(l => intersection(visibleLinks, l.relationships).length > 0);\n        return (\n            <svg ref={this.svgRef} viewBox={`0 0 ${width} ${height}`}>\n                <g className=\"everything\">\n                    <Links links={links} />\n                    <Nodes\n                        root={this.svgRef.current as SVGElement}\n                        nodes={networkGraph.nodes}\n                        simulation={this.simulation}\n                    />\n                </g>\n            </svg >\n        )\n    }\n    onRequestClick = (): void => {\n        const { networkMapRequest } = this.props;\n        networkMapRequest();\n    }\n    renderMessage() {\n        const { networkGraphIsLoading } = this.props;\n        return (\n            <div className=\"h-100 d-flex justify-content-center align-items-center\">\n                {\n                    networkGraphIsLoading ? (\n                        <div>\n                            <Spinner />\n                            <div>Depending on the size of your network this can take somewhere between 10 seconds and 2 minutes.</div>\n                        </div>\n                    ) : <Button onClick={this.onRequestClick} className=\"btn btn-primary d-block\">Load map</Button>\n                }\n            </div>\n        );\n    }\n    onLinkTypeFilterChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { visibleLinks: stateVisibleLinks } = this.state;\n        const { checked, value } = e.target;\n        const inValue = parseInt(value, 10);\n        let visibleLinks = [...stateVisibleLinks];\n        if (checked) {\n            visibleLinks.push(inValue);\n        } else {\n            visibleLinks = visibleLinks.filter((v) => v !== inValue);\n        }\n        this.setState({ visibleLinks });\n    }\n    renderMapControls() {\n        const { visibleLinks } = this.state;\n        return <div className={style.controls}>\n            {\n                linkTypes.map(linkType => (\n                    <div key={linkType.title} className=\"form-check form-check-inline\">\n                        <input onChange={this.onLinkTypeFilterChange} className=\"form-check-input\" type=\"checkbox\" id={linkType.title} value={linkType.relationship} checked={visibleLinks.includes(linkType.relationship)} />\n                        <label className=\"form-check-label\" htmlFor={linkType.title}>{linkType.title}</label>\n                    </div>\n                ))\n            }\n            {\n                <div className=\"btn-group btn-group-sm\" role=\"group\">\n                    <Button<void> title=\"Refresh data\" className=\"btn btn-primary\" onClick={this.onRequestClick}><i\n                        className=\"fa fa-sync\" /></Button>\n                </div>\n            }\n        </div>\n    }\n    renderHelp() {\n        const { legendIsVisible } = this.state;\n        return (<div className={cx(\"fixed-bottom\", { \"d-none\": !legendIsVisible })} onClick={() => this.setState({ legendIsVisible: false })}>\n            <div className={cx(style.node, style.Coordinator)}>\n                <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n                    <polygon points={getStarShape(5, 5, 14) as string} />\n                </svg> is Coordinator</div>\n            <div className={cx(style.node, style.EndDevice)}>Green means End Device</div>\n            <div className={cx(style.node, style.Router)}>Blue means Router</div>\n\n            <div>Solid lines are the link to the <span className={cx(style.node, style.Coordinator)}>Coordinator</span></div>\n            <div>Dashed lines are the link with <span className={cx(style.node, style.Coordinator)}>Router</span></div>\n            <div>Link quality is between 0 - 255 (higher is better), values with / represents multiple types of links</div>\n            <div>Click on me to hide</div>\n        </div>)\n    }\n    render() {\n        const { networkGraph } = this.props;\n\n        return (\n            <div className={style.container} ref={this.ref}>\n                {networkGraph.nodes.length ? <Fragment>{this.renderMapControls()} {this.renderMap()}</Fragment> : this.renderMessage()}\n                {this.renderHelp()}\n            </div>\n        );\n    }\n}\n\n\nconst mappedProps = [\"networkGraph\", \"networkGraphIsLoading\"];\nconst ConnectedMap = connect<{}, MapState, GlobalState, {}>(mappedProps, actions)(MapComponent);\nexport default ConnectedMap;\n","import React, { Component, FunctionComponent, Fragment } from \"react\";\nimport cx from \"classnames\";\nimport ReactDOM from \"react-dom\";\n// import * as style from \"./style.css\";\n\n\nexport const ModalHeader: FunctionComponent<{}> = props => {\n    return <div className=\"modal-header\">{props.children}</div>;\n};\n\nexport const ModalBody: FunctionComponent<{}> = props => {\n    return <div className=\"modal-body\">{props.children}</div>;\n};\n\nexport const ModalFooter: FunctionComponent<{}> = props => {\n    return <div className=\"modal-footer\">{props.children}</div>;\n};\ninterface ModalProps {\n    isOpen?: boolean;\n}\ninterface ModalState {\n    modalShow: string;\n    display: string;\n}\n\n\nclass BodyEnd extends React.Component {\n    el: HTMLDivElement;\n    constructor(props) {\n        super(props);\n        this.el = document.createElement('div');\n\n        'modal-backdrop fade show'.split(' ').map(className => this.el.classList.add(className));\n    }\n\n    componentDidMount() {\n        document.body.appendChild(this.el);\n    }\n\n    componentWillUnmount() {\n        document.body.removeChild(this.el);\n    }\n\n    render() {\n        return ReactDOM.createPortal(\n            this.props.children,\n            this.el,\n        );\n    }\n}\nclass Modal extends Component<ModalProps, {}> {\n\n\n\n    openModal = () => {\n        document.body.classList.add(\"modal-open\");\n    }\n\n    closeModal = () => {\n        document.body.classList.remove(\"modal-open\");\n    }\n\n    componentDidMount() {\n        this.props.isOpen ? this.openModal() : this.closeModal();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.isOpen !== this.props.isOpen) {\n            this.props.isOpen ? this.openModal() : this.closeModal();\n        }\n    }\n\n    render() {\n        const { isOpen } = this.props;\n        return (\n            isOpen && <div\n                className={`modal fade show`}\n                style={{ display: 'block' }}\n            >\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">{this.props.children}</div>\n                </div>\n                <BodyEnd />\n            </div >\n        );\n    }\n}\n\nexport default Modal;\n\n\n\n// interface Props {\n//     onOk(): void;\n//     onCancel(): void;\n// }\n// const Modal: FunctionComponent<Props> = (props: Props) => {\n//     const { onOk, onCancel } = props;\n//     return (\n//         <Fragment>\n\n//             <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n//                 Launch demo modal\n// </button>\n//             <div className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n//                             <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n//                                 <span aria-hidden=\"true\">&times;</span>\n//                             </button>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             ...\n//                         </div>\n//                         <div className=\"modal-footer\">\n//                             <button onClick={onOk} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n//                             <button onClick={onCancel} type=\"button\" className=\"btn btn-primary\">Ok</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </Fragment>\n//     );\n// };\n\n// export default Modal;\n","import React, { ChangeEvent, Component } from \"react\";\nimport Button from \"../button\";\nimport { Device, DeviceState } from \"../../types\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { DeviceApi } from \"../../actions/DeviceApi\";\nimport cx from \"classnames\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\nimport { GlobalState } from \"../../store\";\ninterface DeviceControlGroupProps {\n    device: Device;\n    state?: DeviceState;\n}\ninterface DeviceRenameParams {\n    friendlyName: string;\n    isHassRename: boolean;\n}\ninterface DeviceRemovalParams {\n    block: boolean;\n    force: boolean;\n}\n\n\ninterface DeviceControlGroupState {\n    isRenameModalOpened: boolean;\n    isDeviceRemovalModalOpened: boolean;\n    removeParams: DeviceRemovalParams;\n    renameParams: DeviceRenameParams;\n\n}\n\nexport class DeviceControlGroup extends Component<DeviceControlGroupProps & DeviceApi & GlobalState, DeviceControlGroupState> {\n    state = {\n        isRenameModalOpened: false,\n        isDeviceRemovalModalOpened: false,\n        renameParams: {\n            friendlyName: this.props.device.friendly_name,\n            isHassRename: false\n        },\n        removeParams: {\n            block: false,\n            force: false\n        }\n    }\n\n    onRenameClick = async (): Promise<void> => {\n        const { renameDevice, device } = this.props;\n        const { renameParams } = this.state;\n\n        await renameDevice(device.friendly_name, renameParams.friendlyName, renameParams.isHassRename);\n        this.setState({\n            isRenameModalOpened: false\n        });\n    };\n\n\n    onRemoveClick = (): void => {\n        const { removeDevice, device } = this.props;\n        const { removeParams } = this.state;\n        removeDevice(device.friendly_name, removeParams.force, removeParams.block);\n        this.setState({\n            isDeviceRemovalModalOpened: false\n        });\n    };\n\n    toggleRenameModal = (): void => {\n        const { isRenameModalOpened } = this.state;\n        this.setState({ isRenameModalOpened: !isRenameModalOpened });\n    }\n    toggleDeviceRemovalModal = (): void => {\n        const { isDeviceRemovalModalOpened } = this.state;\n        this.setState({ isDeviceRemovalModalOpened: !isDeviceRemovalModalOpened });\n    }\n\n    onHassEntityIdChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { checked } = e.target;\n        renameParams.isHassRename = checked;\n        this.setState({ renameParams });\n    }\n    onFriendlyNameChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { value } = e.target;\n        renameParams.friendlyName = value;\n        this.setState({ renameParams });\n    }\n\n    onDeviceRemovalParamChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { removeParams } = this.state;\n        const { checked, name } = e.target;\n        removeParams[name] = checked;\n        this.setState({ removeParams });\n    }\n    renderRenameButton() {\n        const { bridgeInfo, device } = this.props;\n        const { isRenameModalOpened, renameParams } = this.state;\n        return (<>\n            <Button<void> className=\"btn btn-primary\" onClick={this.toggleRenameModal} title=\"Rename device\"><i className=\"fa fa-edit\" /></Button>\n            <Modal isOpen={isRenameModalOpened}>\n                <ModalHeader>\n                    <h3>Rename device</h3>\n                    <small>{device.friendly_name}</small>\n                </ModalHeader>\n                <ModalBody>\n                    <div className=\"mb-3\">\n                        <label htmlFor={`fn${device.ieee_address}`} className=\"form-label\">Friendly name</label>\n                        <input id={`fn${device.ieee_address}`} onChange={this.onFriendlyNameChange} type=\"text\" className=\"form-control\" value={renameParams.friendlyName} />\n                    </div>\n                    {bridgeInfo?.config?.homeassistant ? (\n                        <div className=\"form-check form-switch\">\n                            <input className=\"form-check-input\" checked={renameParams.isHassRename} type=\"checkbox\" id={`hass${device.ieee_address}`} onChange={this.onHassEntityIdChange} />\n                            <label className=\"form-check-label\" htmlFor={`hass${device.ieee_address}`}>Update Home Assistant entity ID</label>\n                        </div>\n                    ) : null}\n                </ModalBody>\n                <ModalFooter>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleRenameModal}>Close</button>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onRenameClick}>Save changes</button>\n                </ModalFooter>\n            </Modal>\n        </>\n        )\n    }\n    renderDeviceRemovalButton() {\n        const { device } = this.props;\n        const { isDeviceRemovalModalOpened, removeParams } = this.state;\n        const checks = [\n            { label: 'Force remove', name: 'force', value: removeParams.force },\n            { label: 'Block from joining again', name: 'block', value: removeParams.block },\n        ];\n        return (\n            <><Modal isOpen={isDeviceRemovalModalOpened}>\n                <ModalHeader>\n                    <h3>Remove device</h3>\n                    <small>{device.friendly_name}</small>\n                </ModalHeader>\n                <ModalBody>\n                    {\n                        checks.map(check => {\n                            const id = `${check.name}${device.ieee_address}`;\n                            return <div key={check.name} className=\"form-check form-switch\">\n                                <input className=\"form-check-input\" name={check.name} checked={check.value} type=\"checkbox\" id={id} onChange={this.onDeviceRemovalParamChange} />\n                                <label className=\"form-check-label\" htmlFor={id}>{check.label}</label>\n                            </div>\n                        })\n                    }\n                </ModalBody>\n                <ModalFooter>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleDeviceRemovalModal}>Close</button>\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onRemoveClick}>Delete</button>\n                </ModalFooter>\n            </Modal>\n                <button onClick={this.toggleDeviceRemovalModal} className=\"btn btn-danger\" title=\"Remove device\"><i className={cx(\"fa\", \"fa-trash\")} /></button></>\n        )\n    }\n\n    render() {\n        const { device, configureDevice } = this.props;\n        return (\n            <div className=\"btn-group btn-group-sm\" role=\"group\">\n                {this.renderRenameButton()}\n                <Button<string> className=\"btn btn-warning\" onClick={configureDevice} item={device.friendly_name} title=\"Reconfigure\" promt><i className={cx(\"fa\", \"fa-retweet\")} /></Button>\n                {this.renderDeviceRemovalButton()}\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedDeviceControlGroup = connect<DeviceControlGroupProps, {}, GlobalState, DeviceApi>(mappedProps, actions)(DeviceControlGroup);\nexport default ConnectedDeviceControlGroup;\n\n","import React, { Fragment } from \"react\";\nimport { Device } from \"../../types\";\n\ntype VendorProps = {\n  device: Device;\n}\nconst normalizeModel = (model: string): string => {\n  const find = '[/| |:]';\n  const re = new RegExp(find, 'g');\n  return model.replace(re, '_');\n};\n\nexport const VendorLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  if (device.supported && device.definition) {\n    const url = `https://www.zigbee2mqtt.io/information/supported_devices.html#${encodeURIComponent(normalizeModel(device.definition.vendor?.toLowerCase()))}`;\n    return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{device.definition.vendor}</a>\n  }\n  return <Fragment>Unsupported</Fragment>;\n}\n\n\nexport const ModelLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  let url = 'https://www.zigbee2mqtt.io/how_tos/how_to_support_new_devices.html#how-to-support-new-devices';\n  let title = device.model_id;\n  if (device.supported && device.definition) {\n    const acnchor = [\n      encodeURIComponent(device.definition?.vendor?.toLowerCase()),\n      encodeURIComponent(device.definition?.model?.toLowerCase()),\n    ].join('-');\n    url = `https://www.zigbee2mqtt.io/devices/${encodeURIComponent(normalizeModel(device.definition?.model))}.html#${encodeURIComponent(normalizeModel(acnchor))}`;\n    title = device.definition.model;\n  }\n  return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{title}</a>\n}\n","import React, { Fragment, FunctionComponent } from \"react\";\nimport { PowerSource as PowerSourceType } from \"../../types\";\nimport style from \"./style.css\";\n\n\ninterface PowerSourceProps {\n    source: PowerSourceType;\n    battery?: number;\n    batteryLow?: boolean;\n    showLevel?: boolean;\n}\n\n\nconst PowerSource: FunctionComponent<PowerSourceProps> = ({ source, battery, batteryLow, showLevel, ...rest }) => {\n    let batteryClass = \"\";\n    let title = \"\";\n\n    switch (source) {\n        case \"Battery\":\n            title = 'Battery';\n            if (batteryLow !== undefined) {\n                batteryClass = batteryLow ? `fa-battery-empty animation-blinking text-danger` : 'fa-battery-full text-success';\n                title += batteryLow ? ' LOW' : ' OK';\n            }\n            if (battery !== undefined) {\n                if (battery >= 85) {\n                    batteryClass += \" fa-battery-full\";\n                } else if (battery >= 75) {\n                    batteryClass += \" fa-battery-three-quarters\";\n                } else if (battery >= 50) {\n                    batteryClass += \" fa-battery-half\";\n                } else if (battery >= 25) {\n                    batteryClass += \" fa-battery-quarter\";\n                } else if (battery >= 10) {\n                    batteryClass += ` fa-battery-empty animation-blinking`\n                } else {\n                    return <span className={`animation-blinking text-danger`} role=\"alert\">{battery}%</span>\n                }\n            }\n            title += `${battery ? `, power level ${battery}%` : \"\"}`;\n            if (!batteryClass) {\n                batteryClass = \"fa-question\";\n            }\n            return <Fragment>{showLevel ? <span className=\"pe-2\">Battery {battery !== undefined ? `${battery}%` : null}</span> : null}<i className={`fa ${batteryClass}`} title={title} {...rest} /></Fragment>;\n\n        case \"Mains (single phase)\":\n        case \"DC Source\":\n            return <i className={`fa fa-plug ${style.plug}`} title={source} {...rest} />;\n        default:\n            return <i className={`fa fa-question`} title={source} {...rest} />;\n    }\n};\n\nexport default PowerSource;\n","/* eslint-disable react/display-name */\nimport React, { Component, Fragment } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport { toHex, toHHMMSS } from \"../../utils\";\nimport DeviceControlGroup from \"../device-control\";\nimport cx from \"classnames\";\nimport style from \"./style.css\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport get from 'lodash/get';\nimport DeviceImage from \"../device-image\";\nimport { ModelLink, VendorLink } from \"../vendor-links/verndor-links\";\nimport PowerSource from \"../power-source\";\n\n\ntype DeviceInfoProps = {\n    device: Device;\n}\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\n// [Flower sensor](http://modkam.ru/?p=1700)\nconst markdownLinkRegex = /\\[(.*?)\\]\\((.*?)\\)/;\n\nconst displayProps = [\n    {\n        label: 'Friendly name',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><strong>{device.friendly_name}</strong></dd>,\n    },\n    {\n        key: 'type',\n        label: 'Device type'\n    },\n    {\n        key: 'model_id',\n        label: 'Zigbee model'\n    },\n    {\n        key: 'definition.description',\n        label: 'Description',\n        if: 'supported',\n        render: (device: Device) => {\n            const result = markdownLinkRegex.exec(device.definition?.description as string);\n            let content = <span>{device.definition?.description}</span>;\n            if (result) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const [all, title, link] = result;\n                content = <a target=\"_blank\" rel=\"noopener noreferrer\"href={link}>{title}</a>\n            }\n            return <dd className=\"col-12 col-md-7\">{content}</dd>\n        },\n    },\n    {\n        render: (device: Device) => <dd className=\"col-12 col-md-7\" ><p className={cx('mb-0', 'font-weight-bold', { 'text-danger': !device.supported, 'text-success': device.supported })}>{device.supported ? 'Supported' : 'Unsupported'}</p></dd>,\n        label: 'Support status'\n    },\n    {\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{device.definition?.supports}</dd>,\n        label: 'Supports',\n        if: 'definition.supports'\n    },\n    {\n        key: 'ieee_address',\n        label: 'IEEE address'\n    },\n    {\n        key: 'network_address',\n        label: 'Network address',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{toHex(device.network_address)}</dd>,\n    },\n    {\n        key: 'date_code',\n        label: 'Firmware build date',\n        if: 'date_code'\n    },\n    {\n        key: 'software_build_id',\n        label: 'Firmware version',\n        if: 'software_build_id'\n    },\n\n    {\n        key: 'definition.vendor',\n        label: 'Vendor',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><VendorLink device={device} /></dd>\n    },\n    {\n        key: 'definition.model',\n        label: 'Model',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\"><ModelLink device={device} /></dd>\n    },\n\n    {\n        label: 'Power source',\n        render: (device: Device, deviceStatus: DeviceState) => <dd className=\"col-12 col-md-7\"><PowerSource showLevel={true} source={device.power_source} battery={deviceStatus.battery as number} batteryLow={deviceStatus.battery_low as boolean} /></dd>\n    },\n    {\n        label: 'Interview completed',\n        render: (device: Device) => <dd className=\"col-12 col-md-7\">{device.interview_completed ? 'Yes' : 'No'}</dd>\n    }\n];\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DeviceInfo extends Component<DeviceInfoProps & PropsFromStore, {}> {\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceStatus: DeviceState = deviceStates.get(device.friendly_name) ?? {} as DeviceState;\n        return (\n            <Fragment>\n                <div className=\"d-flex justify-content-center\">\n                    <DeviceImage className={`card-img-top w-auto ${style[\"device-pic\"]}`} device={device} deviceStatus={deviceStatus} />\n                </div>\n\n\n                {/* <h2 className=\"card-title\">{device.friendly_name} {device.type}</h2> */}\n\n\n                <dl className=\"row\">\n                    {\n                        displayProps.filter(prop => prop.if === undefined || get(device, prop.if, false)).map(prop => (\n                            <Fragment key={prop.label}>\n                                <dt className=\"col-12 col-md-5\">{prop.label}</dt>\n                                {prop.render ?\n                                    prop.render(device, deviceStatus) : <dd className=\"col-12 col-md-7\">{get(device, prop.key)}</dd>}\n\n                            </Fragment>\n                        ))\n                    }\n                </dl>\n\n\n                <DeviceControlGroup device={device} state={deviceStatus} />\n\n            </Fragment>\n        );\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceInfoPage = connect<DeviceInfoProps, {}, GlobalState, PropsFromStore>(mappedProps)(DeviceInfo);\nexport default ConnectedDeviceInfoPage;","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Device, ObjectType } from \"../../types\";\nimport { getDeviceDisplayName } from \"../../utils\";\nimport { Group } from \"../../store\";\n\ninterface DevicePickerProps {\n    type: ObjectType;\n    value: string | number;\n    label?: string;\n    devices: Map<string, Device>;\n    groups?: Group[];\n    onChange(device: Device | Group, type: ObjectType): void;\n}\nexport default class DevicePicker extends Component<DevicePickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange, devices, groups = [] } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n\n        if (devices.has(value)) {\n            onChange(devices.get(value) as Device, \"device\");\n        } else {\n            const group = groups.find(g => parseInt(value, 10) === g.id);\n            onChange(group as Group, \"group\");\n        }\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { devices, groups, value, type, label, onChange, ...rest } = this.props;\n        let options = [<option key=\"hidden\" hidden>Select device</option>];\n\n        const devicesOptions = [] as JSX.Element[];\n        devices.forEach((device) => {\n            devicesOptions.push(<option\n                title={device.definition?.description}\n                key={device.ieee_address}\n                value={device.ieee_address}\n            >{getDeviceDisplayName(device)}</option>);\n        });\n        if (groups && groups.length) {\n            const groupOptions = groups.map(group => <option\n                key={group.friendly_name}\n                value={group.id}>{group.friendly_name}\n            </option>);\n            options.push(<optgroup key=\"Groups\" label=\"Groups\">{groupOptions}</optgroup>);\n            options.push(<optgroup key=\"Devices\" label=\"Devices\">{devicesOptions}</optgroup>);\n        } else {\n            options = options.concat(devicesOptions);\n        }\n        return <div className=\"form-group\">\n            {label && <label className=\"form-label\">{label}</label>}\n            <select\n                value={value}\n                onChange={this.onSelect}\n                className=\"form-control\"\n                {...rest}\n            >{options}\n\n            </select>\n        </div>;\n\n    }\n}\n","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Endpoint } from \"../../types\";\n\n\n\ninterface EndpointPickerProps {\n    onChange(endpoint: Endpoint): void;\n    value: Endpoint;\n    label?: string;\n    values: Endpoint[];\n}\n\nexport default class EndpointPicker extends Component<EndpointPickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n        onChange(value);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { onSelect, value, values, disabled, onChange, label, ...rest } = this.props;\n        const hasOnlyOneEP = values.length == 1;\n\n        const options = values.map(ep => <option key={ep} value={ep}>{ep}</option>)\n        options.unshift(<option key=\"hidded\" hidden>Select endpoint</option>);\n        return <div className=\"form-group\">\n            {label && <label className=\"form-label\">{label}</label>}\n            <select disabled={value && hasOnlyOneEP || disabled}\n                value={value}\n                className=\"form-control\"\n                title={hasOnlyOneEP ? 'The only endpoint' : \"\"}\n                onChange={this.onSelect}\n                {...rest}>\n                {options}\n            </select>\n        </div>\n\n    }\n}\n","import React, { ChangeEvent, Component, InputHTMLAttributes } from \"react\";\nimport { Cluster } from \"../../types\";\nimport { randomString } from \"../../utils\";\nimport { label } from \"../map/map.module.css\";\n\n\n\nconst clusterDescriptions = {\n    genPowerCfg: \"PowerCfg\",\n    genScenes: \"Scenes\",\n    genOnOff: \"OnOff\",\n    genLevelCtrl: \"LevelCtrl\",\n    lightingColorCtrl: \"LColorCtrl\",\n    closuresWindowCovering: \"Closures\",\n    genMultistateInput: \"MultistateInput\",\n    genGroups: \"Groups\",\n    genOta: \"Ota\",\n    touchlink: \"Touchlink\",\n    genIdentify: \"Identify\",\n    msTemperatureMeasurement: \"Temperature\",\n    msIlluminanceMeasurement: \"Illuminance\",\n    msRelativeHumidity: \"Humidity\",\n    msPressureMeasurement: \"Pressure\",\n    msSoilMoisture: \"Soil Moisture\",\n}\n\nexport enum PickerType {\n    MULTIPLE,\n    SINGLE\n}\nexport interface ClusterGroup {\n    name: string;\n    clusters: Cluster[];\n}\ninterface ClusterPickerProps {\n    value: Cluster[] | Cluster;\n    label?: string;\n    onChange(arg1: Cluster[] | Cluster | undefined): void;\n    clusters: Cluster[] | ClusterGroup[];\n    pickerType: PickerType;\n}\ninterface ClusterPickerState {\n    pickerId: string;\n}\n\n\n\nfunction isClusterGroup(clusters: Cluster[] | ClusterGroup[]): clusters is ClusterGroup[] {\n\n    return clusters.length > 0 && typeof clusters[0] !== 'string';\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class ClusterPicker extends Component<ClusterPickerProps & Omit<InputHTMLAttributes<HTMLInputElement | HTMLSelectElement>, 'onChange'>, ClusterPickerState> {\n    state: Readonly<ClusterPickerState> = {\n        pickerId: randomString(5)\n    }\n\n    onChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>): void => {\n        const { onChange, pickerType } = this.props;\n        let { value } = this.props;\n        const { name } = e.target;\n        if (pickerType === PickerType.MULTIPLE) {\n            const { checked: isChecked } = e.target as HTMLInputElement;\n            if (isChecked) {\n                (value as Cluster[]).push(name);\n            } else {\n                value = (value as Cluster[]).filter(v => v !== name);\n            }\n        } else {\n            const { value: selectedValue } = e.target as HTMLInputElement;\n            value = selectedValue;\n        }\n        onChange(value);\n    }\n    render() {\n        const { pickerType } = this.props;\n        if (pickerType === PickerType.MULTIPLE) {\n            return this.renderMultiPicker();\n        } else {\n            return this.renderSinglePicker();\n        }\n    }\n    renderMultiPicker() {\n        const { pickerId } = this.state;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { clusters = [], value, pickerType, onChange, label, ...rest } = this.props;\n        let options = [] as JSX.Element[];\n        if (isClusterGroup(clusters)) {\n            //TODO: implement if necessary\n            console.warn(\"Not implemented\");\n        } else {\n            options = clusters.map(cluster => (\n                <div key={cluster} className=\"form-check form-check-inline\">\n                    <input className=\"form-check-input\"\n                        type=\"checkbox\"\n                        checked={value.includes(cluster)}\n                        name={cluster}\n                        id={`${pickerId}_${cluster}`}\n                        value={cluster}\n                        onChange={this.onChange}\n                        {...rest}\n                    />\n                    <label className=\"form-check-label\" htmlFor={`${pickerId}_${cluster}`} title={cluster}>{clusterDescriptions[cluster] ?? cluster}</label>\n                </div>\n            ));\n        }\n\n        return <div className=\"form-group\">\n            {label && <label className=\"form-label\">{label}</label>}\n            <div className=\"form-control border-0\">\n                {options}\n            </div>\n\n        </div>;\n    }\n\n    renderSinglePicker() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { clusters = [], onChange, pickerType, label, ...rest } = this.props;\n        const options = [<option key=\"hidden\" hidden>Select cluster</option>];\n        if (isClusterGroup(clusters)) {\n            clusters.forEach(group => {\n                const groupOptions = group.clusters.map(cluster => <option key={cluster} value={cluster}>{clusterDescriptions[cluster] ?? cluster}</option>)\n                if (groupOptions.length === 0) {\n                    groupOptions.push(<option key=\"none\" disabled>None</option>)\n                }\n                options.push(<optgroup key={group.name} label={group.name}>{groupOptions}</optgroup>);\n            });\n\n\n        } else {\n            clusters.forEach(cluster => {\n                options.push(<option key={cluster} value={cluster}>{clusterDescriptions[cluster] ?? cluster}</option>);\n            })\n        }\n        return (<div className=\"form-group\">\n            {label && <label className=\"form-label\">{label}</label>}\n            <select className=\"form-select\" onChange={this.onChange} {...rest}>\n                {options}\n            </select>\n        </div>)\n    }\n}\n","import React, { Component } from \"react\";\nimport { Device, Endpoint, Cluster, ObjectType } from \"../../types\";\nimport DevicePicker from \"../device-picker\";\nimport EndpointPicker from \"../endpoint-picker\";\nimport ClusterPicker, { PickerType } from \"../cluster-picker\";\nimport Button from \"../button\";\nimport { Group } from \"../../store\";\nimport { NiceBindingRule } from \"./bind\";\nimport { getEndpoints } from \"../../utils\";\nimport { BindParams } from \"../../actions/BindApi\";\n\n\n\n\ninterface BindRowProps {\n    rule: NiceBindingRule;\n    idx: number;\n    devices: Map<string, Device>;\n    groups: Group[];\n    device: Device;\n    onBind(params: BindParams): void;\n    onUnBind(params: BindParams): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface BindRowState {\n    stateRule: NiceBindingRule;\n}\nconst getTarget = (rule: NiceBindingRule, devices: Map<string, Device>, groups: Group[]): Device | Group => {\n    if (rule.target.type === \"group\") {\n        return groups.find(g => g.id === rule.target.id) as Group;\n    }\n    return devices.get(rule.target?.ieee_address as string) as Device;\n}\ntype Action = \"Bind\" | \"Unbind\";\nexport default class BindRow extends Component<BindRowProps, BindRowState> {\n    state: Readonly<BindRowState> = {\n        stateRule: {} as NiceBindingRule\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static getDerivedStateFromProps(props: Readonly<BindRowProps>, state: BindRowState): Partial<BindRowState> {\n        const { rule } = props;\n        return {\n            stateRule: rule\n        };\n    }\n    setSourceEp = (sourceEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.source.endpoint = sourceEp;\n        this.setState({ stateRule });\n    }\n\n    setDestination = (destination: Device | Group, type: ObjectType): void => {\n        const { stateRule } = this.state;\n        if (type === \"device\") {\n            const endpoints = getEndpoints(destination);\n            stateRule.target['ieee_address'] = (destination as Device)['ieee_address'];\n            stateRule.target.type = \"endpoint\";\n            stateRule.target.endpoint = endpoints[0];\n            delete stateRule.target.id;\n        } else if (type === \"group\") {\n            stateRule.target.id = (destination as Group).id;\n            stateRule.target.type = \"group\";\n            delete stateRule.target.ieee_address;\n        }\n        stateRule.clusters = [];\n        this.setState({ stateRule });\n    }\n\n    setDestinationEp = (destinationEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.target.endpoint = destinationEp;\n        stateRule.clusters = [];\n        this.setState({ stateRule });\n    }\n\n    setClusters = (clusters: Cluster[]): void => {\n        const { stateRule } = this.state;\n        stateRule.clusters = clusters;\n        this.setState({ stateRule });\n    }\n\n    getBidningParams(): { from: string; to: string; clusters: string[] } {\n        const { device, groups, devices } = this.props;\n        const { stateRule } = this.state;\n        const from = `${device.friendly_name}/${stateRule.source.endpoint}`;\n        let to = \"\";\n        if (stateRule.target.type === \"group\") {\n            const targetGroup = groups.find(group => group.id === stateRule.target.id) as Group;\n            to = `${targetGroup.friendly_name}`;\n        } else if (stateRule.target.type === \"endpoint\") {\n            const targeDevice = devices.get(stateRule.target?.ieee_address as string) as Device;\n            if (targeDevice.type === \"Coordinator\") {\n                to = `${targeDevice.friendly_name}`;\n            } else {\n                to = `${targeDevice.friendly_name}/${stateRule.target.endpoint}`;\n            }\n        }\n        return { from, to, clusters: stateRule.clusters };\n    }\n\n    onBindOrUnBindClick = (action: Action): void => {\n        const { onUnBind, onBind } = this.props;\n        const { from, to, clusters } = this.getBidningParams();\n        if (action == \"Bind\") {\n            onBind({ from, to, clusters });\n        } else {\n            onUnBind({ from, to, clusters });\n        }\n    }\n\n    isValidRule(): boolean {\n        const { stateRule } = this.state;\n        let valid;\n        if (stateRule.target.type == \"endpoint\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.ieee_address\n                && stateRule.target.endpoint\n                && stateRule.clusters.length > 0;\n        } else if (stateRule.target.type == \"group\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.id\n                && stateRule.clusters.length > 0;\n        }\n        return !!valid;\n    }\n\n    render() {\n        const { devices, groups, idx, device } = this.props;\n        const { stateRule } = this.state;\n\n        const targetType: ObjectType = stateRule.target.type === \"endpoint\" ? \"device\" : \"group\";\n\n        const sourceEndpoints = getEndpoints(device);\n        const target = getTarget(stateRule, devices, groups);\n        const destinationEndpoints = getEndpoints(target);\n\n        const possibleClusters: Set<Cluster> = new Set(stateRule.clusters);\n        const destEndpoint = device.endpoints.get(stateRule.source.endpoint);\n        if (destEndpoint) {\n            destEndpoint.clusters.output.forEach(cluster => possibleClusters.add(cluster));\n        }\n        return (\n            <div className=\"row pb-2 border-bottom\">\n                <div className=\"col-md-2\">\n                    <EndpointPicker label=\"Source EP\" disabled={!stateRule.isNew} values={sourceEndpoints} value={stateRule.source.endpoint} onChange={this.setSourceEp} />\n                </div>\n                <div className=\"col-md-2\">\n                    <DevicePicker label=\"Destination\" disabled={!stateRule.isNew} type={targetType} value={(stateRule.target.ieee_address || stateRule.target.id) as string} devices={devices} groups={groups} onChange={this.setDestination} />\n                </div>\n                <div className=\"col-md-2\">\n                    {stateRule.target.type === \"endpoint\" ? <EndpointPicker label=\"Destination EP\" disabled={!stateRule.isNew} values={destinationEndpoints} value={stateRule.target.endpoint as Endpoint} onChange={this.setDestinationEp} /> : null}\n                </div>\n                <div className=\"col-md-4\">\n                    <ClusterPicker label=\"Clusters\" pickerType={PickerType.MULTIPLE} clusters={Array.from(possibleClusters)} value={stateRule.clusters} onChange={this.setClusters} />\n                </div>\n                <div className=\"col-md-2\">\n                    <div className=\"form-group\">\n                        <label className=\"form-label\">Actions</label>\n                        <div className=\"form-control border-0\">\n                            <div className=\"btn-group btn-group-sm\">\n                                <Button<Action> item={\"Bind\"} disabled={!this.isValidRule()} title=\"Bind\" className=\"btn btn-primary\" onClick={this.onBindOrUnBindClick}>\n                                    Bind&nbsp;<i\n                                        className=\"fa fa-heart\" /></Button>\n                                <Button<Action> item={\"Unbind\"} disabled={!stateRule.isNew && !this.isValidRule()} title=\"Unbind\" className=\"btn btn-danger\" onClick={this.onBindOrUnBindClick}><i\n                                    className=\"fa fa-heart-broken\" />&nbsp;Unbind</Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { Device, Cluster, Endpoint } from \"../../types\";\nimport BindRow from \"./bind-row\";\nimport actions from \"../../actions/actions\";\nimport { BindApi } from \"../../actions/BindApi\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState, Group } from \"../../store\";\nimport { getEndpoints } from \"../../utils\";\n\n\ninterface PropsFromStore {\n    devices: Map<string, Device>;\n    groups: Group[];\n}\ninterface BindProps {\n    device: Device;\n}\n\nexport interface NiceBindingRule {\n    id?: number;\n    isNew?: number;\n    source: {\n        ieee_address: string;\n        endpoint: Endpoint;\n    };\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n    clusters: Cluster[];\n}\nconst rule2key = (rule: NiceBindingRule): string => `${rule.source.endpoint}-${rule.isNew}${rule.source.ieee_address}-${rule.target.id}-${rule.target.ieee_address}-${rule.clusters.join('-')}`;\nconst convertBidningsIntoNiceStructure = (device: Device): NiceBindingRule[] => {\n    const bindings = {};\n    device.endpoints.forEach((description, endpoint) => {\n        description.bindings\n            .forEach(b => {\n                let targetId = b.target.id ?? `${b.target.ieee_address}-${b.target.endpoint}`;\n\n                targetId = `${targetId}-${endpoint}`;\n\n                if (bindings[targetId]) {\n                    bindings[targetId].clusters.push(b.cluster);\n                } else {\n                    bindings[targetId] = {\n                        source: {\n                            // eslint-disable-next-line @typescript-eslint/camelcase\n                            ieee_address: device.ieee_address,\n                            endpoint\n                        },\n                        target: b.target,\n                        clusters: [b.cluster]\n                    }\n                }\n            });\n    });\n    return Object.values(bindings);\n}\ntype BindState = {\n    bidingRules: NiceBindingRule[];\n}\nexport class Bind extends Component<BindProps & PropsFromStore & BindApi, BindState> {\n    state: BindState = {\n        bidingRules: []\n    }\n    static getDerivedStateFromProps(props: Readonly<BindProps & PropsFromStore>): Partial<BindState> {\n        const { device } = props;\n        const endpoints = getEndpoints(device);\n        const bidingRules = convertBidningsIntoNiceStructure(device);\n        bidingRules.push({ isNew: Date.now(), target: {}, source: { 'ieee_address': device.ieee_address, endpoint: endpoints[0] }, clusters: [] } as unknown as NiceBindingRule);\n        return { bidingRules };\n    }\n    renderBody() {\n        const { device, devices, groups, removeBind, addBind } = this.props;\n        const { bidingRules } = this.state;\n        return bidingRules\n            .map((rule, idx) => <BindRow\n                key={rule2key(rule)}\n                rule={rule}\n                groups={groups}\n                onUnBind={removeBind}\n                onBind={addBind}\n                device={device}\n                idx={idx}\n                devices={devices} />)\n    }\n    render() {\n        return <div className=\"container-fluid\">\n            {this.renderBody()}\n        </div>;\n    }\n}\n\nconst mappedProps = [\"devices\", \"groups\"];\nconst ConnectedBindPage = connect<BindProps, {}, GlobalState, PropsFromStore & BindApi>(mappedProps, actions)(Bind);\nexport default ConnectedBindPage\n","import React, { ChangeEvent, Component, InputHTMLAttributes } from \"react\";\nimport { Attribute, Cluster } from \"../../types\";\n\nimport Clusters from \"zigbee-herdsman/dist/zcl/definition/cluster\"\n\ninterface AttributePickerProps {\n    cluster: Cluster;\n    value: Attribute;\n    label?: string;\n    onChange: (attr: Attribute) => void;\n}\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class AttributePicker extends Component<AttributePickerProps & Omit<InputHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n\n    onChange = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange } = this.props;\n        const { value } = e.target;\n        onChange(value);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { cluster, onChange, label, value, ...rest } = this.props;\n        let attrs = [] as string[];\n        const clusterDefinition = Clusters[cluster];\n        if (clusterDefinition) {\n            attrs = Object.keys(clusterDefinition.attributes);\n        }\n        if (!attrs.includes(value)) {\n            attrs.push(value);\n        }\n        const options = attrs.map(attr => <option key={attr} value={attr}>{attr}</option>);\n        options.unshift(<option key=\"none\" hidden>Select attribute</option>)\n        return (<div className=\"form-group\">\n            {label && <label className=\"form-label\">{label}</label>}\n            <select disabled={attrs.length === 0} className=\"form-control\" onChange={this.onChange} value={value} {...rest}>\n                {options}\n            </select>\n        </div>)\n    }\n}\n","import React, { ChangeEvent, Component } from \"react\";\nimport { Device, Endpoint, Cluster, Attribute } from \"../../types\";\n\nimport EndpointPicker from \"../endpoint-picker\";\nimport ClusterPicker, { ClusterGroup, PickerType } from \"../cluster-picker\";\n\nimport { NiceReportingingRule } from \"./reporting\";\nimport { getEndpoints } from \"../../utils\";\nimport AttributePicker from \"../attribute-picker\";\nimport Clusters from \"zigbee-herdsman/dist/zcl/definition/cluster\"\nimport Button from \"../button\";\n\n\ninterface ReportingRowProps {\n    rule: NiceReportingingRule;\n    device: Device;\n    onApply(rule: NiceReportingingRule): void;\n}\ninterface ReportingRowState {\n    stateRule: NiceReportingingRule;\n}\n\nconst getClusters = (device: Device, endpoint: Endpoint, currentCluster: Cluster): ClusterGroup[] => {\n    let possibleClusters = Object.keys(Clusters);\n    let availableClusters = [] as Cluster[];\n    const ep = device.endpoints.get(endpoint);\n    if (ep) {\n        availableClusters = availableClusters.concat(ep.clusters.output);\n        possibleClusters = possibleClusters.filter(cluster => !availableClusters.includes(cluster))\n    }\n    if (!availableClusters.includes(currentCluster)) {\n        availableClusters.push(currentCluster);\n    }\n    return [\n        {\n            name: 'Avaliable',\n            clusters: availableClusters\n        },\n        {\n            name: 'Possible',\n            clusters: possibleClusters\n        }\n    ]\n}\nconst requiredRuleFileds = ['maximum_report_interval', 'minimum_report_interval', 'reportable_change', 'endpoint', 'cluster', 'attribute'];\nconst isValidRule = (rule: NiceReportingingRule): boolean => {\n    return requiredRuleFileds.every(field => rule[field] !== undefined)\n}\nexport default class ReportingRow extends Component<ReportingRowProps, ReportingRowState> {\n\n    state: Readonly<ReportingRowState> = {\n        stateRule: {} as NiceReportingingRule\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static getDerivedStateFromProps(props: Readonly<ReportingRowProps>, state: ReportingRowState): Partial<ReportingRowState> {\n        const { rule } = props;\n        return {\n            stateRule: rule\n        };\n    }\n\n    setSourceEp = (sourceEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.endpoint = sourceEp;\n        this.setState({ stateRule });\n    }\n    setCluster = (cluster: Cluster): void => {\n        const { stateRule } = this.state;\n        stateRule.cluster = cluster;\n        this.setState({ stateRule });\n    }\n\n    setAttribute = (attr: Attribute): void => {\n        const { stateRule } = this.state;\n        stateRule.attribute = attr;\n        this.setState({ stateRule });\n    }\n\n    changeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n        const { stateRule } = this.state;\n        const { name, value } = event.target;\n        stateRule[name] = value;\n        this.setState({ stateRule });\n    }\n\n    applyRule = (): void => {\n        const { onApply } = this.props;\n        const { stateRule } = this.state;\n        onApply(stateRule);\n    }\n\n    disableRule = (): void => {\n        const { onApply } = this.props;\n        const { stateRule } = this.state;\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        onApply({ ...stateRule, maximum_report_interval: 0xFFFF });\n    }\n\n\n    render() {\n        const { rule, device } = this.props;\n        const { stateRule } = this.state;\n        const sourceEndpoints = getEndpoints(device);\n\n        return (<div className=\"row pb-2 border-bottom\">\n\n            <div className=\"col-md-2\">\n                <EndpointPicker label=\"Endpoint\" disabled={!rule.isNew} values={sourceEndpoints} value={stateRule.endpoint} onChange={this.setSourceEp} />\n            </div>\n            <div className=\"col-md-2\">\n                <ClusterPicker label=\"Cluster\" disabled={!stateRule.endpoint} pickerType={PickerType.SINGLE} clusters={getClusters(device, stateRule.endpoint, stateRule.cluster)} value={stateRule.cluster} onChange={this.setCluster} />\n            </div>\n            <div className=\"col-md-2\">\n                <AttributePicker label=\"Attribute\" value={stateRule.attribute} cluster={stateRule.cluster} onChange={this.setAttribute} />\n            </div>\n            <div className=\"col-md-2\">\n                <div className=\"form-group\">\n                    <label className=\"form-label text-nowrap\">Min rep interval</label>\n                    <input onChange={this.changeHandler} value={stateRule.minimum_report_interval} required type=\"number\" name=\"minimum_report_interval\" className=\"form-control\" />\n                </div>\n            </div>\n            <div className=\"col-md-1\">\n                <div className=\"form-group\">\n                    <label className=\"form-label text-nowrap\">Max rep interval</label>\n                    <input onChange={this.changeHandler} value={stateRule.maximum_report_interval} required type=\"number\" name=\"maximum_report_interval\" className=\"form-control\" />\n                </div>\n            </div>\n            <div className=\"col-md-1\">\n                <div className=\"form-group\">\n                    <label className=\"form-label text-nowrap\">Min rep change</label>\n                    <input placeholder=\"Enter 65535 to disable reporting\" onChange={this.changeHandler} value={stateRule.reportable_change} required type=\"number\" name=\"reportable_change\" className=\"form-control\" />\n                </div>\n\n            </div>\n            <div className=\"col-md-2\">\n                <div className=\"form-group\">\n                    <label className=\"form-label\">Actions</label>\n                    <div className=\"form-group\">\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            <Button<void> disabled={!isValidRule(stateRule)} className=\"btn btn-primary\" onClick={this.applyRule}>Apply</Button>\n                            {!stateRule.isNew ? <Button<void> promt className=\"btn btn-danger\" onClick={this.disableRule}>Disable</Button> : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>);\n    }\n}\n","import React, { Component } from \"react\";\nimport { Device, Cluster, Endpoint, Attribute } from \"../../types\";\n\nimport actions, { ReportingApi } from \"../../actions/actions\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState, Group } from \"../../store\";\nimport ReportingRow from \"./reporting-row\";\n\n\ninterface PropsFromStore {\n    devices: Map<string, Device>;\n    groups: Group[];\n}\ninterface ReportingProps {\n    device: Device;\n}\n\nexport interface NiceReportingingRule {\n    id?: number;\n    isNew?: number;\n    endpoint: Endpoint;\n\n    cluster: Cluster;\n    attribute: Attribute;\n    minimum_report_interval: number;\n    maximum_report_interval: number;\n    reportable_change: number;\n}\nconst convertBidningsIntoNiceStructure = (device: Device): NiceReportingingRule[] => {\n    const reportings: NiceReportingingRule[] = [];\n    device.endpoints.forEach((description, endpoint) => {\n        description.configured_reportings\n            .forEach(reportingRule => {\n                reportings.push({\n                    ...reportingRule,\n                    endpoint\n                } as NiceReportingingRule)\n            });\n    });\n    return reportings;\n}\ntype ReportingState = {\n    reportingRules: NiceReportingingRule[];\n}\n\nconst rule2key = (rule: NiceReportingingRule): string => `${rule.isNew}${rule.endpoint}${rule.cluster}-${rule.attribute}`;\n\nexport class Reporting extends Component<ReportingProps & PropsFromStore & ReportingApi, ReportingState> {\n    state: ReportingState = {\n        reportingRules: []\n    }\n    static getDerivedStateFromProps(props: Readonly<ReportingProps & PropsFromStore>): Partial<ReportingState> {\n        const { device } = props;\n        // const endpoints = getEndpoints(device);\n        const reportingRules = convertBidningsIntoNiceStructure(device);\n\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        reportingRules.push({ isNew: Date.now(), reportable_change: 0, minimum_report_interval: 60, maximum_report_interval: 3600 } as NiceReportingingRule);\n        return {\n            reportingRules\n        };\n    }\n\n    onApply = (rule: NiceReportingingRule) => {\n        const { configureReport, device } = this.props;\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        const { cluster, endpoint, attribute, minimum_report_interval, maximum_report_interval, reportable_change } = rule;\n        configureReport(`${device.friendly_name}/${endpoint}`, {\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            cluster, attribute, minimum_report_interval, maximum_report_interval, reportable_change\n        });\n    }\n    render() {\n        const { device } = this.props;\n        const { reportingRules } = this.state;\n\n        return (\n            <div className=\"container-fluid\">\n                {\n                    reportingRules.map((rule) =>\n                        <ReportingRow\n                            key={rule2key(rule)}\n                            rule={rule}\n                            device={device}\n                            onApply={this.onApply}\n                        />)\n                }\n\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"devices\", \"groups\"];\nconst ConnectedReportingPage = connect<ReportingProps, {}, GlobalState, PropsFromStore & ReportingApi>(mappedProps, actions)(Reporting);\nexport default ConnectedReportingPage\n","import React, { Component } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport actions from \"../../actions/actions\";\nimport { StateApi } from \"../../actions/StateApi\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n\n}\ninterface StatesProps {\n    device: Device;\n}\n\nclass States extends Component<StatesProps & PropsFromStore & StateApi, {}> {\n    setStateValue = (name: string, value: unknown): void => {\n        const { setStateValue, device } = this.props;\n        setStateValue(device.friendly_name, name, value);\n    };\n\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {};\n        return <pre>{JSON.stringify(deviceState, null, 4)}</pre>;\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\nconst ConnectedDeviceStates = connect<StatesProps, {}, GlobalState, StateApi>(mappedProps, actions)(States);\nexport default ConnectedDeviceStates;\n","\nimport { GenericExposedFeature, BinaryFeature, NumericFeature, EnumFeature, LightFeature, CompositeFeature, SwitchFeature, CoverFeature, LockFeature, ColorFeature, TextualFeature, ClimateFeature } from \"../../types\";\n\nexport function isBinaryFeature(feature: GenericExposedFeature | CompositeFeature): feature is BinaryFeature {\n  return feature.type === \"binary\";\n}\n\nexport function isNumericFeature(feature: GenericExposedFeature | CompositeFeature): feature is NumericFeature {\n  return feature.type === \"numeric\";\n}\nexport function isTextualFeature(feature: GenericExposedFeature | CompositeFeature): feature is TextualFeature {\n  return feature.type === \"text\";\n}\n\nexport function isEnumFeature(feature: GenericExposedFeature | CompositeFeature): feature is EnumFeature {\n  return feature.type === \"enum\";\n}\n\nexport function isLightFeature(feature: GenericExposedFeature | CompositeFeature): feature is LightFeature {\n  return feature.type === \"light\";\n}\nexport function isSwitchFeature(feature: GenericExposedFeature | CompositeFeature): feature is SwitchFeature {\n  return feature.type === \"switch\";\n}\n\nexport function isCoverFeature(feature: GenericExposedFeature | CompositeFeature): feature is CoverFeature {\n  return feature.type === \"cover\";\n}\n\nexport function isLockFeature(feature: GenericExposedFeature | CompositeFeature): feature is LockFeature {\n  return feature.type === \"lock\";\n}\n\nexport function isCompositeFeature(feature: GenericExposedFeature | CompositeFeature): feature is CompositeFeature {\n  return feature.type === \"composite\" && (feature.name !== \"color_xy\" && feature.name !== \"color_hs\");\n}\n\nexport function isColorFeature(feature: GenericExposedFeature | CompositeFeature): feature is ColorFeature {\n  return feature.type === \"composite\" && (feature.name == \"color_xy\" || feature.name == \"color_hs\");\n}\n\nexport function isClimateFeature(feature: GenericExposedFeature | CompositeFeature): feature is ClimateFeature {\n  return feature.type === \"climate\";\n}\n","import { JSONSchema7 } from \"json-schema\";\n\nexport type DeviceType = \"EndDevice\" | \"Router\" | \"Coordinator\";\n\n\ninterface OTAState {\n    state: \"available\" | \"updating\";\n    progress: number;\n    remaining: number;\n}\nexport type RGBColor = {\n    r: number;\n    g: number;\n    b: number;\n}\nexport type HueSaturationColor = {\n    hue: number;\n    saturation: number;\n}\n\nexport type XYColor = {\n    x: number;\n    y: number;\n}\nexport type AnyColor = RGBColor | XYColor | HueSaturationColor;\nexport interface DeviceState {\n    last_seen?: string | number;\n    elapsed?: number;\n    linkquality: number;\n    update?: OTAState;\n    [k: string]: string | number | boolean | OTAState | AnyColor | undefined;\n}\n\nexport type Cluster = string;\nexport type Attribute = string;\n\nexport type Endpoint = string | number;\n\n\n\n\nexport interface Meta {\n    revision: number;\n    transportrev: number;\n    product: number;\n    majorrel: number;\n    minorrel: number;\n    maintrel: number;\n}\n\nexport interface Coordinator {\n    type: string;\n    meta: Meta;\n}\n\nexport interface Network {\n    channel: number;\n    pan_id: number;\n    extended_pan_id: number[];\n}\n\nexport interface DeviceConfig {\n    [k: string]: object | string | number | boolean;\n}\nexport interface Z2MConfig {\n    homeassistant: boolean;\n    advanced: {\n        elapsed: boolean;\n        last_seen: 'disable' | 'ISO_8601' | 'ISO_8601_local' | 'epoch';\n        legacy_api: boolean;\n    };\n    devices: {\n        [key: string]: DeviceConfig;\n    };\n    device_options: DeviceConfig;\n    [k: string]: object | string | number | boolean;\n}\nexport interface BridgeConfig {\n    version: string;\n    commit: string;\n    coordinator: Coordinator;\n    network: Network;\n    log_level: string;\n    permit_join: boolean;\n\n}\nexport type BridgeState = \"online\" | \"offline\";\nexport interface BridgeInfo {\n    config?: Z2MConfig;\n    config_schema: JSONSchema7;\n    permit_join: boolean;\n    commit?: string;\n    version?: string;\n    coordinator?: {\n        meta?: {\n            revision?: string;\n        };\n        type?: string;\n    };\n    device_options: object;\n    restart_required: boolean;\n}\n\nexport type PowerSource = \"Battery\" | \"Mains (single phase)\" | \"DC Source\";\n\nexport type GenericFeatureType = \"numeric\" | \"binary\" | \"enum\" | \"text\";\nexport type ComposeiteFeatureType = \"fan\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"composite\" | \"climate\";\nexport type AllPossibleFeatures = GenericFeatureType & ComposeiteFeatureType;\n\n\nexport enum FeatureAccessMode {\n    NONE,\n    ACCESS_STATE = 0b001,\n    ACCESS_WRITE = 0b010,\n    ACCESS_READ = 0b100,\n}\nexport interface GenericExposedFeature {\n    type: GenericFeatureType;\n    name: string;\n    unit?: \"string\";\n    access: FeatureAccessMode;\n    endpoint?: Endpoint;\n    property: string;\n    description?: string;\n}\n\nexport interface BinaryFeature extends GenericExposedFeature {\n    type: \"binary\";\n    value_on: unknown;\n    value_off: unknown;\n    value_toggle?: unknown;\n}\n\nexport interface CompositeFeature extends Omit<GenericExposedFeature, \"type\"> {\n    type: ComposeiteFeatureType;\n    features: (GenericExposedFeature | CompositeFeature)[];\n}\n\nexport type GenericOrCompositeFeature = GenericExposedFeature | CompositeFeature;\n\nexport interface NumericFeaturePreset {\n    name: string;\n    value: number;\n    description?: string;\n}\nexport interface NumericFeature extends GenericExposedFeature {\n    type: \"numeric\";\n    value_min?: number;\n    value_max?: number;\n    presets?: NumericFeaturePreset[];\n}\n\nexport interface TextualFeature extends GenericExposedFeature {\n    type: \"text\";\n}\n\nexport interface EnumFeature extends GenericExposedFeature {\n    type: \"enum\";\n    values: unknown[];\n}\n\nexport interface LightFeature extends CompositeFeature {\n    type: \"light\";\n}\n\nexport interface SwitchFeature extends CompositeFeature {\n    type: \"switch\";\n}\n\nexport interface CoverFeature extends CompositeFeature {\n    type: \"cover\";\n}\n\nexport interface LockFeature extends CompositeFeature {\n    type: \"lock\";\n}\nexport interface FanFeature extends CompositeFeature {\n    type: \"fan\";\n}\n\nexport interface ClimateFeature extends CompositeFeature {\n    type: \"climate\";\n}\n\nexport interface ColorFeature extends CompositeFeature {\n    type: \"composite\";\n    name: \"color_xy\" | \"color_hs\";\n    features: NumericFeature[];\n}\n\nexport interface DeviceDefinition {\n    description: string;\n    model: string;\n    supports: string;\n    vendor: string;\n    exposes: GenericExposedFeature[] | CompositeFeature[];\n    supports_ota: boolean;\n}\nexport interface ReportingConfig {\n    cluster: Cluster;\n    attribute: Attribute;\n    maximum_report_interval: number;\n    minimum_report_interval: number;\n    reportable_change: number;\n}\nexport interface EndpointDescription {\n    bindings: BindRule[];\n    configured_reportings: ReportingConfig[];\n    clusters: {\n        input: Cluster[];\n        output: Cluster[];\n    };\n}\n\nexport interface Device {\n    ieee_address: string;\n    type: DeviceType;\n    network_address: number;\n    model: string;\n    friendly_name: string;\n    power_source: PowerSource;\n    model_id: string;\n    interviewing: boolean;\n    interview_completed: boolean;\n    software_build_id: number;\n    supported: boolean;\n    definition?: DeviceDefinition;\n    date_code: string;\n    endpoints: Map<Endpoint, EndpointDescription>;\n}\n\nexport type ObjectType = \"device\" | \"group\";\nexport interface BindRule {\n    cluster: Cluster;\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n\n}\nexport type SortDirection = \"asc\" | \"desc\";\n\nexport interface TouchLinkDevice {\n    ieee_address: string;\n    channel: number;\n}\n","import React from \"react\";\n\nimport cx from \"classnames\";\ntype DisplayValueProps = {\n    name: string;\n    value: unknown;\n}\n\nconst booleansMap = {\n    contact: new Map<boolean, string | JSX.Element>([\n        [true, 'Closed'],\n        [false, 'Open'],\n    ]),\n\n    occupancy: new Map([\n        [true, 'Occupied'],\n        [false, 'Clear']\n    ]),\n\n    // eslint-disable-next-line @typescript-eslint/camelcase\n    water_leak: new Map<boolean, string | JSX.Element>([\n        [true, <span className={cx(\"text-danger\", \"animation-blinking\")} key=\"Leaking\">Leaking</span>],\n        [false, 'Clear']\n    ]),\n\n    tamper: new Map<boolean, string | JSX.Element>([\n        [true, <span className={cx(\"text-danger\", \"animation-blinking\")} key=\"tampered\">Tampered</span>],\n        [false, 'Clear']\n    ]),\n\n    _default: new Map([\n        [true, 'true'],\n        [false, 'false']\n    ])\n};\n\nexport function DisplayValue(props: DisplayValueProps) {\n    const { value, name } = props;\n    switch (typeof value) {\n        case 'boolean':\n            const mapValue = booleansMap[name] || booleansMap._default;\n            return <>{mapValue.get(value)}</>;\n        case \"undefined\":\n            return <>N/A</>;\n        case \"object\":\n            return <>{value === null ? 'null' : JSON.stringify(value)}</>;\n        case \"string\":\n            return <>{value === \"\" ? <small className=\"text-muted\">empty string</small> : value}</>;\n        default:\n            return <>{JSON.stringify(value)}</>;\n    }\n}\n","import React, { ChangeEvent, FunctionComponent } from \"react\";\n\nimport Button from \"../button\";\nimport { DisplayValue } from \"../display-value/DisplayValue\";\n\n\ntype ToggleProps = {\n    onChange(value: unknown): void;\n    value: unknown;\n    name: string;\n    valueOn: unknown;\n    valueOff: unknown;\n    minimal?: boolean;\n}\ntype ControlButtonProps = {\n    value: unknown;\n    onClick(value: unknown): void;\n    name: string;\n}\nconst ControlButton: FunctionComponent<ControlButtonProps> = (props) => {\n    const { value, onClick, name } = props;\n    return <Button<unknown> className=\"btn btn-link\" item={value} onClick={onClick}>\n        <DisplayValue value={value} name={name} />\n    </Button>\n}\n\nconst Toggle: FunctionComponent<ToggleProps> = (props) => {\n    const { onChange, value, valueOn, valueOff, minimal, name } = props;\n\n    const onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.checked ? valueOn : valueOff);\n    const valueExists = value !== undefined && value !== null;\n    const showOnOffButtons = !minimal || (minimal && !valueExists);\n    return (\n        <div>\n            {showOnOffButtons && <ControlButton value={valueOff} name={name} onClick={onChange} />}\n            {valueExists ? (\n                <div className=\"form-check form-switch form-check-inline align-middle me-0\">\n                    <input className=\"form-check-input\" type=\"checkbox\" checked={value === valueOn} onChange={onCheckboxChange} />\n                </div>\n            ) : <i className=\"fa fa-question\" title=\"Current value unknown\"></i>}\n            {showOnOffButtons && <ControlButton value={valueOn} name={name} onClick={onChange} />}\n\n        </div>\n    )\n}\n\nexport default Toggle;\n","\nimport React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { DeviceState, Device, Endpoint, GenericExposedFeature, CompositeFeature } from \"../../types\";\nimport { DisplayValue } from \"../display-value/DisplayValue\";\n\nimport { FetatureWrapperProps } from \"./composite/FeatureWrapper\";\n\nexport interface BaseFeatureProps<T> extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n    feature: T;\n    deviceState: DeviceState;\n    device: Device;\n    onChange(endpoint: Endpoint, value: object): void;\n    onRead(endpoint: Endpoint, value: object): void;\n    // featureWrapperClass: React.ComponentType<FetatureWrapperProps>;\n    featureWrapperClass: FunctionComponent<PropsWithChildren<FetatureWrapperProps>>;\n    minimal?: boolean;\n\n}\n\n\nexport const BaseViewer: FunctionComponent<BaseFeatureProps<GenericExposedFeature>> = (props) => {\n    const { feature: { property, unit, name}, deviceState } = props;\n    return <div><strong><DisplayValue value={deviceState[property]} name={name} /></strong>{unit ? <small className=\"text-muted ms-1\">{unit}</small> : null}</div>\n}\n\nexport const NoAccessError: FunctionComponent<BaseFeatureProps<GenericExposedFeature | CompositeFeature>> = ({ feature: { access } }) => <div className=\"alert alert-warning p-0\" role=\"alert\">Unknown acces {JSON.stringify(access, null, 4)}</div>;\n","import React, { FunctionComponent } from \"react\";\n\nimport { BinaryFeature, Endpoint, FeatureAccessMode } from \"../../../types\";\nimport Toggle from \"../../toggle\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype BinaryProps = BaseFeatureProps<BinaryFeature>;\n\nconst Binary: FunctionComponent<BinaryProps> = (props) => {\n    const { feature: { access, endpoint, name, property, value_off: valueOff, value_on: valueOn }, deviceState, onChange, minimal } = props;\n    if (access & FeatureAccessMode.ACCESS_WRITE) {\n        return <Toggle\n            onChange={(value) => onChange(endpoint as Endpoint, { [property]: value })}\n            value={deviceState[property]}\n            valueOn={valueOn}\n            valueOff={valueOff}\n            minimal={minimal}\n            name={name}\n        />\n    } else if (access & FeatureAccessMode.ACCESS_STATE) {\n        return <BaseViewer {...props} />\n    } else {\n        return <NoAccessError {...props} />\n    }\n}\nexport default Binary;\n","import React, { FunctionComponent } from \"react\";\nimport { ClimateFeature } from \"../../../types\";\n\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\n\ntype ClimateProps = BaseFeatureProps<ClimateFeature>\n\nconst Climate: FunctionComponent<ClimateProps> = (props) => <Composite type=\"climate\" {...props} />;\n\nexport default Climate;\n\n\n","import React, { FunctionComponent } from \"react\";\nimport { CoverFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\nconst stepsConfiguration = {\n  position: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, name: item + '' })),\n  tilt: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, name: item + '' }))\n};\n\ntype CoverProps = BaseFeatureProps<CoverFeature>\n\nconst Cover: FunctionComponent<CoverProps> = (props) => <Composite type=\"cover\" {...props} stepsConfiguration={stepsConfiguration} />;\n\nexport default Cover;\n\n\n","import React, { FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport * as convertColors from \"color-convert\";\nimport { AnyColor, XYColor, HueSaturationColor } from \"../../types\";\nimport Button from \"../button\";\n\n\ntype Payload = AnyColor;\n\nexport type ColorFormat = \"color_xy\" | \"color_hs\";\ntype ColorProps = {\n    value: Payload;\n    steps?: string[];\n    format: ColorFormat;\n    onChange(value: object): void;\n    minimal?: boolean;\n}\n\nexport const toRGB = (source: AnyColor, sourceFormat: ColorFormat): string => {\n    switch (sourceFormat) {\n        case \"color_xy\":\n            {\n                const { x = 0, y = 0 } = source as XYColor;\n                const z = 1.0 - x - y;\n                const Y = 1;\n                const X = (Y / y) * x;\n                const Z = (Y / y) * z;\n                return '#' + convertColors.xyz.hex([X * 100.0, Y * 100.0, Z * 100.0]);\n            }\n\n        case \"color_hs\":\n            {\n                const { hue = 0, saturation = 0 } = source as HueSaturationColor;\n                return '#' + convertColors.hsv.hex([hue, saturation, 100]);\n            }\n        default:\n            return '#FFFFFF';\n    }\n}\n\nconst rgbToTargetFormat = (source: string, targetFormat: ColorFormat): object => {\n    switch (targetFormat) {\n        case \"color_hs\":\n            const [hue, saturation, v] = convertColors.hex.hsv(source);\n            return { hue, saturation };\n\n\n        case \"color_xy\":\n            const [X, Y, Z] = convertColors.hex.xyz(source);\n            const x = X / (X + Y + Z);\n            const y = Y / (X + Y + Z);\n            return { x, y };\n\n        default:\n            return { hex: source };\n    }\n\n}\nconst pridePallete = ['#FF0018', '#FFA52C', '#FFFF41', '#008018', '#0000F9', '#86007D'];\nconst ColorEditor: FunctionComponent<ColorProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange' | 'value'>> = (props) => {\n\n    const { onChange, value = {} as AnyColor, format, steps = pridePallete, minimal, ...rest } = props;\n    const [currentColor, setCurrentColor] = useState<string>(toRGB(value, format));\n    useEffect(() => {\n        setCurrentColor(toRGB(value, format))\n    }, [value, format]);\n\n    return <>\n        {!minimal && <div className=\"btn-group me-2 float-start\">\n            {\n                steps.map(step => <Button<string>\n                    className=\"btn\"\n                    style={{ backgroundColor: step }}\n                    key={step}\n                    item={step}\n                    title={step}\n                    onClick={(item) => onChange(rgbToTargetFormat(item, format))}>&nbsp;&nbsp;&nbsp;</Button>)\n            }\n        </div>}\n        <input\n            type=\"color\"\n            className=\"form-control form-control-color\"\n            value={currentColor}\n            style={{ minWidth: 40 }}\n            onChange={e => {\n                onChange(rgbToTargetFormat(e.target.value, format))\n            }}\n            {...rest}\n        />\n    </>\n\n}\n\nexport default ColorEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { AnyColor, ColorFeature, Endpoint } from \"../../../../types\";\nimport ColorEditor from \"../../../color-editor/color-editor\";\n\nimport { BaseFeatureProps } from \"../../base\";\n\ntype ColorProps = BaseFeatureProps<ColorFeature>;\n\nconst Light: FunctionComponent<ColorProps> = (props) => {\n\n    const { deviceState, feature, onChange, minimal } = props;\n    const value = {};\n    for (const innerFeature of feature.features) {\n        value[innerFeature.name] = deviceState[feature.property]?.[innerFeature.property] ?? 0;\n    }\n    return <ColorEditor\n        onChange={(color) => onChange(feature.endpoint as Endpoint, { color })}\n        value={value as AnyColor}\n        format={feature.name}\n        minimal={minimal} />\n}\nexport default Light;\n","import React, { FunctionComponent } from \"react\";\nimport Button from \"../button\";\nimport cx from \"classnames\";\ntype Primitive = number | string;\n\nexport type ValueWithLabel = {\n    value: number;\n    name: string;\n    description?: string;\n};\n\nexport type ValueWithLabelOrPrimitive = ValueWithLabel | Primitive;\n\ntype EnumProps = {\n    value?: ValueWithLabelOrPrimitive;\n    onChange(value: unknown): void;\n    values: ValueWithLabelOrPrimitive[];\n    minimal?: boolean;\n}\n\n\nfunction isPrimitive(step: ValueWithLabelOrPrimitive): step is Primitive {\n    return step === null || [\"number\", \"string\", \"undefined\"].includes(typeof step);\n}\n\nconst EnumEditor: FunctionComponent<EnumProps> = (props) => {\n    const { onChange, values, value, minimal } = props;\n\n    if (minimal) {\n        const onSelectChange = (e) => {\n            const selectedValue = values.find(v => isPrimitive(v) ? v == e.target.value : v.value == e.target.value);\n            onChange(selectedValue);\n        }\n        return <select className=\"form-control\" onChange={onSelectChange}\n            value={isPrimitive(value as ValueWithLabelOrPrimitive) ? value as string : (value as ValueWithLabel).value}>\n            <option key=\"hidded\" hidden>----</option>\n            {values.map(v => <option\n                key={isPrimitive(v) ? v : v.name}\n                value={isPrimitive(v) ? v : v.value}>{isPrimitive(v) ? v : v.name}\n            </option>)}\n        </select>\n\n    }\n    return <div className=\"btn-group me-2\">\n        {\n            values.map(v => <Button<ValueWithLabelOrPrimitive>\n                className={cx(\"btn btn-outline-secondary\", { active: isPrimitive(v) ? v === value : v.value == (isPrimitive(value as ValueWithLabelOrPrimitive) ? value : (value as ValueWithLabel).value) })}\n                onClick={item => onChange(item)}\n                key={isPrimitive(v) ? v : v.name}\n                item={isPrimitive(v) ? v : v.value}\n                title={isPrimitive(v) ? v as string : v.description}\n            >{isPrimitive(v) ? v : v.name}</Button>)\n        }\n    </div>;\n}\nexport default EnumEditor;\n","\n\nimport React, { FunctionComponent } from \"react\";\n\nimport { Endpoint, EnumFeature, FeatureAccessMode } from \"../../../types\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype EnumProps = BaseFeatureProps<EnumFeature>\n\nconst Enum: FunctionComponent<EnumProps> = (props) => {\n  const { onChange, feature: { access, name, values, endpoint, property }, deviceState, minimal } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <EnumEditor\n      onChange={(value) => onChange(endpoint as Endpoint, { [name]: value })}\n      values={values as unknown as ValueWithLabelOrPrimitive[]}\n        value={deviceState[property] as ValueWithLabelOrPrimitive}\n        minimal={minimal}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Enum;\n","import React, { FunctionComponent } from \"react\";\nimport { LightFeature } from \"../../../types\";\nimport { scale } from \"../../../utils\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LightProps = BaseFeatureProps<LightFeature>\nconst stepsConfiguration = {\n  brightness: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: scale(item, [0, 100], [0, 255]), name: item + '%' })),\n  'color_temp': [1000, 2000, 3000, 4000, 5000, 6500].map<ValueWithLabelOrPrimitive>(kelvin => ({ value: 1000000.0 / kelvin, name: kelvin + 'K' }))\n};\n\nconst Light: FunctionComponent<LightProps> = (props) => <Composite type=\"light\" {...props} stepsConfiguration={stepsConfiguration} />;\nexport default Light;\n","import React, { FunctionComponent } from \"react\";\nimport { LockFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LockProps = BaseFeatureProps<LockFeature>\n\nconst Lock: FunctionComponent<LockProps> = (props) => <Composite type=\"lock\" {...props} />\nexport default Lock;","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport { randomString } from \"../../utils\";\nimport cx from \"classnames\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../enum-editor/enum-editor\";\n\n\n\ntype RangeProps = {\n    value: number;\n    unit?: string;\n    onChange(value: object | number): void;\n    steps?: ValueWithLabelOrPrimitive[];\n    minimal?: boolean;\n}\n\nconst RangeEditor: FunctionComponent<RangeProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n    const { onChange, value, min, max, unit, steps, minimal, ...rest } = props;\n    const [id, setId] = useState<string>(randomString(5));\n    const [currentValue, setCurrentValue] = useState<number>(value)\n\n    useEffect(() => {\n        setCurrentValue(value)\n    }, [value]);\n\n    const showRange = min !== undefined && max !== undefined;\n    return <div className=\"input-group align-items-center\">\n        {!minimal && steps ? <EnumEditor values={steps} onChange={onChange} value={currentValue} /> : null}\n        {showRange ? <input\n            id={id}\n            min={min}\n            max={max}\n            type=\"range\"\n            className=\"form-range form-control border-0\"\n            value={currentValue}\n            onChange={e => setCurrentValue(e.target.valueAsNumber)}\n            onMouseUp={(() => onChange(currentValue))}\n            {...rest}\n        /> : null}\n        {(!minimal || !showRange) && <input\n            type=\"number\"\n            className={cx(\"form-control\", { 'ms-1': showRange })}\n            value={currentValue}\n            onChange={e => setCurrentValue(e.target.valueAsNumber)}\n            onBlur={() => onChange(currentValue)}\n            {...rest}\n            style={showRange ? { 'maxWidth': '100px' } : {}}\n        />}\n        {(!minimal && unit) ? <span className=\"input-group-text\" style={{ 'minWidth': '66px' }}>{unit}</span> : null}\n    </div>\n}\n\nexport default RangeEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { Endpoint, FeatureAccessMode, NumericFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport RangeEditor from \"../../range-editor/range-editor\";\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ninterface NumericProps extends BaseFeatureProps<NumericFeature> {\n    steps?: ValueWithLabelOrPrimitive[];\n}\n\nconst Numeric: FunctionComponent<NumericProps> = (props) => {\n    const { feature: { presets, access, endpoint, name, property, unit, value_max: valueMax, value_min: valueMin }, deviceState, steps, onChange, minimal } = props;\n    if (access & FeatureAccessMode.ACCESS_WRITE) {\n        return <RangeEditor\n            onChange={(value) => onChange(endpoint as Endpoint, { [name]: value })}\n            value={deviceState[property] as number ?? 0}\n            min={valueMin}\n            max={valueMax}\n            steps={presets && presets.length ? presets as ValueWithLabelOrPrimitive[] : steps}\n            unit={unit}\n            minimal={minimal}\n        />\n    } else if (access & FeatureAccessMode.ACCESS_STATE) {\n        return <BaseViewer {...props} />\n    } else {\n        return <NoAccessError {...props} />\n    }\n}\n\nexport default Numeric;\n","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\n\ntype TextualProps = {\n  value: string;\n  unit?: string;\n  onChange(value: string): void;\n}\n\nconst TextualEditor: FunctionComponent<TextualProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n  const { onChange, value, unit, ...rest } = props;\n  const [currentValue, setCurrentValue] = useState<string>(value)\n\n  useEffect(() => {\n    setCurrentValue(value)\n  }, [value]);\n\n  return <Fragment>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.value)}\n      onBlur={() => onChange(currentValue)}\n      {...rest}\n    />\n    {unit ? <span className=\"input-group-text\" style={{'minWidth': '66px'}}>{unit}</span> : null}\n  </Fragment>\n}\n\nexport default TextualEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { Endpoint, FeatureAccessMode, TextualFeature } from \"../../../types\";\nimport TextualEditor from \"../../textual-editor/textual-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype TextualProps = BaseFeatureProps<TextualFeature>;\n\nconst Textual: FunctionComponent<TextualProps> = (props) => {\n  const { feature: { access, endpoint, name, property }, deviceState, onChange } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <TextualEditor\n      onChange={(value) => onChange(endpoint as Endpoint, { [name]: value })}\n      value={deviceState[property] as string ?? \"\"}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Textual;","import React, { FunctionComponent } from \"react\";\nimport { SwitchFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype SwitchProps = BaseFeatureProps<SwitchFeature>\n\nconst Switch: FunctionComponent<SwitchProps> = (props) => <Composite type=\"switch\" {...props} />;\n\nexport default Switch;","import React, { FunctionComponent, PropsWithChildren } from \"react\";\n\nimport { CompositeFeature, Device, DeviceState, Endpoint, GenericExposedFeature } from \"../../../types\";\nimport { isBinaryFeature, isNumericFeature, isTextualFeature, isEnumFeature, isLightFeature, isSwitchFeature, isCoverFeature, isLockFeature, isColorFeature, isClimateFeature, isCompositeFeature } from \"../../device-page/type-guards\";\nimport Binary from \"../binary/binary\";\nimport Climate from \"../climate/climate\";\nimport Cover from \"../cover/cover\";\nimport Color from \"../composite/color/color\";\nimport Enum from \"../enum/enum\";\nimport Light from \"../light/light\";\nimport Lock from \"../lock/lock\";\nimport Numeric from \"../numeric/numeric\";\nimport Textual from \"../textual/textual\";\nimport Composite from \"./composite\";\nimport Switch from \"../switch/switch\";\nimport { FetatureWrapperProps } from \"./FeatureWrapper\";\n\n\ninterface FeatureProps extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n    feature: CompositeFeature | GenericExposedFeature;\n    deviceState: DeviceState;\n    device: Device;\n    stepsConfiguration?: object;\n    onChange(endpoint: Endpoint, value: object): void;\n    onRead(endpoint: Endpoint, value: object): void;\n    featureWrapperClass: FunctionComponent<PropsWithChildren<FetatureWrapperProps>>;\n    minimal?: boolean;\n}\n\nexport const Feature = (props: FeatureProps) => {\n\n    const { feature, device, deviceState, stepsConfiguration, onRead, onChange, featureWrapperClass: FeatureWrapper, minimal } = props;\n\n    const genericParams = { key: JSON.stringify(feature), device, deviceState, onChange, onRead, featureWrapperClass: FeatureWrapper, minimal };\n    const wrapperParams = { key: JSON.stringify(feature), feature, onRead, deviceState };\n\n    if (isBinaryFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams} >\n            <Binary feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isNumericFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Numeric feature={feature} {...genericParams}\n                steps={stepsConfiguration?.[feature.name]}\n            />\n        </FeatureWrapper>\n    } else if (isTextualFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Textual feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isEnumFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Enum feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isLightFeature(feature)) {\n        return <Light feature={feature} {...genericParams} />\n    } else if (isSwitchFeature(feature)) {\n        return <Switch feature={feature} {...genericParams} />\n    } else if (isCoverFeature(feature)) {\n        return <Cover feature={feature} {...genericParams} />\n    } else if (isLockFeature(feature)) {\n        return <Lock feature={feature} {...genericParams} />\n    } else if (isColorFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Color feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    } else if (isClimateFeature(feature)) {\n        return <Climate feature={feature} {...genericParams} />\n    } else if (isCompositeFeature(feature)) {\n        return <FeatureWrapper {...wrapperParams}>\n            <Composite type=\"composite\" feature={feature} {...genericParams} />\n        </FeatureWrapper>\n    }\n    return (<FeatureWrapper {...wrapperParams}>\n        <pre>{JSON.stringify(feature, null, 4)}</pre>\n    </FeatureWrapper>);\n}\n","import React, { Component } from \"react\";\nimport { CompositeFeature, Endpoint } from \"../../../types\";\nimport { isCompositeFeature } from \"../../device-page/type-guards\";\nimport { BaseFeatureProps } from \"../base\";\nimport Button from \"../../button\";\nimport groupBy from \"lodash/groupBy\";\nimport { Feature } from \"./Feature\";\nimport cx from \"classnames\";\n\ntype CompositeType = \"composite\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"fan\" | \"climate\";\n\ninterface CompositeProps extends BaseFeatureProps<CompositeFeature> {\n    type: CompositeType;\n    stepsConfiguration?: object;\n    minimal?: boolean;\n}\n\ninterface CompositeState {\n    [key: string]: unknown;\n}\n\n\n\nexport default class Composite extends Component<CompositeProps, CompositeState> {\n    state: Readonly<CompositeState> = {}\n    onChange = (endpoint: Endpoint, value: object) => {\n        const { onChange, feature } = this.props;\n        if (isCompositeFeature(feature)) {\n            this.setState(value)\n        } else {\n            onChange(endpoint, value);\n        }\n    }\n    onApplyClick = () => {\n        const { onChange, feature: { endpoint, property } } = this.props;\n        onChange(endpoint as Endpoint, property ? { [property]: this.state } : this.state);\n    }\n\n    onRead = (endpoint: Endpoint, property: object) => {\n        const { onRead, feature } = this.props;\n        if (isCompositeFeature(feature)) {\n            onRead(endpoint, { [feature.property]: property })\n        } else {\n            onRead(endpoint, property);\n        }\n    }\n    render() {\n        const MAGIC_NO_ENDPOINT = 'MAGIC_NO_ENDPOINT';\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { feature, device, deviceState, onRead: _onRead, onChange: _onChange, featureWrapperClass, minimal } = this.props;\n        const { features } = feature;\n\n        const doGroupingByEndpoint = !minimal;\n        let result = [] as JSX.Element[];\n        if (doGroupingByEndpoint) {\n            const groupedFeatures = groupBy(features, f => f.endpoint ?? MAGIC_NO_ENDPOINT);\n\n            if (groupedFeatures[MAGIC_NO_ENDPOINT]) {\n                result.push(...groupedFeatures[MAGIC_NO_ENDPOINT].map(f => <Feature\n                    key={f.name + f.endpoint}\n                    feature={f}\n                    device={device}\n                    deviceState={deviceState}\n                    onChange={this.onChange}\n                    onRead={this.onRead}\n                    featureWrapperClass={featureWrapperClass}\n                    minimal={minimal}\n                />));\n                delete groupedFeatures[MAGIC_NO_ENDPOINT];\n            }\n            for (const epName in groupedFeatures) {\n                const featuresGroup = groupedFeatures[epName];\n                result.push(<div key={epName}>Endpoint: {epName}<div className=\"ps-4\">{...featuresGroup.map(f => <Feature\n                    key={f.name + f.endpoint}\n                    feature={f}\n                    device={device}\n                    deviceState={deviceState}\n                    onChange={this.onChange}\n                    onRead={this.onRead}\n                    featureWrapperClass={featureWrapperClass}\n                    minimal={minimal}\n                />)}</div></div>);\n            }\n        } else {\n            result = result.concat(features.map(f => <Feature\n                key={f.name + f.endpoint}\n                feature={f}\n                device={device}\n                deviceState={deviceState}\n                onChange={this.onChange}\n                onRead={this.onRead}\n                featureWrapperClass={featureWrapperClass}\n                minimal={minimal}\n            />));\n        }\n\n\n        if (isCompositeFeature(feature)) {\n            result.push(<div key={feature.name}><Button className={cx('btn btn-primary float-end', {'btn-sm': minimal})} onClick={this.onApplyClick}>Apply</Button></div>)\n        }\n        return result;\n\n    }\n}\n","import React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { CompositeFeature, GenericExposedFeature, Endpoint, FeatureAccessMode, DeviceState } from \"../../../types\";\nimport Button from \"../../button\";\n\n\nexport type FetatureWrapperProps = {\n    feature: CompositeFeature | GenericExposedFeature;\n    deviceState?: DeviceState;\n    onRead(endpoint: Endpoint, property: object): void;\n};\nexport const FeatureWrapper: FunctionComponent<PropsWithChildren<FetatureWrapperProps>> = (props) => {\n    const { children, feature, onRead } = props;\n    const isColor = feature.name?.startsWith(\"color_\"); //hardcode for color\n    const isReadable = (feature.access & FeatureAccessMode.ACCESS_READ) || isColor;\n    return <div className=\"row border-bottom py-1 w-100\">\n        <div className=\"col-12 col-md-3\">\n            <label className=\"col-form-label w-100\">\n                <div className=\"d-flex justify-content-between\">\n                    <strong title={JSON.stringify(feature)}>{feature.name}</strong>\n                    {isReadable ? (\n                        <Button<CompositeFeature | GenericExposedFeature> item={feature} onClick={(item) => {\n                            onRead(feature.endpoint as Endpoint, { [item.property]: \"\" })\n                        }} className=\"btn btn-primary btn-sm\"><i className=\"fa fa-sync\"></i></Button>\n                    ) : null}\n                </div>\n                {feature.description ? <small className=\"d-block text-muted\">{feature.description}</small> : null}\n            </label>\n        </div>\n        <div className=\"col-12 col-md-9 d-flex align-items-center\">\n            {children}\n        </div>\n    </div>\n}\n\n\n\n","import React, { Component } from \"react\";\nimport { CompositeFeature, Device, DeviceState } from \"../../types\";\nimport actions from \"../../actions/actions\";\nimport { StateApi } from \"../../actions/StateApi\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\nimport Composite from \"../features/composite/composite\";\nimport { FeatureWrapper } from \"../features/composite/FeatureWrapper\";\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\ninterface ExposesProps {\n    device: Device;\n}\nclass Exposes extends Component<ExposesProps & PropsFromStore & StateApi, {}> {\n    render() {\n        const { device, deviceStates, setDeviceState, getDeviceState } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {} as DeviceState;\n        if (device.definition?.exposes) {\n            return <Composite feature={{ features: device.definition.exposes } as CompositeFeature} type=\"composite\" device={device} deviceState={deviceState}\n                onChange={(endpoint, value) => {\n                    setDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                }}\n                onRead={(endpoint, value) => {\n                    getDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                }}\n                featureWrapperClass={FeatureWrapper}\n            />\n        } else {\n            return \"Device doesn't expose anything\"\n        }\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceExposes = connect<ExposesProps, {}, GlobalState, StateApi>(mappedProps, actions)(Exposes);\nexport default ConnectedDeviceExposes;\n","import React, { Component, FunctionComponent } from \"react\";\nimport { Device } from \"../../types\";\nimport treeStyle from \"./tree.css\";\n\ninterface ClustersProps {\n    device: Device;\n}\ntype ClustersComp = {\n    label: string;\n    clusters: string[];\n}\nconst ClustersComp: FunctionComponent<ClustersComp> = (props) => {\n    const { label, clusters } = props;\n    if (clusters.length) {\n        return (<li>\n            <span>{label}</span>\n            <ul>{clusters.map(cluster => <li key={cluster}><span>{cluster}</span></li>)}</ul>\n        </li>)\n    } else {\n        return null;\n    }\n\n}\nexport default class Clusters extends Component<ClustersProps, {}> {\n    render() {\n        const { device } = this.props;\n        return <dl className={`${treeStyle.tree} row`}>\n            <ul>\n                <li>\n                    <span>{device.ieee_address}</span>\n                    <ul>\n                        {Array.from(device.endpoints.entries()).map(([epName, epData]) => {\n                            return (\n                                <li key={epName}>\n                                    <span>Endpoint <strong>{epName}</strong></span>\n                                    <ul>\n                                        <ClustersComp label=\"Output clusters\" clusters={epData.clusters.output} />\n                                        <ClustersComp label=\"Input clusters\" clusters={epData.clusters.input} />\n                                    </ul>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </li>\n            </ul>\n        </dl>\n\n    }\n}\n\n","/* eslint-disable react/display-name */\nimport React, { Component } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions from \"../../actions/actions\";\nimport { DeviceApi } from \"../../actions/DeviceApi\";\nimport Form from '@rjsf/bootstrap-4';\nimport { JSONSchema7 } from \"json-schema\"\ntype DeviceSettingsProps = {\n    device: Device;\n}\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\nconst uiSchema = {\n    \"ui:order\": [\"friendly_name\", \"retain\", \"retention\", \"qos\", \"filtered_attributes\", \"*\"]\n};\nexport class DeviceSettings extends Component<DeviceSettingsProps & GlobalState & PropsFromStore & DeviceApi, {}> {\n    updateConfig = ({ formData }): void => {\n        const { setDeviceOptions, device } = this.props;\n        setDeviceOptions(device.ieee_address, formData);\n    }\n    render() {\n        const { bridgeInfo: { config_schema: configSchema, config }, device } = this.props;\n        const deviceConfig = { ...config?.device_options, ...config?.devices[device.ieee_address] };\n\n        return <Form schema={configSchema.definitions?.device as JSONSchema7}\n            formData={deviceConfig}\n            onSubmit={this.updateConfig}\n            uiSchema={uiSchema}\n        />;\n\n    }\n}\n\nconst mappedProps = [\"deviceStates\", \"bridgeInfo\"];\n\nconst ConnectedDeviceSettingsPage = connect<DeviceSettingsProps, {}, GlobalState, PropsFromStore & DeviceApi>(mappedProps, actions)(DeviceSettings);\nexport default ConnectedDeviceSettingsPage;\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport DeviceInfo from \"./info\";\nimport Bind from \"./bind\";\nimport Reporting from \"./reporting\";\nimport States from \"./states\";\nimport ConnectedDeviceExposes from \"./exposes\";\nimport Clusters from \"./clusters\";\nimport DeviceSettings from \"./settings\";\nimport styles from \"./style.css\";\nimport { Device } from \"../../types\";\n\n\ntype UrlParams = {\n    dev: string;\n    tab?: TabName;\n};\ntype DevicePageProps = RouteComponentProps<UrlParams>;\n\n\ntype TabName = \"info\" | \"bind\" | \"state\" | \"exposes\" | \"clusters\" | \"reporting\" | \"settings\";\nconst getDeviceLinks = (dev: string) => ([\n    {\n        title: 'About',\n        url: `/device/${dev}/info`\n    },\n    {\n        title: 'Exposes',\n        url: `/device/${dev}/exposes`\n    },\n    {\n        title: 'Bind',\n        url: `/device/${dev}/bind`\n    },\n    {\n        title: 'Reporting',\n        url: `/device/${dev}/reporting`\n    },\n    {\n        title: 'Settings',\n        url: `/device/${dev}/settings`\n    },\n    {\n        title: 'State',\n        url: `/device/${dev}/state`\n    },\n    {\n        title: 'Clusters',\n        url: `/device/${dev}/clusters`\n    }\n]);\nexport class DevicePage extends Component<DevicePageProps & GlobalState, {}> {\n    renderContent() {\n        const { match, devices } = this.props;\n        const { tab, dev } = match.params;\n        const device = devices.get(dev) as Device;\n\n        switch (tab) {\n            case \"info\":\n                return <DeviceInfo device={device} />;\n            case \"bind\":\n                return <Bind device={device} />;\n            case \"state\":\n                return <States device={device} />;\n            case \"exposes\":\n                return <ConnectedDeviceExposes device={device} />;\n            case \"clusters\":\n                return <Clusters device={device} />\n            case \"reporting\":\n                return <Reporting device={device} />\n            case \"settings\":\n                return <DeviceSettings device={device} />\n            default:\n                return <Redirect to={`/device/${dev}/info`} />;\n        }\n\n    }\n    render() {\n        const { devices, match } = this.props;\n        const { dev } = match.params;\n        const device = devices.get(dev);\n        if (!device) {\n            return <div className=\"h-100 d-flex justify-content-center align-items-center\">Unknown device</div>\n        }\n        const links = getDeviceLinks(dev);\n\n        return (<>\n            <h1 className=\"h3\">{device.friendly_name}</h1>\n\n            <div className=\"tab\">\n                <ul className=\"nav nav-tabs\">\n                    {links.map(link => <li key={link.title} className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className={`nav-link ${styles['small-nav']}`} to={link.url}>{link.title}</NavLink>\n                    </li>)}\n                </ul>\n                <div className=\"tab-content\">\n                    <div className=\"tab-pane fade show active\">\n                        {this.renderContent()}\n                    </div>\n                </div>\n            </div>\n\n        </>);\n\n    }\n}\nconst devicePageWithRouter = withRouter(DevicePage);\nconst mappedProps = [\"devices\"];\nconst ConnectedDevicePage = connect<{}, {}, GlobalState, {}>(mappedProps, actions)(devicePageWithRouter);\nexport default ConnectedDevicePage;\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\n\nimport { GlobalState } from \"../../store\";\nimport Button from \"../button\";\nimport { TouchLinkDevice } from \"../../types\";\nimport { genDeviceDetailsLink } from \"../../utils\";\nimport cx from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport { TouchlinkApi } from \"../../actions/TouchlinkApi\";\n\n\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class TouchlinkPage extends Component<TouchlinkApi & GlobalState, {}> {\n    onIdentifyClick = (device: TouchLinkDevice): void => {\n        const { touchlinkIdentify } = this.props;\n        touchlinkIdentify(device);\n    }\n\n    onResetClick = (device: TouchLinkDevice): void => {\n        const { touchlinkReset } = this.props;\n        touchlinkReset(device);\n    }\n\n    renderTouchlinkDevices() {\n        const { touchlinkDevices, devices, touchlinkIdentifyInProgress, touchlinkResetInProgress } = this.props;\n        const touchlinkInProgress = touchlinkIdentifyInProgress || touchlinkResetInProgress;\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table align-middle\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">ieee_address</th>\n                            <th scope=\"col\">friendly_name</th>\n                            <th scope=\"col\">channel</th>\n                            <th scope=\"col\">&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {touchlinkDevices.map((touchlinkDevice, idx) => (\n                            <tr key={touchlinkDevice.ieee_address}>\n                                <td>{idx + 1}</td>\n                                <td>{\n                                    devices.has(touchlinkDevice.ieee_address) ?\n                                        (<Link to={genDeviceDetailsLink(touchlinkDevice.ieee_address)}>{touchlinkDevice.ieee_address}</Link>) : touchlinkDevice.ieee_address}</td>\n                                <td>{devices.get(touchlinkDevice.ieee_address)?.friendly_name}</td>\n                                <td>{touchlinkDevice.channel}</td>\n                                <td>\n                                    <div className=\"btn-group float-right\" role=\"group\" aria-label=\"Basic example\">\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Identify\" className=\"btn btn-primary\" onClick={this.onIdentifyClick}><i\n                                            className={cx(\"fa\", { \"fa-exclamation-triangle\": !touchlinkIdentifyInProgress, \"fas fa-circle-notch fa-spin\": touchlinkIdentifyInProgress })} /></Button>\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Factory reset\" className=\"btn btn-danger\" onClick={this.onResetClick}><i\n                                            className={cx(\"fa\", { \"fa-broom\": !touchlinkResetInProgress, \"fas fa-circle-notch fa-spin\": touchlinkResetInProgress })} /></Button>\n                                    </div>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n    renderNoDevices() {\n        const { touchlinkScan } = this.props;\n        return (\n            <Button className=\"btn btn-primary mx-auto d-block\" onClick={touchlinkScan}>Scan</Button>\n        );\n    }\n    render() {\n        const { touchlinkDevices, touchlinkScanInProgress, touchlinkScan } = this.props;\n        return (\n            <div className=\"card\">\n                <div className=\"card-header allign-middle\">\n                    Detected {touchlinkDevices.length} touchlink devices.\n                        <Button title=\"Rescan\" className=\"btn btn-primary btn-sm float-right\" onClick={touchlinkScan}><i className=\"fa fa-sync\" /></Button>\n                </div>\n                <div className=\"card-body\">\n                    {touchlinkScanInProgress ? (\n                        <div className=\"d-flex justify-content-center\">\n                            <div className=\"spinner-border\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                    ) : touchlinkDevices.length === 0 ? this.renderNoDevices() : this.renderTouchlinkDevices()}\n\n                </div>\n            </div>\n        );\n    }\n}\nconst mappedProps = [\"touchlinkDevices\", \"devices\", \"touchlinkScanInProgress\", \"touchlinkIdentifyInProgress\", \"touchlinkResetInProgress\"];\n\nexport default connect<{}, {}, GlobalState, TouchlinkApi>(mappedProps, actions)(TouchlinkPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions, { UtilsApi } from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Button from \"../button\";\nimport Form from '@rjsf/bootstrap-4';\nimport cx from \"classnames\";\nimport { JSONSchema7 } from \"json-schema\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport uiSchemas from \"./uiSchema.json\";\nimport { BridgeApi } from \"../../actions/BridgeApi\";\n\n\n\ntype SettingsTab = \"settings\" | \"bridge\" | \"about\" | \"tools\" | \"donate\";\n\ntype SettigsKeys = string;\ntype UrlParams = {\n    tab?: SettingsTab;\n};\ntype SettingsPageProps = RouteComponentProps<UrlParams>;\n\ndeclare const FRONTEND_VERSION: string; //injected by webpack.DefinePlugin\n\ntype SettingsPageState = {\n    keyName: SettigsKeys;\n}\n\nconst ROOT_KEY_NAME = 'main';\n\nconst ingoredFields = ['groups', 'devices', 'device_options', 'ban', 'whitelist', 'map_options'];\nconst validJsonSchemasAsTabs = ['object', 'array'];\n\nconst removePropertiesFromSchema = (names: string[], schema: JSONSchema7 = {}, config: object = {}) => {\n\n    if (schema.required) {\n        schema.required = schema.required.filter(item => names.includes(item));\n    }\n\n    for (const name of names) {\n        if (schema.properties) {\n            delete schema.properties[name];\n        }\n        delete config[name];\n    }\n\n    return { schema, config };\n}\n\nconst tabs = [\n    {\n        title: 'Settings',\n        url: `/settings/settings`\n    },\n    {\n        title: 'Tools',\n        url: `/settings/tools`\n    },\n    {\n        title: 'About',\n        url: `/settings/about`\n    },\n    {\n        title: 'Raw',\n        url: `/settings/bridge`\n    },\n    {\n        title: <i className=\"fa fa-donate\" />,\n        url: '/settings/donate'\n    }\n];\n\n\nconst isValidKeyToRenderAsTab = (key: string, value: JSONSchema7): boolean => (validJsonSchemasAsTabs.includes(value.type as string) && !ingoredFields.includes(key)) || (value && value.oneOf ? value.oneOf.length > 0 : false);\nexport class SettingsPage extends Component<SettingsPageProps & BridgeApi & GlobalState & UtilsApi, SettingsPageState> {\n    state = {\n        keyName: ROOT_KEY_NAME\n    }\n    renderCategoriesTabs() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                {tabs.map(tab => <li key={tab.url} className=\"nav-item\">\n                    <NavLink className=\"nav-link\" activeClassName=\"active\" to={tab.url}>{tab.title}</NavLink>\n                </li>)}\n            </ul>\n        )\n    }\n    render() {\n        return (\n            <div className=\"tab\">\n                {this.renderCategoriesTabs()}\n                <div className=\"tab-content h-100 p-0 p-sm-3\">\n                    <div className=\"tab-pane fade show active\">\n                        {this.renderSwitcher()}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    renderSwitcher() {\n        const { match } = this.props;\n        const { tab } = match.params;\n        switch (tab) {\n            case \"tools\":\n                return this.renderTools();\n            case \"bridge\":\n                return this.renderBridgeInfo();\n            case \"about\":\n                return this.renderAbout();\n            case \"settings\":\n                return this.renderSettings();\n            case \"donate\":\n                return this.renderDonate();\n            default:\n                return <Redirect to={`/settings/settings`} />;\n        }\n    }\n    renderAbout() {\n        const { bridgeInfo } = this.props;\n        const isZigbee2mqttDevVersion = bridgeInfo.version?.match(/^\\d+\\.\\d+\\.\\d+$/) === null;\n        const zigbee2mqttVersion = isZigbee2mqttDevVersion ?\n            bridgeInfo.version :\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/Koenkk/zigbee2mqtt/releases/tag/${bridgeInfo.version}`}>{bridgeInfo.version}</a>;\n        const zigbee2mqttCommit = bridgeInfo.commit ?\n            <>commit: <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/Koenkk/zigbee2mqtt/commit/${bridgeInfo.commit}`}>{bridgeInfo.commit}</a></> :\n            null;\n\n        const rows = [\n            { title: 'Zigbee2MQTT version', content: <>{zigbee2mqttVersion} {zigbee2mqttCommit}</> },\n            { title: 'Coordinator type', content: <>{bridgeInfo.coordinator?.type ?? 'Unknown'}</> },\n            { title: 'Coordinator revision', content: <>{bridgeInfo.coordinator?.meta?.revision ?? 'Unknown'}</> },\n            { title: 'Frontend version', content: FRONTEND_VERSION },\n        ];\n\n        return <div className=\"p-3\">{rows.map(row => <dl key={row.title} className=\"row\">\n            <dt className=\"col-sm-3\">{row.title}</dt>\n            <dd className=\"col-sm-9\">{row.content}</dd>\n        </dl>)}</div>;\n\n    }\n    renderBridgeInfo() {\n        const { bridgeInfo } = this.props;\n        return <div className=\"p-3\"><pre>{JSON.stringify(bridgeInfo, null, 4)}</pre></div>\n\n    }\n\n    renderTools() {\n        const { exportState, restartBridge } = this.props;\n        return <div className=\"p-3\">\n            <Button className=\"btn btn-primary d-block mt-2\" onClick={exportState}>Download state</Button>\n            <Button className=\"btn btn-danger d-block mt-2\" onClick={restartBridge} promt>Restart Zigbee2MQTT</Button>\n        </div>\n    }\n    onSettingsSave = ({ formData }) => {\n        const { updateBridgeConfig } = this.props;\n        const { keyName } = this.state;\n        if (keyName === ROOT_KEY_NAME) {\n            updateBridgeConfig(formData);\n        } else {\n            updateBridgeConfig({ [keyName]: formData });\n        }\n    }\n\n    getSettingsTabs() {\n        const { bridgeInfo: { config_schema: configSchema = { properties: {} } } } = this.props;\n        const tabs = Object.entries<JSONSchema7>(configSchema.properties as unknown as ArrayLike<JSONSchema7>)\n            .filter(([key, value]) => isValidKeyToRenderAsTab(key, value))\n            .map(([key, value]) => ({\n                name: key,\n                title: value.title ?? key\n            }));\n        tabs.unshift({\n            name: ROOT_KEY_NAME,\n            title: 'Main'\n        });\n        return tabs;\n    }\n    getSettingsInfo() {\n        const { keyName } = this.state;\n        const { bridgeInfo: { config_schema: configSchema, config: originalConfig } } = this.props;\n\n        let configAndSchema = removePropertiesFromSchema(ingoredFields, cloneDeep(configSchema), cloneDeep(originalConfig) as object);\n\n        let currentSchema: JSONSchema7 = configAndSchema.schema;\n        let currentConfig = configAndSchema.config[keyName] as object;\n\n        if (keyName === ROOT_KEY_NAME) {\n            const ignoreTabNames = this.getSettingsTabs().map(tab => tab.name);\n            configAndSchema = removePropertiesFromSchema(ignoreTabNames, configAndSchema.schema, configAndSchema.config)\n            currentSchema = configAndSchema.schema;\n            currentConfig = configAndSchema.config;\n        } else {\n            currentConfig = configAndSchema.config[keyName] as object;\n            if (configAndSchema.schema.properties) {\n                currentSchema = configAndSchema.schema.properties[keyName] as JSONSchema7;\n            }\n        }\n        return { currentSchema, currentConfig };\n    }\n    renderSettingsTabs() {\n        const tabs = this.getSettingsTabs();\n        const { keyName } = this.state;\n        return <div className=\"nav nav-pills\">\n            {\n                tabs.map(tab =>\n                    <li key={tab.name} className=\"nav-item\">\n                        <a className={cx(\"nav-link\", { 'bg-primary active': keyName === tab.name })} aria-current=\"page\" href=\"#\" onClick={(e) => { this.setState({ keyName: tab.name }); e.preventDefault() }}>{tab.title}</a>\n                    </li>\n                )\n            }\n        </div>;\n    }\n    renderSettings() {\n        const { keyName } = this.state;\n        const { currentSchema, currentConfig } = this.getSettingsInfo();\n        return <div className=\"tab\">\n            {this.renderSettingsTabs()}\n            <div className=\"tab-content\">\n                <div className=\"tab-pane active\">\n                    <Form key={keyName} schema={currentSchema}\n                        formData={currentConfig}\n                        onSubmit={this.onSettingsSave}\n                        uiSchema={uiSchemas[keyName]}\n                    />\n                </div>\n            </div>\n        </div>\n\n    }\n\n    renderDonate() {\n        return <div>\n            <a href=\"https://www.buymeacoffee.com/nurikk\">\n                <img src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a beer&emoji=🍺&slug=nurikk&button_colour=FFDD00&font_colour=000000&font_family=Arial&outline_colour=000000&coffee_colour=ffffff\" />\n            </a>\n        </div>;\n    }\n}\nconst SettingsPageWithRouter = withRouter(SettingsPage);\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedSettingsPage = connect<{}, {}, GlobalState, BridgeApi>(mappedProps, actions)(SettingsPageWithRouter);\nexport default ConnectedSettingsPage;\n","import * as React from 'react';\n\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport Button from './button';\nexport type Theme = \"light\" | \"dark\";\n\n\n\ntype ThemeSwitcherProps = {\n    saveCurrentTheme(theme: Theme): void;\n}\nexport const ThemeSwitcher = (props: ThemeSwitcherProps) => {\n    const { saveCurrentTheme } = props;\n    const { switcher, themes, status, currentTheme } = useThemeSwitcher();\n    const isDarkMode = currentTheme === 'dark';\n\n    if (status === 'loading') {\n        return <div>Loading styles...</div>;\n    }\n    const toggleDarkMode = (light: boolean) => {\n        const theme = light ? themes.light : themes.dark;\n        saveCurrentTheme(theme as Theme);\n        switcher({ theme });\n    };\n    return (\n        <Button<boolean> item={isDarkMode} className=\"btn btn-info\" onClick={toggleDarkMode}>{isDarkMode ? '🌑' : `🌞`}</Button>\n    );\n};\n","import React, { FunctionComponent, RefObject, useRef, useState } from 'react';\n\nimport { GlobalState } from '../../store';\nimport actions, { ThemeActions } from '../../actions/actions';\nimport { connect } from 'unistore/react';\nimport Button from '../button';\nimport cx from \"classnames\";\nimport { Link, NavLink } from 'react-router-dom';\nimport useComponentVisible from '../../hooks/useComponentVisible';\nimport { Device } from '../../types';\nimport style from \"./style.css\";\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { BridgeApi } from '../../actions/BridgeApi';\nimport {  ThemeSwitcher } from '../theme-switcher';\n\nconst urls = [\n    {\n        href: '/',\n        title: 'Devices',\n        exact: true\n    },\n    {\n        href: '/dashboard',\n        title: 'Dashboard'\n    },\n    {\n        href: '/map',\n        title: 'Map'\n    },\n    {\n        href: '/settings',\n        title: 'Settings'\n    },\n    {\n        href: '/groups',\n        title: 'Groups'\n    },\n    {\n        href: '/ota',\n        title: 'OTA'\n    },\n    {\n        href: '/touchlink',\n        title: 'Touchlink'\n    },\n    {\n        href: '/logs',\n        title: 'Logs'\n    },\n    {\n        href: '/extensions',\n        title: 'Extensions'\n    }\n];\ntype StartStopJoinButtonProps = {\n    devices: Map<string, Device>;\n}\nconst StartStopJoinButton: FunctionComponent<StartStopJoinButtonProps & Pick<BridgeApi, 'setPermitJoin'> & Pick<GlobalState, 'bridgeInfo'>> = ({ devices, setPermitJoin, bridgeInfo }) => {\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n    const [selectedRouter, setSelectedRouter] = useState<Device>({} as Device);\n    const routers: JSX.Element[] = [];\n    const selectAndHide = (device: Device) => { setSelectedRouter(device); setIsComponentVisible(false) }\n    devices.forEach((device) => {\n        if (device.type == \"Router\") {\n            routers.push(<li key={device.friendly_name}>\n                <Button<Device> item={device} className=\"dropdown-item\" onClick={selectAndHide}>{device.friendly_name}</Button>\n            </li>)\n        }\n    });\n    const onBtnClick = () => {\n        setPermitJoin(!bridgeInfo.permit_join, selectedRouter);\n    }\n    return (\n        <div className=\"btn-group text-nowrap\">\n            <button onClick={onBtnClick} type=\"button\" className=\"btn btn-outline-secondary\">{bridgeInfo.permit_join ? \"Disable join\" : \"Permit join\"} ({selectedRouter?.friendly_name ?? \"All\"})</button>\n            {routers.length ? (<><Button<boolean> type=\"button\" onClick={setIsComponentVisible} item={!isComponentVisible} className=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                <span className=\"visually-hidden\">Toggle Dropdown</span>\n            </Button>\n                <ul ref={ref as RefObject<HTMLUListElement>} className={cx('dropdown-menu', style['scrollable-menu'], { show: isComponentVisible })}>\n                    <li key='all'>\n                        <Button className=\"dropdown-item\" onClick={selectAndHide}>All</Button>\n                    </li>\n                    {routers}\n                </ul></>) : null}\n\n        </div>\n    );\n}\n\ntype PropsFromStore = {\n    devices: Map<string, Device>;\n    bridgeInfo: object;\n}\n\nconst NavBar: FunctionComponent<PropsFromStore & BridgeApi & Pick<GlobalState, 'bridgeInfo'> & ThemeActions> = (props) => {\n    const { devices, setPermitJoin, bridgeInfo, restartBridge, setTheme } = props;\n    const ref = useRef<HTMLDivElement>();\n    const [navbarIsVisible, setnavbarIsVisible] = useState<boolean>(false);\n    useOnClickOutside(ref, () => {\n        setnavbarIsVisible(false);\n    });\n    return (<nav className=\"navbar navbar-expand-md navbar-light\">\n        <div ref={ref as React.MutableRefObject<HTMLDivElement>} className=\"container-fluid\">\n            <Link onClick={() => setnavbarIsVisible(false)} to=\"/\">Zigbee2MQTT</Link>\n            <button onClick={() => { setnavbarIsVisible(!navbarIsVisible) }} className=\"navbar-toggler\" type=\"button\">\n                <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div className={cx(\"navbar-collapse collapse\", { show: navbarIsVisible })}>\n                <ul className=\"navbar-nav\">\n                    {\n                        urls.map(url =>\n                            <li key={url.href} className=\"nav-item\">\n                                <NavLink onClick={() => setnavbarIsVisible(false)} exact={url.exact} className=\"nav-link\" to={url.href} activeClassName=\"active\">\n                                    {url.title}\n                                </NavLink>\n                            </li>)\n                    }\n                </ul>\n                <StartStopJoinButton\n                    devices={devices}\n                    setPermitJoin={setPermitJoin}\n                    bridgeInfo={bridgeInfo}\n                />\n            </div>\n            {bridgeInfo.restart_required ? <Button onClick={restartBridge} promt className=\"btn btn-danger me-1\">Restart</Button> : null}\n\n                <ThemeSwitcher saveCurrentTheme={setTheme} />\n\n        </div>\n    </nav>)\n}\nconst mappedProps = [\"bridgeInfo\", \"devices\"];\nconst ConnectedNavBar = connect<{}, {}, PropsFromStore, BridgeApi>(mappedProps, actions)(NavBar);\nexport default ConnectedNavBar;\n\n","import { useState, useEffect, useRef } from 'react';\n\nexport default function useComponentVisible(initialIsVisible: boolean) {\n    const [isComponentVisible, setIsComponentVisible] = useState(\n        initialIsVisible\n    );\n    const ref = useRef<HTMLElement>(null);\n\n    const handleHideDropdown = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            setIsComponentVisible(false);\n        }\n    };\n\n    const handleClickOutside = (event: MouseEvent) => {\n        if (ref.current && !ref.current.contains(event.target as Node)) {\n            setIsComponentVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleHideDropdown, true);\n        document.addEventListener(\"click\", handleClickOutside, true);\n        return () => {\n            document.removeEventListener(\"keydown\", handleHideDropdown, true);\n            document.removeEventListener(\"click\", handleClickOutside, true);\n        };\n    });\n\n    return { ref, isComponentVisible, setIsComponentVisible };\n}","// extracted by mini-css-extract-plugin\nexport default {\"scrollable-menu\":\"_36Sntvyj-B3gg7Xj6xLUaY\"};","import {  useEffect } from 'react';\n\nexport function useOnClickOutside(ref, handler) {\n  useEffect(\n    () => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}","import React, { ChangeEvent, useState } from \"react\";\nimport { useInputChange } from \"../../hooks/useInputChange\";\nimport Button from \"../button\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\n\ninterface RenameGroupFormProps {\n  name: string;\n  onRename(oldName: string, newName: string): void;\n}\n\nexport function RenameGroupForm(props: RenameGroupFormProps) {\n  const { name, onRename } = props;\n  const [modalIsOpened, setModalIsOpened] = useState(false);\n\n  const [renameGroupForm, handleInputChange] = useInputChange({ friendlyName: name });\n\n  return (\n    <>\n      <Modal isOpen={modalIsOpened}>\n        <ModalHeader>\n          <h3>Rename group</h3>\n          <small>{name}</small>\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Friendly name</label>\n            <input name=\"friendlyName\" onChange={handleInputChange as (event: ChangeEvent<HTMLInputElement>) => void} type=\"text\" className=\"form-control\" value={renameGroupForm['friendlyName']} />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setModalIsOpened(false)}>Close</button>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => { onRename(name, renameGroupForm['friendlyName']); setModalIsOpened(false) }}>Save changes</button>\n        </ModalFooter>\n      </Modal>\n      <Button<void> className=\"btn btn-primary\" onClick={() => setModalIsOpened(true)} title=\"Rename group\"><i className=\"fa fa-edit\" /></Button>\n    </>\n  )\n}\n\n","import { ChangeEvent, useState } from 'react'\ntype KVP = { [key: string]: string };\nexport const useInputChange = (initialState: KVP) => {\n  const [input, setInput] = useState<KVP>(initialState);\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => setInput({\n    ...input,\n    [e.currentTarget.name]: e.currentTarget.value\n  })\n\n  return [input, handleInputChange]\n}","import React, { ChangeEvent, Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\n\nimport { GlobalState, Group, GroupAddress } from \"../../store\";\nimport Button from \"../button\";\nimport { Device, Endpoint } from \"../../types\";\nimport { genDeviceDetailsLink, getEndpoints } from \"../../utils\";\nimport style from './style.css';\nimport cx from 'classnames';\nimport EndpointPicker from \"../endpoint-picker\";\nimport DevicePicker from \"../device-picker\";\nimport { Link } from \"react-router-dom\";\nimport DeviceImage from \"../device-image\";\nimport { RenameGroupForm } from \"./RenameForm\";\nimport { GroupsApi } from \"../../actions/GroupsApi\";\n\n\ninterface GroupsPageState {\n    newGroupName: string;\n    newGroupId?: number;\n}\n\n\ninterface AddDeviceToGroupProps {\n    devices: Map<string, Device>;\n    group: Group;\n    addDeviceToGroup(deviceName: string, groupName: string): void;\n}\n\ninterface AddDeviceToGroupState {\n    device?: string;\n    endpoint?: Endpoint;\n}\n\ninterface DeviceGroupRowProps {\n    rowNumber: number;\n    groupAddress: GroupAddress;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroupRow extends Component<DeviceGroupRowProps, {}> {\n    getDeviceObj(): Device {\n        const { groupAddress, devices } = this.props;\n        return devices.get(groupAddress.ieee_address) as Device;\n    }\n    render() {\n        const { rowNumber, groupAddress, removeDeviceFromGroup } = this.props;\n        const device = this.getDeviceObj();\n\n        return <tr>\n            <th scope=\"row\">{rowNumber + 1}</th>\n            <td className={style[\"device-pic\"]}>\n                <DeviceImage className={cx(style[\"device-image\"])} device={device} />\n            </td>\n            <td><Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link></td>\n            <td>{groupAddress.ieee_address}</td>\n            <td>{groupAddress.endpoint}</td>\n            <td>{device && <Button<string> promt item={device.friendly_name} onClick={removeDeviceFromGroup} className=\"btn btn-danger btn-sm float-right\"><i className=\"fa fa-trash\" /></Button>}</td>\n        </tr>;\n    }\n}\ninterface DeviceGroupPropts {\n    group: Group;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(groupFriendlyName: string, deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroup extends Component<DeviceGroupPropts, {}> {\n    onRemove = (deviceFriendlyName: string): void => {\n        const { group, removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(group.friendly_name, deviceFriendlyName);\n    }\n    render() {\n        const { group, devices } = this.props;\n        return <table className=\"table table-sm\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Pic</th>\n                    <th scope=\"col\">friendlyName</th>\n                    <th scope=\"col\">ieee_addr</th>\n                    <th scope=\"col\">Endpoint</th>\n                    <th scope=\"col\" className=\"text-right\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                {group.members.map((groupMemebershipInfo, idx) => <DeviceGroupRow key={groupMemebershipInfo.ieee_address} removeDeviceFromGroup={this.onRemove} rowNumber={idx} devices={devices} groupAddress={groupMemebershipInfo} />)}\n            </tbody>\n        </table>;\n    }\n}\n\nclass AddDeviceToGroup extends Component<AddDeviceToGroupProps, AddDeviceToGroupState> {\n    state: Readonly<AddDeviceToGroupState> = {};\n\n\n    onSubmit = (): void => {\n        const { addDeviceToGroup, group } = this.props;\n        const { device, endpoint } = this.state;\n\n        addDeviceToGroup(endpoint ? `${device}/${endpoint}` : device as string, group.friendly_name);\n\n    }\n    onDeviceSelect = (device: Device): void => {\n        const endpoints = getEndpoints(device);\n        this.setState({ device: device.ieee_address, endpoint: endpoints[0] });\n    }\n\n    onEpChange = (endpoint: Endpoint): void => {\n        this.setState({ endpoint });\n    }\n    render() {\n        const { device, endpoint } = this.state;\n        const { devices } = this.props;\n        const deviceObj = devices.get(device as string) as Device;\n\n        const endpoints = getEndpoints(deviceObj);\n\n        return <div className=\"row row-cols-lg-auto align-items-center\">\n\n            <DevicePicker type=\"device\" value={device as string} devices={devices} onChange={this.onDeviceSelect} />\n            <EndpointPicker values={endpoints} value={endpoint as Endpoint} onChange={this.onEpChange} />\n\n            <Button<void> type=\"button\" onClick={this.onSubmit} className=\"btn btn-primary\">Add to group</Button>\n        </div>\n\n    }\n}\n\nexport class GroupsPage extends Component<GroupsApi & GlobalState, GroupsPageState> {\n    state: GroupsPageState = {\n        newGroupName: '',\n        newGroupId: undefined\n    }\n\n\n    changeHandler = (event: ChangeEvent<HTMLInputElement>): void => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value } as unknown as GroupsPageState);\n    }\n\n    onGroupCreateSubmit = (): void => {\n        const { newGroupName, newGroupId } = this.state;\n        const { createGroup } = this.props;\n        createGroup(newGroupName, newGroupId);\n    }\n\n    renderGroupCreationForm() {\n        const { newGroupName, newGroupId } = this.state;\n        return (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div className=\"input-group\">\n                        <label htmlFor=\"newGroupName\" className=\"sr-only\">Group name</label>\n                        <input onChange={this.changeHandler} value={newGroupName} required type=\"text\" name=\"newGroupName\" className=\"form-control\" id=\"newGroupName\" placeholder=\"new group name\" />\n\n                        <label htmlFor=\"newGroupName\" className=\"sr-only\">Group id</label>\n                        <input onChange={this.changeHandler} value={newGroupId === undefined ? '' : newGroupId} type=\"number\" name=\"newGroupId\" className=\"form-control\" id=\"newGroupId\" placeholder=\"enter group id if necessary\" />\n\n                        <Button<void> onClick={this.onGroupCreateSubmit} className=\"btn btn-primary form-control\">Create group</Button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    removeGroup = (friendlyName: string): void => {\n        const { removeGroup } = this.props;\n        removeGroup(friendlyName);\n    }\n    removeDeviceFromGroup = (groupFriendlyName: string, deviceFriendlyName: string): void => {\n        const { removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(deviceFriendlyName, groupFriendlyName);\n    }\n    renameGroup = (oldName: string, newName: string) => {\n        const { renameGroup } = this.props;\n        renameGroup(oldName, newName);\n    }\n    renderGroups() {\n        const { groups, devices, addDeviceToGroup } = this.props;\n        return groups.map(group => (\n            <div key={group.id} className=\"card\">\n                <div className=\"card-header\" id={`heading${group.id}`}>\n                    <h5 className=\"mb-0\">\n                        <button className=\"btn btn-link btn-sm\">\n                            {group.friendly_name} (#{group.id})\n                                    </button>\n                        <div className=\"btn-group float-right btn-group-sm\" role=\"group\" aria-label=\"Basic example\">\n                            <RenameGroupForm name={group.friendly_name} onRename={this.renameGroup} />\n                            <Button<string> promt title=\"Remove group\" item={group.friendly_name} onClick={this.removeGroup} className=\"btn btn-danger\"><i className=\"fa fa-trash\" /></Button>\n                        </div>\n                    </h5>\n                </div>\n\n\n                <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                        <DeviceGroup group={group} devices={devices} removeDeviceFromGroup={this.removeDeviceFromGroup} />\n                    </div>\n                </div>\n\n                <div className=\"card-footer\">\n                    <AddDeviceToGroup addDeviceToGroup={addDeviceToGroup} devices={devices} group={group} />\n                </div>\n            </div>\n        )).reverse()\n\n    }\n\n    render() {\n        return <>\n            {this.renderGroupCreationForm()}\n            {this.renderGroups()}\n        </>\n\n    }\n}\n\nconst mappedProps = [\"groups\", \"devices\"];\nconst ConnectedGroupsPage = connect<{}, {}, GlobalState, GroupsApi>(mappedProps, actions)(GroupsPage);\nexport default ConnectedGroupsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"device-pic\":\"_2p1XqBiO9XLlCB-lT60VCH\",\"device-image\":\"_3Z1i8qUrV2sErNF0__pVZt\"};","import React, { MouseEvent, ThHTMLAttributes} from \"react\";\n\n\n\nimport { SortDirection } from \"../../types\";\nimport isEqual from \"lodash/isEqual\";\n\n\ninterface ActionTHProps<T> {\n    column: T | T[];\n    current: T | T[];\n    currentDirection: SortDirection;\n    onClick?(arg1: T | T[]): void;\n}\n\nexport default class ActionTH<T> extends React.Component<ActionTHProps<T> & Omit<ThHTMLAttributes<HTMLTableHeaderCellElement>, 'onClick'>, {}> {\n    onClick = (event: MouseEvent): void => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { column, onClick } = this.props;\n        onClick && onClick(column);\n    };\n\n    renderArrow () {\n        const { currentDirection, current, column } = this.props;\n        if (isEqual(current, column)) {\n            if (currentDirection == \"asc\") {\n                return <i className={`fa fa-sort-amount-down-alt`} />;\n            }\n            return <i className={`fa fa-sort-amount-down`} />;\n        }\n        return <i className={`fa fa-sort-amount-down invisible`} />;\n    }\n\n    render () {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, onClick, current, column, currentDirection, ...rest } = this.props;\n        return (<th {...rest}>\n            <span className=\"btn btn-link\" onClick={this.onClick}>{children}</span>\n            {this.renderArrow()}\n        </th>);\n    }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"action-column\":\"_1AmFhCTIk_ifBlEJGnLJuK\",\"device-pic\":\"_1KD_wxLENsmTnroATY4BrA\",\"device-image\":\"_1kMXLbhsSotmS-uYUbIFl0\"};","\nimport React from \"react\";\nimport { SortColumn } from \".\";\nimport { SortDirection } from \"../../types\";\nimport ActionTH from \"./ActionTH\";\nimport style from \"./style.css\";\n\ntype TableHeaderProps = {\n    sortColumn: SortColumn | SortColumn[];\n    sortDirection: SortDirection;\n    onSortChange(column: SortColumn | SortColumn[], sortDir?: SortDirection): void;\n    lastSeenIsAvaliable: boolean;\n}\nexport const TableHeader = (props: TableHeaderProps) => {\n    const { sortColumn, sortDirection, onSortChange, lastSeenIsAvaliable } = props;\n\n    return (\n        <thead>\n            <tr className=\"text-nowrap\">\n                <th>#</th>\n                <th>Pic</th>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.friendly_name\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Friendly name</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.ieee_address\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>IEEE address</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.definition.vendor\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange} title=\"definition.vendor\">Manufacturer</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.definition.model\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Model</ActionTH>\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.linkquality\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>LQI</ActionTH>\n                {lastSeenIsAvaliable && <ActionTH<SortColumn> className={style[\"action-column\"]} column={[\"state.last_seen\", \"state.elapsed\"]}\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Last seen</ActionTH>}\n                <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.battery\"\n                    currentDirection={sortDirection} current={sortColumn}\n                    onClick={onSortChange}>Power</ActionTH>\n                <th>&nbsp;</th>\n            </tr>\n        </thead>\n    )\n}\n","\nimport React from \"react\";\nimport style from \"./style.css\";\nimport { Link } from \"react-router-dom\";\nimport { Device, DeviceState } from \"../../types\";\nimport { genDeviceDetailsLink, lastSeen, toHex } from \"../../utils\";\nimport  DeviceControlGroup from \"../device-control\";\nimport DeviceImage from \"../device-image\";\nimport { DisplayValue } from \"../display-value/DisplayValue\";\nimport PowerSource from \"../power-source\";\nimport { VendorLink, ModelLink } from \"../vendor-links/verndor-links\";\ntype TableRowProps = {\n    device: Device;\n    deviceState: DeviceState;\n    id: number;\n    lastSeenIsAvaliable: boolean;\n}\nexport const TableRow = (props: TableRowProps) => {\n    const { device, deviceState, id, lastSeenIsAvaliable } = props;\n    return <tr key={device.friendly_name} title={deviceState.update?.state == \"available\" ? 'Avaliable OTA update' : device.definition?.description}>\n    <td className=\"font-weight-bold\">{id + 1}</td>\n    <td className={style[\"device-pic\"]}>\n        <DeviceImage className={style[\"device-image\"]} device={device} deviceStatus={deviceState} />\n    </td>\n    <td>\n        <Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link>\n    </td>\n    <td>{device.ieee_address} ({toHex(device.network_address, 4)})</td>\n    <td className=\"text-truncate text-nowrap position-relative\"><VendorLink device={device} /></td>\n    <td title={device?.definition?.description}><ModelLink device={device} /></td>\n    <td><DisplayValue value={deviceState?.linkquality} name=\"linkquality\"/></td>\n    {lastSeenIsAvaliable && <td>{lastSeen(deviceState.last_seen, deviceState.elapsed)}</td>}\n    <td className=\"text-left\">\n        <PowerSource source={device.power_source} battery={deviceState?.battery as number} batteryLow={deviceState.battery_low as boolean} />\n    </td>\n    <td>\n        <DeviceControlGroup device={device} state={deviceState} />\n    </td>\n</tr>\n}\n","import React, { Component, Fragment } from \"react\";\n\nimport { Device, SortDirection, DeviceState } from \"../../types\";\nimport { Notyf } from \"notyf\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions from \"../../actions/actions\";\n\nimport isEqual from \"lodash/isEqual\";\nimport orderBy from \"lodash/orderBy\";\nimport Spinner from \"../spinner\";\nimport { TableHeader } from \"./TableHeader\";\nimport { TableRow } from \"./TableRow\";\n\n\n\nexport type SortColumn =\n    | \"device.network_address\"\n    | \"device.friendly_name\"\n    | \"device.ieee_address\"\n    | \"device.definition.vendor\"\n    | \"device.definition.model\"\n    | \"state.linkquality\"\n    | \"state.last_seen\"\n    | \"state.elapsed\"\n    | \"state.battery\";\n\n\ninterface ZigbeeTableState {\n    sortDirection: SortDirection;\n    sortColumn: SortColumn | SortColumn[];\n    currentTime: number;\n    sortedTableData: ZigbeeTableData[];\n    error?: object;\n}\n\ninterface ZigbeeTableData {\n    device: Device;\n    state: DeviceState;\n}\n\nconst storeKey = \"ZigbeeTableState\";\nconst longLoadingTimeout = 15 * 1000;\n\nexport class ZigbeeTable extends Component<GlobalState, ZigbeeTableState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortDirection: \"desc\",\n            sortColumn: \"device.network_address\",\n            currentTime: Date.now(),\n            sortedTableData: []\n        };\n    }\n\n    restoreState(): void {\n        const { sortColumn, sortDirection } = this.state;\n\n        const storedState = localStorage.getItem(storeKey);\n        if (storedState) {\n            try {\n                const restored: Pick<ZigbeeTableState, \"sortDirection\" | \"sortColumn\"> = JSON.parse(storedState);\n                this.setState(restored);\n            } catch (e) {\n                new Notyf().error(e.toString());\n            }\n        } else {\n            this.onSortChange(sortColumn, sortDirection);\n        }\n    }\n\n    saveState = (): void => {\n        const { sortDirection, sortColumn } = this.state;\n        const storeData = {\n            sortDirection,\n            sortColumn\n        };\n        //in private mode localstorage access can throw exceptions\n        try {\n            localStorage.setItem(storeKey, JSON.stringify(storeData));\n        } catch (e) {\n            new Notyf().error(e.toString());\n        }\n    };\n    handleLongLoading = () => {\n        const { devices } = this.props;\n\n        if (devices.size == 0) {\n            const error = <Fragment>\n                <strong>Loading devices takes too long time.</strong>\n                <div>Consider reading <a href=\"https://www.zigbee2mqtt.io/information/frontend.html\">documentation</a></div>\n            </Fragment>;\n            this.setState({ error });\n        }\n    }\n    componentDidMount(): void {\n        setTimeout(this.handleLongLoading, longLoadingTimeout);\n        this.restoreState();\n    }\n\n    static getDerivedStateFromProps(props: Readonly<GlobalState>, state: ZigbeeTableState): Partial<ZigbeeTableState> {\n        const { sortColumn, sortDirection } = state;\n        const { devices, deviceStates } = props;\n        const tableData: ZigbeeTableData[] = [];\n        devices.forEach((device) => {\n            if (device.type !== \"Coordinator\") {\n                tableData.push({\n                    device,\n                    state: deviceStates.get(device.friendly_name) ?? {} as DeviceState\n\n                });\n            }\n        });\n        return { sortedTableData: orderBy<ZigbeeTableData>(tableData, sortColumn, [sortDirection]) };\n    }\n\n\n    onSortChange = (column: SortColumn | SortColumn[], sortDir?: SortDirection): void => {\n        const { sortColumn } = this.state;\n        let { sortDirection } = this.state;\n\n        if (isEqual(sortColumn, column)) {\n            if (sortDir) {\n                sortDirection = sortDir;\n            } else if (sortDirection == \"asc\") {\n                sortDirection = \"desc\";\n            } else {\n                sortDirection = \"asc\";\n            }\n        }\n\n        this.setState({ sortColumn: column, sortDirection }, this.saveState);\n    };\n\n    renderError() {\n        const { error } = this.state;\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <div className=\"d-flex align-items-center\">\n                {error}\n            </div>\n        </div>);\n    }\n\n    render() {\n        const { error } = this.state;\n        const { devices } = this.props;\n        if (devices.size) {\n            return this.renderDevicesTable();\n        }\n        if (error) {\n            return this.renderError();\n        }\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <Spinner />\n        </div>);\n    }\n    lastSeenIsAvaliable(): boolean {\n        const { bridgeInfo } = this.props;\n        return bridgeInfo?.config?.advanced?.elapsed || bridgeInfo?.config?.advanced?.last_seen != \"disable\";\n    }\n\n\n\n    renderDevicesTable() {\n        const { sortedTableData, sortColumn, sortDirection } = this.state;\n        return (<div className=\"card\">\n            <div className=\"table-responsive\">\n                <table className=\"table align-middle\">\n                    <TableHeader\n                        lastSeenIsAvaliable={this.lastSeenIsAvaliable()}\n                        sortColumn={sortColumn}\n                        sortDirection={sortDirection}\n                        onSortChange={this.onSortChange}\n                    />\n                    <tbody>\n                        {sortedTableData.map(({ device, state }, id) => <TableRow\n                            key={device.friendly_name}\n                            device={device}\n                            deviceState={state}\n                            id={id}\n                            lastSeenIsAvaliable={this.lastSeenIsAvaliable()}\n                        />)}\n                    </tbody>\n                </table>\n            </div>\n        </div>);\n    }\n}\n\nconst mappedProps = [\"devices\", \"deviceStates\", \"bridgeInfo\"];\nconst ConnectedZigbeePage = connect<{}, ZigbeeTableState, GlobalState, {}>(mappedProps, actions)(ZigbeeTable);\nexport default ConnectedZigbeePage;\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport cx from \"classnames\";\nimport escapeRegExp from \"lodash/escapeRegExp\";\nimport { BridgeApi } from \"../../actions/BridgeApi\";\n\ntype LogsPageState = {\n    search: string;\n    logLevel: string;\n}\nconst ALL = 'all';\nconst TextWrapper = ({text}) => <>{text}</>;\nconst Highlighted = ({ text = '', highlight = '' }) => {\n    if (!highlight.trim()) {\n        return <TextWrapper text={text} />\n    }\n    const regex = new RegExp(`(${escapeRegExp(highlight)})`, 'gi')\n    const parts = text.split(regex)\n    return (\n        <>\n            {parts.filter(part => part).map((part, i) => (\n                regex.test(part) ? <mark key={i}>{part}</mark> : <TextWrapper key={i} text={part}></TextWrapper>\n            ))}\n        </>\n    )\n}\n\nconst logLevels = [ALL, 'debug', 'info', 'warn', 'error'];\nexport class LogsPage extends Component<GlobalState & BridgeApi, LogsPageState> {\n    state = { search: '', logLevel: ALL }\n    renderSearch() {\n        const { search } = this.state;\n        return <div className=\"card\">\n            <div className=\"card-body\">\n                <form className=\"row row-cols-lg-auto g-3 align-items-center\">\n                    <div className=\"col-12\">\n                        <label htmlFor=\"log-level\" className=\"form-label\">Show only</label>\n                        <select id=\"log-level\" className=\"form-select\" onChange={e => this.setState({ logLevel: e.target.value })}>\n                            {logLevels.map(level => <option key={level} value={level}>{level}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"col-12\">\n                        <label htmlFor=\"search-filter\" className=\"form-label\">Filter by text</label>\n                        <input id=\"search-filter\" className=\"form-control col-10\" placeholder=\"Enter search criteria\" value={search} onChange={(e) => this.setState({ search: e.target.value })} type=\"text\"></input>\n                    </div>\n                </form>\n            </div>\n        </div>;\n    }\n    render() {\n        let { logs } = this.props;\n        const { search, logLevel } = this.state;\n\n        const _search = new RegExp(escapeRegExp(search), 'gi');\n\n        logs = logs\n            .filter(l => (logLevel === ALL || l.level === logLevel) && (!search || _search.test(l.message)))\n            .sort();\n\n        return <>\n            {this.renderSearch()}\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    {logs.length == 0 ? <h1>You don&apos;t have {logLevel === ALL ? 'any' : logLevel} logs</h1> : null}\n                    <div className=\"overflow-auto\">\n                        {\n                            logs.map((l, idx) => <div key={idx}>\n                                {logLevel === ALL && <><span className={cx(\"badge\", {\n                                    'bg-danger': l.level === 'error',\n                                    'bg-warning': l.level === 'warning',\n                                    'bg-info': l.level === 'info',\n                                    'bg-secondary': ['error', 'warning', 'info'].includes(l.level) === false,\n                                }, \"text-capitalize\")}>{l.level}</span>&nbsp;</>}<code>\n                                    <Highlighted text={l.message} highlight={search}></Highlighted>\n                                </code></div>)\n                        }\n                    </div>\n                </div>\n            </div>\n        </>\n    }\n}\n\nconst mappedProps = [\"logs\", \"bridgeInfo\"];\n\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(LogsPage);\n","\nimport React, { Component, FunctionComponent } from \"react\";\n\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { OtaApi } from \"../../actions/OtaApi\";\nimport { GlobalState } from \"../../store\";\nimport Button from \"../button\";\nimport { genDeviceDetailsLink, toHHMMSS } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport { Device, DeviceState } from \"../../types\";\nimport { VendorLink, ModelLink } from \"../vendor-links/verndor-links\";\n\n\ntype OtaRowProps = {\n    device: Device;\n    state: DeviceState;\n}\n\nconst StateCell: FunctionComponent<OtaRowProps & OtaApi> = (props) => {\n    const { device, state, checkOTA, updateOTA } = props;\n    switch (state?.update?.state) {\n        case \"updating\":\n            return (<><div className=\"progress\">\n                <div className=\"progress-bar progress-bar-striped progress-bar-animated\" style={{ width: `${state.update.progress}%` }}>\n                    {state.update.progress}%</div>\n            </div>\n                <div>Remaining time {toHHMMSS(state.update.remaining)}</div>\n            </>\n            );\n        case \"available\":\n            return <Button<string> className=\"btn btn-danger btn-sm\" onClick={updateOTA} item={device.friendly_name} title=\"Update OTA\" promt>Update OTA</Button>\n        default:\n            return <Button<string> className=\"btn btn-primary btn-sm\" onClick={checkOTA} item={device.friendly_name} title=\"Check OTA\">Check OTA</Button>\n\n\n    }\n}\nconst OtaRow: FunctionComponent<OtaRowProps & OtaApi> = (props) => {\n    const { device, state, ...rest } = props;\n    return <tr>\n        <td><Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link></td>\n\n        <td className=\"text-truncate text-nowrap position-relative\"><VendorLink device={device} /></td>\n        <td title={device?.definition?.description}><ModelLink device={device} /></td>\n        <td>{device.date_code}</td>\n        <td>{device.software_build_id}</td>\n        <td>\n            <StateCell device={device} state={state} {...rest} />\n        </td>\n    </tr>\n}\n\n\nclass OtaPage extends Component<GlobalState & OtaApi, {}> {\n    getAllOtaDevices() {\n        const { devices } = this.props;\n        return Array.from(devices).filter(([, device]) => device?.definition?.supports_ota)\n    }\n    checkAllOTA = () => {\n        const { checkOTA } = this.props;\n        const otaDevices = this.getAllOtaDevices();\n        otaDevices.forEach(([, d]) => checkOTA(d.friendly_name));\n    }\n    render() {\n        const { deviceStates, checkOTA, updateOTA } = this.props;\n        const otaApi = { checkOTA, updateOTA };\n        const otaDevices = this.getAllOtaDevices();\n\n        return <div className=\"card\">\n            <div className=\"card-body\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Friendly name</th>\n                            <th>Manufacturer</th>\n                            <th>Model</th>\n                            <th>Firmware build date</th>\n                            <th>Firwmare version</th>\n                            <th><Button className=\"btn btn-danger btn-sm\" onClick={this.checkAllOTA} promt>Check all OTA</Button></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {otaDevices.length === 0 ? <tr><td colSpan={6}>You don&apos;t have any devices that support OTA</td></tr> : null}\n                        {otaDevices.map(([ieeeAddr, device]) => (\n                            <OtaRow key={ieeeAddr} device={device} state={deviceStates.get(device.friendly_name) as DeviceState} {...otaApi} />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    }\n}\n\nconst mappedProps = [\"devices\", \"deviceStates\"];\n\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(OtaPage);\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Button from \"./button\";\nimport store from \"../store\";\nimport { download } from \"../utils\";\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\ntype ErrorBoundaryProps = RouteComponentProps<{}>;\n\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    state: Readonly<ErrorBoundaryState> = {};\n\n    static getDerivedStateFromError(error: Error) {\n        return { hasError: true, error };\n    }\n\n    donwloadState = () => {\n        download(store.getState(), 'state.json');\n    }\n\n    render() {\n        const { error } = this.state;\n\n        if (error) {\n            const githubUrlParams = {\n                title: `Got error: ${error.message}`,\n                body: [\n                    `DESCRIBE HERE WHAT HAPPENED AND WHAT YOU EXPECTED TO HAPPEN`,\n                    \"\\n\\n\\n\\n\\n\",\n\n                    `**Current url**: ${window.location.toString()}`,\n                    `**Previous url**: ${document.referrer}`,\n                    \"\\n\",\n                    `**Error type**: ${error?.name}`,\n                    `**Error message**: ${error?.message}`,\n                    \"\\n\\n\",\n                    error?.stack\n                ].join(\"\\n\")\n            } as Record<string, string>;\n\n\n            const githubUrl = `https://github.com/nurikk/z2m-frontend/issues/new?${new URLSearchParams(githubUrlParams).toString()}`\n            return <div className=\"container\">\n\n                <h1 className=\"text-danger\">Hello, you&apos;ve found a bug. Congratulations!</h1>\n                <ol>\n                    <li><strong>Calm down</strong></li>\n                    <li><strong>Raise a github issue <a target=\"_blank\" rel=\"noopener noreferrer\" href={githubUrl}>here</a></strong></li>\n                    <li><strong><span className=\"btn btn-link p-0\" onClick={this.donwloadState}>Download this file</span> and attach to the issue</strong></li>\n                    <li><strong>Take a screenshot of this page and attach to the issue</strong></li>\n                </ol>\n                <div>\n                    <div>{error.name}</div>\n                    <div>{error.message}</div>\n                    <pre>{error.stack}</pre>\n                </div>\n            </div>\n\n        }\n        return this.props.children;\n    }\n\n    componentDidUpdate(prevProps: ErrorBoundaryProps) {\n        const { location: { pathname } } = this.props;\n        const { location: { pathname: prevPathname } } = prevProps;\n        if (prevPathname !== pathname) {\n            this.setState({ error: undefined });\n        }\n    }\n}\n\n","import PowerSource from '../../components/power-source';\nimport React from 'react';\nimport { Device, DeviceDefinition, DeviceState, GenericExposedFeature } from '../../types';\nimport { lastSeen } from '../../utils';\n\n\ntype Props = {\n    device: Device;\n    deviceState: DeviceState;\n};\n\nconst footerFeatures = [\n    \"linkquality\"\n];\n\nconst DeviceFooter: React.FC<Props> = ({ device, deviceState }) => {\n    const {\n        last_seen: lastSeenTime,\n        linkquality,\n    } = deviceState;\n    const { exposes } = device.definition as DeviceDefinition;\n    const rederedFeatures = [] as JSX.Element[];\n    (exposes as GenericExposedFeature[])\n        .filter(e => footerFeatures.includes(e.name))\n        .forEach(e => {\n            switch (e.name) {\n                case \"linkquality\":\n                    linkquality && rederedFeatures.push(<span key=\"linkquality\" className=\"me-1\"><i className=\"fa fa-signal fa-fw\" /> {linkquality} LQI</span>);\n                    break;\n                default:\n                    break;\n            }\n        });\n\n    rederedFeatures.push(<PowerSource key={\"power\"} source={device.power_source} battery={deviceState.battery as number} />);\n    return (\n        <footer className=\"card-footer pt-0\">\n            <div className=\"row justify-content-between flex-nowrap\">\n                <div title=\"last update\" className=\"col text-truncate\">\n                    {lastSeen(lastSeenTime)}\n                </div>\n                <div className=\"col col-auto text-truncate\">\n                    {rederedFeatures}\n                </div>\n            </div>\n        </footer>\n    );\n};\n\nexport default DeviceFooter;\n","import React from 'react';\nimport { CompositeFeature } from '../../types';\nimport cx from \"classnames\";\nimport { BaseFeatureProps } from '../features/base';\nimport DeviceFooter from './DeviceFooter';\n\nimport styles from './DashboardDevice.scss';\n\nimport { Link } from 'react-router-dom';\nimport { genDeviceDetailsLink } from '../../utils';\n\nimport Composite from '../features/composite/composite';\nimport DeviceImage from '../device-image';\n\ntype Props = BaseFeatureProps<CompositeFeature>;\n\n\nconst DashboardDevice: React.FC<Props> = ({ onChange, onRead, device, deviceState, feature: { features }, featureWrapperClass }) => {\n    return (\n        <div className=\"col-xl-3 col-lg-4 col-sm-6 col-12 d-flex\">\n            <div className={`flex-fill card flex-shrink-1`}>\n                <div className=\"card-header pb-0\">\n                    <Link to={genDeviceDetailsLink(device.ieee_address)}>\n                        <DeviceImage device={device} className={cx(styles.deviceImage, 'me-2 d-inline')} />{device.friendly_name}\n                    </Link>\n                </div>\n                <div className={`card-body align-items-center row`}>\n                    <Composite feature={{ features } as CompositeFeature}\n                        className=\"row\"\n                        type=\"composite\"\n                        device={device}\n                        deviceState={deviceState}\n                        onChange={onChange}\n                        onRead={onRead}\n                        featureWrapperClass={featureWrapperClass}\n                        minimal={true}\n                    />\n                </div>\n                <DeviceFooter\n                    device={device}\n                    deviceState={deviceState}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardDevice;\n","// extracted by mini-css-extract-plugin\nexport default {\"deviceImage\":\"_2sZwYIX5ipSoyWG2H7AU79\"};","import camelCase from \"lodash/camelCase\";\nimport startCase from \"lodash/startCase\";\nimport React, { FunctionComponent, PropsWithChildren } from \"react\";\nimport { FetatureWrapperProps } from \"../features/composite/FeatureWrapper\";\nimport cx from \"classnames\";\n\nconst getTemperatureIcon = (temperature: number) => {\n    let icon = 'fa-thermometer-empty';\n    if (temperature >= 30) {\n        icon = 'fa-thermometer-full';\n    } else if (temperature >= 25) {\n        icon = 'fa-thermometer-three-quarters';\n    } else if (temperature >= 20) {\n        icon = 'fa-thermometer-half';\n    } else if (temperature >= 15) {\n        icon = 'fa-thermometer-quarter';\n    }\n    return icon;\n};\n\n\n\nconst typeToClassMap = {\n    humidity: ['text-info', 'fa-tint'],\n    illuminance: ['fa-sun'],\n    pressure: ['fa-cloud-download-alt'],\n    co2: ['fa-atom', 'text-warning'],\n    voltage: ['fa-bolt', 'text-success'],\n    state: ['fa-star-half-alt'],\n    brightness: ['fa-sun'],\n    occupancy: ['fa-walking'],\n    current: ['fa-copyright', 'text-warning'],\n    power: ['fa-power-off', 'text-success'],\n    energy: ['fa-plug', 'text-info'],\n    frequency: ['fa-wave-square'],\n    tamper: ['fa-exclamation-circle'],\n    smoke: ['fa-smoking', 'text-danger'],\n    radiation_dose_per_hour: ['fa-radiation', 'text-danger'],\n    radioactive_events_per_minute: ['fa-radiation-alt', 'text-warning'],\n    power_factor: ['fa-industry', 'text-danger'],\n    /* eslint-disable @typescript-eslint/camelcase */\n    color_xy: ['fa-palette'],\n    color_hs: ['fa-palette'],\n    color_temp: ['fa-sliders-h'],\n    illuminance_lux: ['fa-sun'],\n    soil_moisture: ['fa-fill-drip'],\n    water_leak: ['fa-water'],\n    /* eslint-enable @typescript-eslint/camelcase */\n};\nconst getGenericFeatureIcon = (name: string, value: unknown): string => {\n    let classes = [] as string[];\n    switch (name) {\n        case 'temperature':\n            classes.push(cx('text-danger', getTemperatureIcon(value as number)))\n            break;\n        case 'contact':\n            classes.push(cx({ 'fa-door-closed text-muted': value, 'fa-door-open text-primary': !value }))\n            break;\n        case 'occupancy':\n            classes.push(cx({ 'text-warning': value }))\n            break;\n        case 'water_leak':\n            classes.push(cx({ 'text-primary': value }));\n            break;\n        default:\n            break;\n    }\n    classes = [...classes, ...(typeToClassMap[name] ?? [])];\n    if (!classes.length) {\n        classes.push('invisible');\n    }\n    return cx(classes);\n}\n\nexport const DashboardFeatureWrapper: FunctionComponent<PropsWithChildren<FetatureWrapperProps>> = (props) => {\n    const { children, feature, deviceState = {} } = props;\n    const icon = getGenericFeatureIcon(feature.name, deviceState[feature.property]);\n\n    return <div className=\"d-flex align-items-center\">\n        {icon && <div className=\"me-1\">\n            <i className={`fa fa-fw ${icon}`} />\n        </div>}\n        <div className=\"flex-shrink-1 flex-grow-1\">{startCase(camelCase(feature.name))}{feature.endpoint ? ` (${feature.endpoint})` : null}</div>\n        <div className=\"flex-shrink-0\">{children}</div>\n    </div>\n}\n\n","import React from 'react';\n\n\nimport { connect } from 'unistore/react';\n\n\nimport DashboardDevice from './DashboardDevice';\nimport { DeviceState, CompositeFeature, GenericExposedFeature, FeatureAccessMode } from '../../types';\nimport actions from '../../actions/actions';\nimport { StateApi } from \"../../actions/StateApi\";\nimport { GlobalState } from '../../store';\nimport { DashboardFeatureWrapper } from './DashboardFeatureWrapper';\nimport { isOnlyOneBitIsSet } from '../../utils';\n\nimport { isLightFeature } from '../device-page/type-guards';\nimport groupBy from \"lodash/groupBy\";\n\n\ntype Props = Pick<GlobalState, 'devices' | 'deviceStates'> & StateApi;\n\nconst genericRendererIgnoredNames = ['linkquality', 'battery', 'battery_low', 'illuminance_lux', 'color_temp_startup', 'voltage', 'strength', 'color_options'];\nconst whitelistFeatureNames = ['state', 'brightness', 'color_temp'];\nconst whitelistFeatureTypes = ['light'];\nconst nullish = ['', null, undefined];\n\nexport const onlyValidFeaturesForDashboard = (feature: GenericExposedFeature | CompositeFeature, deviceState: DeviceState = {} as DeviceState): GenericExposedFeature | CompositeFeature | false => {\n    const { access, property, name, type } = feature;\n    let { features } = feature as CompositeFeature;\n    if (isLightFeature(feature)) {\n        features = features.map(f => onlyValidFeaturesForDashboard(f, (property ? deviceState[property] : deviceState) as DeviceState)).filter(f => f) as (GenericExposedFeature | CompositeFeature)[];\n        const groupedFeatures = groupBy(features, 'property');\n        features = Object.values(groupedFeatures).map(f => f[0]);\n    }\n    const filteredOutFeature = {...feature, features} as GenericExposedFeature | CompositeFeature;\n    if (whitelistFeatureNames.includes(name)) {\n        return filteredOutFeature;\n    }\n    if (whitelistFeatureTypes.includes(type)) {\n        return filteredOutFeature;\n    }\n    if (access && !(access & FeatureAccessMode.ACCESS_STATE && !nullish.includes(deviceState[property] as string | null | undefined))) {\n        return false;\n    }\n    if (genericRendererIgnoredNames.includes(name)) {\n        return false;\n    }\n\n    if (access & FeatureAccessMode.ACCESS_STATE && isOnlyOneBitIsSet(access)) {\n        return filteredOutFeature;\n    }\n    if (Array.isArray(features) && features.length > 0) {\n        return filteredOutFeature;\n    }\n    return false;\n}\n\nconst Dashboard: React.FC<Props> = (props) => {\n    const { setDeviceState, getDeviceState, deviceStates } = props;\n    return (\n        <div className=\"row\">\n            {Array.from(props.devices)\n                .filter(([, device]) => device.supported)\n                .map(([, device]) => ({ device, deviceState: deviceStates.get(device.friendly_name) ?? ({} as DeviceState) }))\n                .map(({ device, deviceState }) => {\n                    const _features = ((device.definition?.exposes ?? []) as (GenericExposedFeature | CompositeFeature)[]);\n                    const filteredFeatures = _features\n                        .map((e: GenericExposedFeature | CompositeFeature) => onlyValidFeaturesForDashboard(e, deviceState))\n                        .filter(f => f);\n                    return { device, deviceState, filteredFeatures };\n                })\n                .filter(({ filteredFeatures }) => filteredFeatures.length > 0)\n                .map(({ device, deviceState, filteredFeatures }) => {\n\n                    return (\n                        <DashboardDevice\n                            key={device.ieee_address}\n                            feature={{ features: filteredFeatures } as CompositeFeature}\n                            device={device}\n                            deviceState={deviceState}\n                            onChange={(endpoint, value) =>\n                                setDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                            }\n                            onRead={(endpoint, value) =>\n                                getDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                            }\n                            featureWrapperClass={DashboardFeatureWrapper}\n                        />\n                    );\n                })}\n        </div>);\n};\n\nconst mappedProps = ['devices', 'deviceStates'];\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(Dashboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\n\nimport exampleExtensionCode from './example-extension.js.txt';\n\nimport { ExtensionApi } from \"../../actions/ExtensionApi\";\nimport Button from \"../button\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-dracula';\n\ntype ExtensionsEditorPageState = {\n    currentExtension?: string;\n}\nexport class ExtensionsEditorPage extends Component<GlobalState & ExtensionApi, ExtensionsEditorPageState> {\n    state: Readonly<ExtensionsEditorPageState> = {};\n    loadExtension = (e) => {\n        const { value } = e.target;\n\n        this.setState({ currentExtension: value });\n    }\n    onExtensionCodeChange = (code: string) => {\n        const { updateExtensionCode } = this.props;\n        const { currentExtension } = this.state;\n\n        currentExtension && updateExtensionCode({ name: currentExtension, code });\n    }\n    onSaveClick = () => {\n        const { saveExtensionCode } = this.props;\n        const { currentExtension } = this.state;\n        const { extensions } = this.props;\n        const extension = extensions.find(e => e.name === currentExtension);\n\n        extension && saveExtensionCode(extension);\n    }\n    removeExtension = () => {\n        const { removeExtension } = this.props;\n        const { currentExtension } = this.state;\n        const { extensions } = this.props;\n        const extension = extensions.find(e => e.name === currentExtension);\n\n        extension && removeExtension(extension);\n    }\n\n    addNewExtension = () => {\n        const { updateExtensionCode } = this.props;\n        const ts = Date.now() + '';\n        const newName = prompt(\"Enter new extension name\", `user-extension${ts}.js`);\n        const templatedCode = exampleExtensionCode.replace(/_TS_/g, ts);\n        if (newName !== null) {\n            updateExtensionCode({ name: newName, code: templatedCode });\n            this.setState({ currentExtension: newName });\n        }\n    }\n    renderEditor() {\n        const { currentExtension } = this.state;\n        const { extensions, theme } = this.props;\n        const code = extensions.find(e => e.name === currentExtension)?.code ?? \"\";\n        const editorTheme = theme === \"light\" ? \"github\" : \"dracula\";\n        return (\n            <>\n                <div className=\"row mb-2\">\n                    <div className=\"col-6\">\n                        <select value={currentExtension} className=\"form-control\" onChange={this.loadExtension}>\n                            <option key=\"hidden\" hidden>Select extension to edit</option>\n                            {extensions.map(({ name }) => <option key={name} value={name}>{name}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"col-6\">\n                        <Button onClick={this.addNewExtension} className=\"btn btn-success me-2\"><i className=\"fa fa-plus\"></i></Button>\n                        <Button promt disabled={!currentExtension} onClick={this.removeExtension} className=\"btn btn-danger me-2\"><i className=\"fa fa-trash\"></i></Button>\n                        <Button disabled={!currentExtension} onClick={this.onSaveClick} className=\"btn btn-primary\">Save</Button>\n                    </div>\n                </div>\n                <AceEditor\n                    mode=\"javascript\"\n                    onChange={this.onExtensionCodeChange}\n                    name=\"UNIQUE_ID_OF_DIV\"\n                    editorProps={{ $blockScrolling: true }}\n                    value={code}\n                    width=\"100%\"\n                    maxLines={Infinity}\n                    theme={editorTheme}\n                    showPrintMargin={false}\n                />\n\n            </>\n        )\n    }\n\n    render() {\n        return <div className=\"card h-100\">\n            <div className=\"card-body h-100\">\n                {this.renderEditor()}\n            </div>\n        </div>\n    }\n}\n\nconst mappedProps = [\"extensions\", \"theme\"];\n\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(ExtensionsEditorPage);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions/actions\";\nimport { GlobalState } from \"../../store\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\n\nconst StateNotifier = (props: GlobalState) => {\n    const { bridgeState } = props;\n    const [modalOpened, setModalOpened] = useState(bridgeState !== \"online\");\n    useEffect(() => {\n        if (bridgeState !== \"online\") {\n            setModalOpened(true);\n        } else {\n            setModalOpened(false);\n        }\n    }, [bridgeState])\n\n    return (\n        <Modal isOpen={modalOpened}>\n            <ModalHeader>Zigbee2MQTT</ModalHeader>\n            <ModalBody>\n                <div>Hello, Zigbee2MQTT in status <span className=\"text-danger\">{bridgeState}</span>.</div>\n                <div>Please wait....</div>\n            </ModalBody>\n            <ModalFooter>\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setModalOpened(false)}>Close</button>\n            </ModalFooter>\n        </Modal>\n    );\n}\nconst mappedProps = [\"bridgeState\"];\nconst ConnectedStateNotifier = connect<{}, {}, GlobalState, {}>(mappedProps, actions)(StateNotifier);\nexport default ConnectedStateNotifier;\n\n","import \"notyf/notyf.min.css\";\nimport \"./styles/styles.global.scss\";\n\nimport React, { Component, FunctionComponent } from 'react';\n\nimport ConnectedMap from \"./components/map\";\n\nimport {\n    Switch,\n    Route,\n    HashRouter\n} from \"react-router-dom\";\n\nimport ConnectedDevicePage from \"./components/device-page\";\nimport TouchlinkPage from \"./components/touchlink-page\";\n\nimport store from \"./store\";\nimport { Provider } from \"unistore/react\";\nimport api from './api';\n\n\nimport ConnectedSettingsPage from \"./components/settings\";\nimport NavBar from \"./components/navbar\";\nimport ConnectedGroupsPage from \"./components/groups\";\nimport ConnectedZigbeePage from \"./components/zigbee\";\nimport LogsPage from \"./components/logs-page\";\nimport OtaPage from \"./components/ota-page\";\nimport ReactDOM from \"react-dom\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport DashboardPage from \"./components/dashboard-page\";\nimport ExtensionsEditorPage from \"./components/extensions-editor\";\nimport StateNotifier from \"./components/state-notifier/StateNotifier\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\n\n\n\nconst ConnectedDevicePageWrap: FunctionComponent<{ dev: string }> = ({ dev }) => (\n    <ConnectedDevicePageWrap dev={dev} />\n);\n\nconst themes = {\n    light: './css/light.css',\n    dark: './css/dark.css',\n};\n\napi.connect();\n\n\n// eslint-disable-next-line react/prefer-stateless-function\n\nconst Main = () => {\n    const { theme } = store.getState();\n    return <Provider store={store}>\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={theme}>\n            <HashRouter>\n                <StateNotifier />\n                <div className=\"main\">\n                    <NavBar />\n                    <main className=\"content p-0 p-sm-3\">\n                        <div className=\"container-fluid p-0 h-100\">\n                            <Switch>\n                                <Route path=\"/ota\" render={(props) => <ErrorBoundary {...props}><OtaPage /></ErrorBoundary>} />\n                                <Route path=\"/map\" render={(props) => <ErrorBoundary {...props}><ConnectedMap /></ErrorBoundary>} />\n                                <Route path=\"/device/:dev/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedDevicePage /></ErrorBoundary>} />\n                                <Route path=\"/settings/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedSettingsPage /></ErrorBoundary>} />\n                                <Route path=\"/groups\" render={(props) => <ErrorBoundary {...props}><ConnectedGroupsPage /></ErrorBoundary>} />\n                                <Route path=\"/logs\" render={(props) => <ErrorBoundary {...props}><LogsPage /></ErrorBoundary>} />\n                                <Route path=\"/touchlink\" render={(props) => <ErrorBoundary {...props}><TouchlinkPage /></ErrorBoundary>} />\n                                <Route path=\"/dashboard\" render={(props) => <ErrorBoundary {...props}><DashboardPage /></ErrorBoundary>} />\n                                <Route path=\"/extensions\" render={(props) => <ErrorBoundary {...props}><ExtensionsEditorPage /></ErrorBoundary>} />\n                                <Route path=\"/\" render={(props) => <ErrorBoundary {...props}><ConnectedZigbeePage /></ErrorBoundary>} />\n                            </Switch>\n                        </div>\n                    </main>\n                </div>\n            </HashRouter>\n        </ThemeSwitcherProvider>\n    </Provider >\n}\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}