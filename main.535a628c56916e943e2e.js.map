{"version":3,"sources":["webpack:///./src/components/map/map.css?ebaa","webpack:///./src/components/map/links.tsx","webpack:///./src/images/generic-zigbee-device.png","webpack:///./src/utils.ts","webpack:///./src/components/map/types.ts","webpack:///./src/components/device-image/index.tsx","webpack:///./src/components/map/nodes.tsx","webpack:///./src/types.ts","webpack:///./src/store.ts","webpack:///./src/initialState.txt","webpack:///./src/api.ts","webpack:///./src/actions.ts","webpack:///./src/components/button/index.tsx","webpack:///./src/components/map/consts.ts","webpack:///./src/components/spinner.tsx","webpack:///./src/components/map/index.tsx","webpack:///./src/components/modal/index.tsx","webpack:///./src/components/device-control/index.tsx","webpack:///./src/components/device-page/style.css?16dd","webpack:///./src/components/power-source/style.css?d24a","webpack:///./src/components/power-source/index.tsx","webpack:///./src/components/vendor-links/verndor-links.tsx","webpack:///./src/components/device-page/info.tsx","webpack:///./src/components/device-picker/index.tsx","webpack:///./src/components/endpoint-picker/index.tsx","webpack:///./src/components/cluster-picker/index.tsx","webpack:///./src/components/device-page/bind-row.tsx","webpack:///./src/components/device-page/bind.tsx","webpack:///./src/components/device-page/states.tsx","webpack:///./src/components/device-page/type-guards.ts","webpack:///./src/components/enum-editor/enum-editor.tsx","webpack:///./src/components/range-editor/range-editor.tsx","webpack:///./src/components/features/base.tsx","webpack:///./src/components/features/numeric/numeric.tsx","webpack:///./src/components/toggle/index.tsx","webpack:///./src/components/features/binary/binary.tsx","webpack:///./src/components/features/enum/enum.tsx","webpack:///./src/components/features/light/light.tsx","webpack:///./src/components/features/switch/switch.tsx","webpack:///./src/components/features/cover/cover.tsx","webpack:///./src/components/features/lock/lock.tsx","webpack:///./src/components/color-editor/color-editor.tsx","webpack:///./src/components/features/composite/color/color.tsx","webpack:///./src/components/textual-editor/textual-editor.tsx","webpack:///./src/components/features/textual/textual.tsx","webpack:///./src/components/features/composite/composite.tsx","webpack:///./src/components/device-page/exposes.tsx","webpack:///./src/components/device-page/tree.css?271e","webpack:///./src/components/device-page/clusters.tsx","webpack:///./src/components/device-page/index.tsx","webpack:///./src/components/touchlink-page/index.tsx","webpack:///./src/components/universal-editor/index.tsx","webpack:///./src/components/settings/index.tsx","webpack:///./src/hooks/useComponentVisible.tsx","webpack:///./src/components/navbar/style.css?1108","webpack:///./src/components/navbar/index.tsx","webpack:///./src/components/groups/style.css?c745","webpack:///./src/components/groups/index.tsx","webpack:///./src/components/zigbee/style.css?bc2b","webpack:///./src/components/zigbee/ActionTH.tsx","webpack:///./src/components/zigbee/index.tsx","webpack:///./src/components/logs-page/index.tsx","webpack:///./src/components/ErrorBoundary.tsx","webpack:///./src/index.tsx"],"names":["Link","props","linkType","id","rest","className","link","strokeWidth","fill","LinkLabel","linkLabel","linkquality","links","ref","current","selectAll","data","length","map","sourceIeeeAddr","targetIeeeAddr","key","xlinkHref","genDeviceDetailsLink","deviceIdentifier","toHex","input","padding","repeat","toString","substr","toUpperCase","randomString","len","Math","random","replacer","value","originalObject","this","Map","dataType","Array","from","entries","reviver","ZigbeeRelationship","serialize","JSON","stringify","download","filename","blob","Blob","type","url","window","URL","createObjectURL","a","document","createElement","body","appendChild","href","setTimeout","click","revokeObjectURL","removeChild","sanitizeZ2MDeviceName","deviceName","replace","AVALIABLE_GENERATORS","device","definition","model","imageGenerators","setimageGenerators","deviceStatus","src","onImageError","newGenerators","shift","otaSpinner","update","state","title","interviewSpinner","interviewing","unseccessfullInterview","interview_completed","onError","getStarShape","innerCircleArms","styleStarWidth","innerOuterRadiusRatio","centerX","centerY","innerRadius","outerRadius","angle","PI","totalArms","points","i","r","cos","sin","calcStarPoints","onMouseOut","node","onMouseOver","onDblClick","componentDidMount","render","deviceType","cn","onDoubleClick","width","height","img","friendlyName","toggle","updateDrag","simulation","dragForce","drag","on","event","d","active","alphaTarget","restart","fx","x","fy","y","undefined","call","componentDidUpdate","nodes","ieeeAddr","str","FeatureAccessMode","parse","notyf","blacklistedMessages","showNotity","msg","message","level","status","isResponseWithStatus","error","success","send","topic","payload","console","debug","socket","procsessBridgeMessage","setState","bridgeConfig","bridgeInfo","forEach","dev","endpoints","Object","set","ieee_address","devices","groups","logs","getState","newLogs","slice","push","every","val","test","response","networkGraphIsLoading","networkGraph","inGraph","createdLinks","Set","sort","b","relationship","source","dst","target","linkId","join","repeatedLink","has","add","repeated","warn","payloadData","touchlinkScanInProgress","touchlinkDevices","found","touchlinkIdentifyInProgress","touchlinkResetInProgress","startsWith","onMessage","e","deviceStates","newDeviceStates","get","connect","addEventListener","apiUrl","location","host","pathname","protocol","store","addBind","to","clusters","bindParams","Promise","resolve","removeBind","setStateValue","name","setDeviceState","getDeviceState","setPermitJoin","permit","friendly_name","renameDevice","homeassistantRename","removeDevice","force","block","configureDevice","networkMapRequest","routes","createGroup","group","removeGroup","addDeviceToGroup","removeDeviceFromGroup","touchlinkScan","touchlinkIdentify","touchlinkReset","checkOTA","updateOTA","updateConfigValue","resetZnp","exportState","onClick","item","promt","confirmed","confirm","children","linkTypes","NeigbhorIsParent","NeigbhorIsAChild","NeigbhorIsASibling","NoneOfTheAbove","role","s","t","atan2","distancesMap","BrokenLink","Router2Router","Coordinator2Router","Coordinator2EndDevice","EndDevice2Router","getDistance","distance","min","depth","ticked","transform","attr","radius","x1","applyX","max","y1","applyY","x2","y2","dx","dy","dr","sqrt","computeLink","offset","processHighlights","selectedNode","linkedByIndex","n","l","neighboring","computeOpacity","style","o","svgRef","visibleLinks","updateNodes","filter","includes","everything","zoomHandler","onRequestClick","onLinkTypeFilterChange","stateVisibleLinks","checked","inValue","parseInt","v","updateForces","linkForce","strength","chargeForce","distanceMin","distanceMax","repelForce","collisionForce","centerForce","initPage","getBoundingClientRect","renderMap","viewBox","renderMessage","renderMapControls","controls","onChange","htmlFor","container","ModalHeader","ModalBody","ModalFooter","modalShow","display","openModal","bind","closeModal","isOpen","prevProps","isRenameModalOpened","isDeviceRemovalModalOpened","renameParams","isHassRename","removeParams","onRenameClick","onRemoveClick","toggleRenameModal","toggleDeviceRemovalModal","onHassEntityIdChange","onFriendlyNameChange","onDeviceRemovalParamChange","renderRenameButton","config","homeassistant","renderDeviceRemovalButton","battery","batteryClass","VendorLink","supported","encodeURIComponent","vendor","toLowerCase","rel","ModelLink","acnchor","displayProps","label","if","supports","network_address","power_source","secs","prop","progress","remaining","floor","onSelect","find","g","options","hidden","devicesOptions","description","getDeviceDisplayName","groupOptions","concat","values","disabled","hasOnlyOneEP","ep","unshift","clusterDescriptions","genScenes","genOnOff","genLevelCtrl","lightingColorCtrl","closuresWindowCovering","pickerId","isChecked","cluster","defaultProps","getEndpoints","obj","keys","members","endpoint","stateRule","setSourceEp","sourceEp","setDestination","destination","setDestinationEp","destinationEp","setClusters","onBindClick","onBind","getBidningParams","onUnBindClick","onUnBind","getDerivedStateFromProps","targeDevice","isValidRule","valid","idx","targetType","sourceEndpoints","rule","getTarget","destinationEndpoints","possibleClusters","output","scope","isNew","rule2key","bidingRules","bindings","targetId","convertBidningsIntoNiceStructure","Date","now","deviceState","isBinaryFeature","feature","isNumericFeature","isTextualFeature","isEnumFeature","isLightFeature","isSwitchFeature","isCoverFeature","isLockFeature","isColorFeature","isCompositeFeature","isPrimitive","step","unit","steps","currentValue","setCurrentValue","showRange","valueAsNumber","onMouseUp","onBlur","BaseViewer","property","NoAccessError","access","valueMax","valueMin","ACCESS_WRITE","ACCESS_STATE","valueOn","valueOff","valueExists","brightness","inputY","yRange","xRange","xMin","xMax","yMin","kelvin","stepsConfiguration","position","tilt","toRGB","sourceFormat","X","Z","hex","Y","hue","saturation","rgbToTargetFormat","targetFormat","hsv","xyz","pridePallete","format","currentColor","setCurrentColor","backgroundColor","features","innerFeature","color","FeatureWrapper","onRead","isColor","isReadable","ACCESS_READ","renderFeature","genericParams","wrapperParams","groupedFeatures","f","result","epName","featuresGroup","exposes","ClustersComp","tree","epData","renderContent","match","params","tab","activeClassName","devicePageWithRouter","onIdentifyClick","onResetClick","renderTouchlinkDevices","touchlinkInProgress","touchlinkDevice","channel","renderNoDevices","togglePairs","BluringInput","internalValue","setInternalValue","isToggleParameter","settings","path","updateConfig","renderSwitcher","renderSettings","renderBridgeInfo","renderAbout","version","commit","coordinator","meta","revision","renderLegacyApiSettings","setting","advanced","legacy_api","SettingsPageWithRouter","useComponentVisible","initialIsVisible","isComponentVisible","setIsComponentVisible","handleHideDropdown","handleClickOutside","contains","removeEventListener","urls","exact","StartStopJoinButton","selectedRouter","setSelectedRouter","routers","selectAndHide","show","permit_join","getDeviceObj","groupAddress","rowNumber","onRemove","deviceFriendlyName","groupMemebershipInfo","onSubmit","onDeviceSelect","onEpChange","deviceObj","newGroupName","changeHandler","onGroupCreateSubmit","groupFriendlyName","renderGroupCreationForm","required","placeholder","renderGroups","reverse","preventDefault","stopPropagation","column","renderArrow","currentDirection","Component","saveState","storeData","sortDirection","sortColumn","localStorage","setItem","handleLongLoading","size","onSortChange","sortDir","currentTime","sortedTableData","restoreState","storedState","getItem","restored","tableData","renderError","renderDevicesTable","lastSeenIsAvaliable","elapsed","last_seen","renderDevicesTableHeader","lastSeen","diff","donwloadState","getDerivedStateFromError","hasError","stack","getElementById"],"mappings":"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","file":"main.535a628c56916e943e2e.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"_1TK12NlMUcpu0IZGw5KG9F\",\"img\":\"-vLZFy4QqTaA5Lql2j7WL\",\"node\":\"_3VABKCYaUBV0N55MRkEiCg\",\"link\":\"_2MMYgLsCQ5mPT-AJSdZ4Uz\",\"linkLabel\":\"EFSV-Lj6sJyoW14QA3ig0\",\"links\":\"_3m9RTJKJZqiJx1UmLLzi4\",\"nodes\":\"_1RxBn1bAxqYxk5W0mPwZMS\",\"EndDevice\":\"JhUbmgThutQMk8laPcsxg\",\"Coordinator\":\"_3F14ZWmKtSPPHai2y_MRRj\",\"Router\":\"_1I1ZcuMgRbn_B5HXF9Z2mw\",\"BrokenLink\":\"_3FeEi6FG3R9pYpboNF-OBu\",\"Coordinator2Router\":\"_2cFMSmedVqD5hjj2K7XpsQ\",\"Router2Coordinator\":\"_3KnTt0kzrMwLh56UMBBqwe\",\"Router2Router\":\"_3HeSfltIQjH_mQxhaoHnCs\",\"Coordinator2EndDevice\":\"_2zGuiMZ7r-Z4mfRvCVQEAp\",\"EndDevice2Coordinator\":\"_35uGMHQCj1Sx5FyJk5-Ec1\",\"Router2EndDevice\":\"_1nD8O-bIFFZWctv6x4zD8j\",\"EndDevice2Router\":\"_2tVxslI3DwN1gBA6s3V24b\",\"foreignObject\":\"_1PgTRqMkYD7R1RqIF7R5ni\",\"offline\":\"_3goiiMv86rV5wazL6jDpjU\",\"controls\":\"RIAc5GeET4TLTKyCVy7yK\"};","import { LinkI } from \"./types\";\nimport React, { FunctionComponent, useLayoutEffect, useRef } from \"react\";\nimport style from \"./map.css\";\nimport cx from \"classnames\";\nimport { select } from \"d3-selection\";\n\ninterface LinkProps {\n    link: LinkI;\n    id?: string;\n}\n\nconst Link: FunctionComponent<LinkProps> = props => {\n    const { link: { linkType }, id, ...rest } = props;\n    return <path\n        id={id}\n        className={cx(style.link, style[linkType])}\n        strokeWidth={1}\n        fill=\"transparent\"\n        {...rest}\n    />;\n};\n\ninterface LinkLabelProps extends LinkProps {\n    xlinkHref: string;\n}\n\nconst LinkLabel: FunctionComponent<LinkLabelProps> = props => {\n    const { link } = props;\n    return <text className={style.linkLabel}>{link.linkquality}</text>;\n};\n\ninterface LinksPros {\n    links: LinkI[];\n}\n\nconst Links: FunctionComponent<LinksPros> = props => {\n    const { links } = props;\n    const ref = useRef<SVGGElement>();\n    useLayoutEffect(() => {\n        select(ref.current).selectAll(`.${style.link}`).data(links);\n        select(ref.current).selectAll(`.${style.linkLabel}`).data(links);\n    }, [links.length]);\n\n    return (\n        <g ref={ref} className={style.links}>\n            {links.map((link: LinkI) => <Link\n                id={`edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                key={`link${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                link={link}\n            />)}\n            {links.map((link: LinkI) => (\n                <LinkLabel\n                    xlinkHref={`#edgepath${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                    key={`label${link.sourceIeeeAddr}-${link.targetIeeeAddr}-${link.linkType}`}\n                    link={link}\n                />\n            ))}\n        </g>\n    );\n};\nexport default Links;\n","export default __webpack_public_path__ + \"d921749ee5fe6bc67e4ca4a150544be0.png\";","\nimport { Device, Endpoint } from \"./types\";\nimport { GraphI, NodeI } from \"./components/map/types\";\nimport { format } from 'timeago.js';\n\nexport const genDeviceDetailsLink = (deviceIdentifier: string | number): string => (`/device/${deviceIdentifier}`);\n\nexport const toHex = (input: number, padding = 4): string => {\n    return `0x${(`${'0'.repeat(padding)}${input.toString(16)}`).substr(-1 * padding).toUpperCase()}`;\n};\n\n\nexport const toHHMMSS = (secs: number): string => {\n    const hours = Math.floor(secs / 3600);\n    const minutes = Math.floor(secs / 60) % 60;\n    const seconds = Math.floor(secs % 60);\n\n    return [hours, minutes, seconds]\n        .map(v => v < 10 ? `0${v}` : v)\n        .filter((v, i) => v !== \"00\" || i > 0)\n        .join(\":\");\n};\n\nexport type CallbackHandler<T> = (err: boolean, res: T) => void;\nexport interface ApiResponse<T> {\n    success: boolean;\n    result: T;\n}\n\nexport const lastSeen = (lastSeen: string, elapsed: number): string => {\n    if (!lastSeen && !elapsed) {\n        return \"N/A\";\n    }\n    const diff = elapsed ? Date.now() - elapsed : Date.parse(lastSeen);\n    return format(diff);\n};\n\n\nexport const sanitizeGraph = (inGraph: GraphI): GraphI => {\n    const nodes = {};\n    const links = [];\n    const createdLinks = new Set<string>();\n\n    inGraph.nodes.forEach(node => {\n        nodes[node.ieeeAddr] = node;\n    });\n\n    inGraph.links.sort((a, b) => a.relationship - b.relationship).forEach(link => {\n        const src: NodeI = nodes[link.source.ieeeAddr];\n        const dst: NodeI = nodes[link.target.ieeeAddr];\n        if (src && dst) {\n            const linkId = [link.source.ieeeAddr, link.target.ieeeAddr].sort().join('');\n            const repeatedLink = createdLinks.has(linkId);\n            createdLinks.add(linkId);\n            const linkType = [src.type, dst.type].join('2');\n            links.push({ ...link, ...{ source: link.source.ieeeAddr, target: link.target.ieeeAddr, linkType, repeated: repeatedLink } });\n        } else {\n            console.warn(\"Broken link\", link);\n        }\n    });\n\n    inGraph.links = links;\n    return inGraph;\n};\n\nexport const getDeviceDisplayName = (device: Device): string => {\n    return `${device.friendly_name} ${device.definition?.model ? `(${device.definition?.model})` : ''}`;\n};\n\nexport const randomString = (len: number): string => Math.random().toString(36).substr(2, len);\n\nexport const isSecurePage = (): boolean => location.protocol === 'https:';\n\n\nexport const scale = (inputY: number, yRange: Array<number>, xRange: Array<number>): number => {\n    const [xMin, xMax] = xRange;\n    const [yMin, yMax] = yRange;\n\n    const percent = (inputY - yMin) / (yMax - yMin);\n    const outputX = percent * (xMax - xMin) + xMin;\n\n    return outputX;\n};\n\n\n\n\nfunction replacer(key: string, value: object) {\n    const originalObject = this[key];\n    if (originalObject instanceof Map) {\n        return {\n            dataType: 'Map',\n            value: Array.from(originalObject.entries()),\n        };\n    } else {\n        return value;\n    }\n}\n\nfunction reviver(key: string, value: { dataType: string; value: Iterable<readonly [unknown, unknown]>; }) {\n    if (typeof value === 'object' && value !== null) {\n        if (value.dataType === 'Map') {\n            return new Map(value.value);\n        }\n    }\n    return value;\n}\n\nexport const serialize = (data: object) => {\n    return JSON.stringify(data, replacer);\n}\n\nexport const deSerialize = (str: string) => {\n    return JSON.parse(str, reviver);\n}\n\n\nexport const download = (data: object, filename: string): void => {\n    const blob = new Blob([serialize(data)], { type: 'octet/stream' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    document.body.appendChild(a);\n    a.href = url;\n    a.download = filename;\n\n    setTimeout(() => {\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n    }, 1);\n\n}\n\nexport const sanitizeZ2MDeviceName = (deviceName: string): string => deviceName?.replace(/:|\\s|\\//g, \"-\");","import { SimulationLinkDatum, SimulationNodeDatum } from \"d3-force\";\nimport { DeviceType, DeviceDefinition } from \"../../types\";\n\nexport interface NodeI extends SimulationNodeDatum {\n    ieeeAddr: string;\n    friendlyName?: string;\n    type?: DeviceType;\n    failed?: string[];\n    lastSeen?: number;\n    definition?: DeviceDefinition;\n}\n\nexport type LinkType =\n    \"Coordinator2EndDevice\" |\n    \"EndDevice2Coordinator\" |\n\n    \"Coordinator2Router\" |\n    \"Router2Coordinator\" |\n\n    \"EndDevice2Router\" |\n    \"Router2EndDevice\" |\n\n    \"Router2Router\" |\n\n    \"BrokenLink\";\n\nexport interface Source extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\n\nexport interface Target extends SimulationNodeDatum {\n    ieeeAddr: string;\n}\nexport enum ZigbeeRelationship {\n    NeigbhorIsParent,\n    NeigbhorIsAChild,\n    NeigbhorIsASibling,\n    NoneOfTheAbove,\n    NeigbhorIsAFormerChild\n}\n\nexport interface LinkI extends SimulationLinkDatum<NodeI> {\n    source: Source;\n    target: Target;\n    linkquality: number;\n    depth: number;\n    routes: unknown[];\n    sourceIeeeAddr: string;\n    targetIeeeAddr: string;\n    sourceNwkAddr: number;\n    lqi: number;\n    relationship: ZigbeeRelationship;\n    linkType: LinkType;\n    repeated?: boolean;\n}\n\nexport interface GraphI {\n    nodes: NodeI[];\n    links: LinkI[];\n}\n","import React, { FunctionComponent, ImgHTMLAttributes, useState } from \"react\";\nimport genericDevice from \"../../images/generic-zigbee-device.png\";\nimport { Device, DeviceState } from \"../../types\";\nimport cx from \"classnames\";\nimport { sanitizeZ2MDeviceName } from \"../../utils\";\ntype DeviceImageProps = {\n    device: Device;\n    deviceStatus?: DeviceState;\n    type?: \"img\" | \"svg\";\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst genericDeiviceImageFallback = (device: Device): string => genericDevice;\nconst genSlsDeviceImageUrlZ2M = (device: Device): string => `https://www.zigbee2mqtt.io/images/devices/${sanitizeZ2MDeviceName(device?.definition?.model)}.jpg`;\nconst genSlsDeviceImageUrlSLS = (device: Device): string => `https://slsys.github.io/Gateway/devices/png/${device?.definition?.model?.replace(\"/\", \"_\")}.png`;\n\nconst AVALIABLE_GENERATORS = [\n    genSlsDeviceImageUrlZ2M, genSlsDeviceImageUrlSLS, genericDeiviceImageFallback\n]\n\nconst DeviceImage: FunctionComponent<DeviceImageProps & ImgHTMLAttributes<HTMLDivElement | SVGImageElement>> = (props) => {\n    const [imageGenerators, setimageGenerators] = useState(AVALIABLE_GENERATORS);\n    const { device, deviceStatus, type = \"img\", className, ...rest } = props;\n    const src = imageGenerators.length ? imageGenerators[0](device) : false;\n    const onImageError = () => {\n        const newGenerators = [...imageGenerators];\n        newGenerators.shift();\n        setimageGenerators(newGenerators);\n    };\n    const otaSpinner = deviceStatus?.update?.state === \"updating\" ? <i title=\"Updating firmware\" className=\"fa fa-sync fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const interviewSpinner = device.interviewing ? <i title=\"Interviewing\" className=\"fa fa-spinner fa-spin position-absolute bottom-0 right-0\" /> : null;\n    const unseccessfullInterview = !device.interviewing && !device.interview_completed ? <i title=\"Interview failed\" className=\"fa fa-exclamation-triangle position-absolute top-0 right-0 text-danger\" /> : null;\n    switch (type) {\n        case \"svg\":\n            return src ? <image {...rest} onError={onImageError} href={src} /> : null;\n        case \"img\":\n        default:\n            return src ? <div className={cx(className, \"position-relative\")} {...rest}>\n                <img  onError={onImageError} src={src} className={\"position-relative\"} />\n                {interviewSpinner}\n                {otaSpinner}\n                {unseccessfullInterview}\n            </div> : null;\n    }\n}\nexport default DeviceImage;","import React, { Component, createRef, RefObject } from \"react\";\nimport { LinkI, NodeI, Source, Target } from \"./types\";\nimport cx from \"classnames\";\nimport style from \"./map.css\";\nimport { MouseEventsResponderNode } from \".\";\nimport { Device } from \"../../types\";\nimport DeviceImage from \"../device-image\";\nimport { Simulation } from \"d3-force\";\nimport { select, selectAll } from \"d3-selection\";\nimport { drag } from \"d3-drag\";\n\n\nconst calcStarPoints = (\n    centerX: number,\n    centerY: number,\n    innerCircleArms: number,\n    innerRadius: number,\n    outerRadius: number\n): string => {\n    const angle = Math.PI / innerCircleArms;\n    const angleOffsetToCenterStar = 60;\n    const totalArms = innerCircleArms * 2;\n    let points = \"\";\n    for (let i = 0; i < totalArms; i++) {\n        const isEvenIndex = i % 2 == 0;\n        const r = isEvenIndex ? outerRadius : innerRadius;\n        const currX = centerX + Math.cos(i * angle + angleOffsetToCenterStar) * r;\n        const currY = centerY + Math.sin(i * angle + angleOffsetToCenterStar) * r;\n        points += `${currX}, ${currY} `;\n    }\n    return points;\n};\n\n\nconst getStarShape = (innerCircleArms: number, styleStarWidth: number, innerOuterRadiusRatio: number): string => {\n    return calcStarPoints(\n        15,\n        15,\n        innerCircleArms,\n        styleStarWidth,\n        innerOuterRadiusRatio\n    );\n};\n\ninterface NodeProps extends MouseEventsResponderNode {\n    node: NodeI;\n}\n\nconst offlineTimeout = 3600 * 2;\n\nexport const isOnline = (device: Device): boolean => {\n\n    return true; //Date.now() - device.lastSeen < offlineTimeout;\n};\n\nclass Node extends Component<NodeProps, {}> {\n    ref = createRef<SVGPolygonElement | SVGCircleElement | SVGImageElement>();\n\n    componentDidMount(): void {\n        const { current } = this.ref;\n        const { node } = this.props;\n        select(current as SVGElement).data([node]);\n    }\n\n    onMouseOut = (): void => {\n        const { node, onMouseOut } = this.props;\n        onMouseOut && onMouseOut(node, this.ref.current);\n    };\n\n    onMouseOver = (): void => {\n        const { node, onMouseOver } = this.props;\n        onMouseOver && onMouseOver(node, this.ref.current);\n    };\n\n    onDblClick = (): void => {\n        const { node, onDblClick } = this.props;\n        onDblClick && onDblClick(node, this.ref.current);\n    };\n\n    render() {\n\n        const { node } = this.props;\n        const { onMouseOver, onMouseOut, onDblClick } = this;\n        const deviceType = node.type as string;\n        const cn = cx(style.node, style[deviceType]); //{ [style.offline]: !isOnline(node.device, time) }\n        return (<g className={cn}\n            ref={this.ref as RefObject<SVGImageElement>}\n            onMouseOver={onMouseOver}\n            onMouseOut={onMouseOut}\n            onDoubleClick={onDblClick}\n        >\n            {\n                node.type === \"Coordinator\" ? (\n                    <polygon\n                        points={getStarShape(5, 5, 14) as string}\n                    />\n                ) : (\n                        <DeviceImage\n                            type=\"svg\"\n                            width={32}\n                            height={32}\n                            device={node as unknown as Device}\n                            className={`${style.img}`}\n                        />\n                    )\n            }\n            <text>{node.friendlyName}</text>\n\n        </g>);\n\n    }\n}\n\ninterface NodesProps extends MouseEventsResponderNode {\n    nodes: NodeI[];\n    simulation: Simulation<NodeI, LinkI>;\n}\n\ntype NodesState = {\n    toggle: boolean;\n}\n\nexport default class Nodes extends Component<NodesProps, NodesState> {\n    state: Readonly<NodesState> = {\n        toggle: false\n    }\n    updateDrag(): void {\n        const { simulation } = this.props;\n        const dragForce = drag<SVGCircleElement, NodeI>()\n            .on(\"start\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0.3).restart();\n                }\n                d.fx = d.x;\n                d.fy = d.y;\n            })\n            .on(\"drag\", (event, d) => {\n                d.fx = event.x;\n                d.fy = event.y;\n            })\n            .on(\"end\", (event, d) => {\n                if (!event.active) {\n                    simulation.alphaTarget(0);\n                }\n                d.fx = undefined;\n                d.fy = undefined;\n            });\n\n\n        selectAll<SVGCircleElement, NodeI>(`.${style.node}`)\n            .call(dragForce);\n    }\n\n    componentDidMount(): void {\n        this.updateDrag();\n    }\n\n    componentDidUpdate(): void {\n        this.updateDrag();\n    }\n\n   \n\n    render() {\n        const { nodes, onMouseOut, onMouseOver } = this.props;\n        return (\n            <g className={style.nodes}>\n                {nodes.map((node: NodeI) => (\n                    <Node\n                        onMouseOut={onMouseOut}\n                        onMouseOver={onMouseOver}\n                        key={node.ieeeAddr}\n                        node={node}\n                    />\n                ))}\n            </g>\n        );\n    }\n}\n","export type DeviceType = \"EndDevice\" | \"Router\" | \"Coordinator\";\n\n\ninterface OTAState {\n    state: \"available\" | \"updating\";\n    progress: number;\n    remaining: number;\n}\nexport type RGBColor = {\n    r: number;\n    g: number;\n    b: number;\n}\nexport type HueSaturationColor = {\n    hue: number;\n    saturation: number;\n}\n\nexport type XYColor = {\n    x: number;\n    y: number;\n}\nexport type AnyColor = RGBColor | XYColor | HueSaturationColor;\nexport interface DeviceState {\n    battery: number;\n    last_seen?: string;\n    elapsed?: number;\n    linkquality: number;\n    update?: OTAState;\n    state?: string;\n    brightness?: number;\n    color_temp?: number;\n    color?: AnyColor;\n    tilt?: number;\n    position?: number;\n    [k: string]: string | number | boolean | OTAState | AnyColor;\n}\n\nexport type Cluster = string;\n\nexport type Endpoint = string | number;\n\n\n\n\nexport interface Meta {\n    revision: number;\n    transportrev: number;\n    product: number;\n    majorrel: number;\n    minorrel: number;\n    maintrel: number;\n}\n\nexport interface Coordinator {\n    type: string;\n    meta: Meta;\n}\n\nexport interface Network {\n    channel: number;\n    pan_id: number;\n    extended_pan_id: number[];\n}\nexport interface Z2MConfig {\n    homeassistant: boolean;\n    advanced: {\n        elapsed: boolean;\n        last_seen: 'disable' | 'ISO_8601' | 'ISO_8601_local' | 'epoch';\n        legacy_api: boolean;\n    };\n    [k: string]: unknown;\n}\nexport interface BridgeConfig {\n    version: string;\n    commit: string;\n    coordinator: Coordinator;\n    network: Network;\n    log_level: string;\n    permit_join: boolean;\n\n}\n\nexport interface BridgeInfo {\n    config: Z2MConfig;\n    permit_join: boolean;\n    commit?: string;\n    version?: string;\n    coordinator?: {\n        meta?: {\n            revision?: string;\n        };\n        type?: string;\n    };\n}\n\nexport type PowerSource = \"Battery\" | \"Mains (single phase)\" | \"DC Source\";\n\nexport type GenericFeatureType = \"numeric\" | \"binary\" | \"enum\" | \"text\";\nexport type ComposeiteFeatureType = \"fan\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"composite\";\nexport type AllPossibleFeatures = GenericFeatureType & ComposeiteFeatureType;\n\n\nexport enum FeatureAccessMode {\n    NONE,\n    ACCESS_STATE = 0b001,\n    ACCESS_WRITE = 0b010,\n    ACCESS_READ = 0b100,\n}\nexport interface GenericExposedFeature {\n    type: GenericFeatureType;\n    name: string;\n    unit?: \"string\";\n    access?: FeatureAccessMode;\n    endpoint?: Endpoint;\n    property: string;\n}\n\nexport interface BinaryFeature extends GenericExposedFeature {\n    type: \"binary\";\n    value_on: unknown;\n    value_off: unknown;\n    value_toggle?: unknown;\n}\n\nexport interface CompositeFeature extends Omit<GenericExposedFeature, \"type\"> {\n    type: ComposeiteFeatureType;\n    features: (GenericExposedFeature | CompositeFeature)[];\n}\n\nexport type GenericOrCompositeFeature = GenericExposedFeature | CompositeFeature;\n\nexport interface NumericFeature extends GenericExposedFeature {\n    type: \"numeric\";\n    value_min?: number;\n    value_max?: number;\n}\n\nexport interface TextualFeature extends GenericExposedFeature {\n    type: \"text\";\n}\n\nexport interface EnumFeature extends GenericExposedFeature {\n    type: \"enum\";\n    values: unknown[];\n}\n\nexport interface LightFeature extends CompositeFeature {\n    type: \"light\";\n}\n\nexport interface SwitchFeature extends CompositeFeature {\n    type: \"switch\";\n}\n\nexport interface CoverFeature extends CompositeFeature {\n    type: \"cover\";\n}\n\nexport interface LockFeature extends CompositeFeature {\n    type: \"lock\";\n}\nexport interface FanFeature extends CompositeFeature {\n    type: \"fan\";\n}\n\n\nexport interface ColorFeature extends CompositeFeature {\n    type: \"composite\";\n    name: \"color_xy\" | \"color_hs\";\n    features: NumericFeature[];\n}\n\nexport interface DeviceDefinition {\n    description: string;\n    model: string;\n    supports: string;\n    vendor: string;\n    exposes: GenericExposedFeature[] | CompositeFeature[];\n}\n\nexport interface EndpointDescription {\n    bindings: BindRule[];\n    clusters: {\n        input: Cluster[];\n        output: Cluster[];\n    };\n}\n\nexport interface Device {\n    ieee_address: string;\n    type: DeviceType;\n    network_address: number;\n    model: string;\n    friendly_name: string;\n    power_source: PowerSource;\n    interviewing: boolean;\n    interview_completed: boolean;\n    software_build_id: number;\n    supported: boolean;\n    definition?: DeviceDefinition;\n    date_code: string;\n    endpoints: Map<Endpoint, EndpointDescription>;\n}\n\nexport type ObjectType = \"device\" | \"group\";\nexport interface BindRule {\n    cluster: Cluster;\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n\n}\nexport type SortDirection = \"asc\" | \"desc\";\n\nexport interface TouchLinkDevice {\n    ieee_address: string;\n    channel: number;\n}","import createStore from \"unistore\";\nimport devtools from \"unistore/devtools\";\nimport initialState from './initialState.txt';\n\n\nimport { Device, DeviceState, BridgeConfig, BridgeInfo, TouchLinkDevice } from \"./types\";\nimport { GraphI } from \"./components/map/types\";\nimport { deSerialize } from \"./utils\";\n\nexport interface GroupAddress {\n    endpoint: number;\n    ieee_address: string;\n}\n\nexport interface Group {\n    id: number;\n    friendly_name: string;\n    members: GroupAddress[];\n}\n\nexport interface LogMessage {\n    level: \"error\" | \"info\" | \"warning\";\n    message: string;\n}\n\nexport interface GlobalState {\n    devices: Map<string, Device>;\n    deviceStates: Map<string, DeviceState>;\n    touchlinkDevices: TouchLinkDevice[];\n    touchlinkScanInProgress: boolean;\n    touchlinkIdentifyInProgress: boolean;\n    touchlinkResetInProgress: boolean;\n    networkGraph: GraphI;\n    networkGraphIsLoading: boolean;\n    groups: Group[];\n    bridgeConfig: BridgeConfig;\n    bridgeInfo: BridgeInfo;\n    logs: LogMessage[];\n};\nconst _store = createStore(deSerialize(initialState) as GlobalState);\nconst store = process.env.NODE_ENV === 'production' ?  _store : devtools(_store);\n\nexport default store;","export default \"{\\n  \\\"devices\\\": {\\\"dataType\\\":\\\"Map\\\",\\\"value\\\":[]},\\n  \\\"deviceStates\\\": {\\\"dataType\\\":\\\"Map\\\",\\\"value\\\":[]},\\n  \\\"touchlinkDevices\\\": [],\\n  \\\"touchlinkScanInProgress\\\": false,\\n  \\\"touchlinkIdentifyInProgress\\\": false,\\n  \\\"touchlinkResetInProgress\\\": false,\\n  \\\"networkGraph\\\": {\\n    \\\"links\\\": [],\\n    \\\"nodes\\\": []\\n  },\\n  \\\"networkGraphIsLoading\\\": false,\\n  \\\"groups\\\": [],\\n  \\\"bridgeConfig\\\": {},\\n  \\\"bridgeInfo\\\": {},\\n  \\\"logs\\\": []\\n}\";","import ReconnectingWebSocket from \"reconnecting-websocket\";\nimport store, { Group, LogMessage } from \"./store\";\nimport { BridgeConfig, BridgeInfo, TouchLinkDevice, Device, DeviceState } from './types';\nimport { sanitizeGraph, isSecurePage } from \"./utils\";\nimport { Notyf } from \"notyf\";\nimport { GraphI } from \"./components/map/types\";\n\nimport orderBy from \"lodash/orderBy\";\n\n\nconst MAX_LOGS_RECORDS_IN_BUFFER = 100;\n\nconst notyf = new Notyf();\n\ninterface Message {\n    topic: string;\n    payload: string | object | object[] | string[];\n}\n\nconst blacklistedMessages: RegExp[] = [\n    /MQTT publish/\n];\n\nconst isLogMessage = (msg: LogMessage | ResponseWithStatus): msg is LogMessage => {\n    return (msg as LogMessage).level !== undefined && (msg as LogMessage).message !== undefined;\n}\n\nconst isResponseWithStatus = (msg: LogMessage | ResponseWithStatus): msg is ResponseWithStatus => {\n    return (msg as ResponseWithStatus).status !== undefined;\n}\n\nconst showNotity = (data: LogMessage | ResponseWithStatus): void => {\n    let message = \"\", level = \"\";\n    if (isLogMessage(data)) {\n        message = data.message;\n        level = data.level;\n    } else if (isResponseWithStatus(data)) {\n        switch (data.status) {\n            case \"error\":\n                level = \"error\";\n                message = data.error;\n                break;\n            default:\n                break;\n        }\n    }\n\n    switch (level) {\n        case \"error\":\n        case \"warning\":\n            notyf.error(message);\n            break;\n        case \"info\":\n            notyf.success(message);\n            break;\n\n        default:\n            break;\n    }\n};\n\ninterface ResponseWithStatus {\n    status: \"ok\" | \"error\";\n    data: unknown;\n    error?: string;\n}\ninterface TouchllinkScanResponse extends ResponseWithStatus {\n    data: {\n        found: TouchLinkDevice[];\n    };\n}\nclass Api {\n    url: string;\n    socket: ReconnectingWebSocket;\n    constructor(url: string) {\n        this.url = url;\n    }\n    send = (topic: string, payload: unknown): void => {\n        console.debug(\"Calling API\", { topic, payload });\n        this.socket.send(JSON.stringify({ topic, payload }));\n    }\n\n    connect(): void {\n        this.socket = new ReconnectingWebSocket(this.url);\n\n        this.socket.addEventListener(\"message\", this.onMessage);\n    }\n    private procsessBridgeMessage = (data: Message): void => {\n        switch (data.topic) {\n            case \"bridge/config\":\n                store.setState({\n                    bridgeConfig: data.payload as BridgeConfig\n                });\n                break;\n\n            case \"bridge/info\":\n                store.setState({\n                    bridgeInfo: data.payload as BridgeInfo\n                });\n                break;\n\n            case \"bridge/devices\":\n                {\n                    const devicesMap = new Map();\n                    orderBy((data.payload as Device[]), \"friendly_name\").forEach((device) => {\n                        const dev = { ...device };\n                        dev.endpoints = new Map(Object.entries(device.endpoints));\n                        devicesMap.set(device.ieee_address, dev);\n                    });\n                    store.setState({\n                        devices: devicesMap\n                    })\n                }\n                break;\n\n            case \"bridge/groups\":\n                store.setState({\n                    groups: data.payload as Group[]\n                })\n                break;\n\n            case \"bridge/event\":\n                break;\n\n            case \"bridge/logging\":\n                {\n                    const { logs } = store.getState();\n                    const newLogs = [...logs.slice(-MAX_LOGS_RECORDS_IN_BUFFER)];\n                    newLogs.push(data.payload as LogMessage);\n                    store.setState({ logs: newLogs });\n                    const log = data.payload as LogMessage;\n                    if (blacklistedMessages.every(val => !val.test(log.message))) {\n                        showNotity(log);\n                    }\n                }\n                break;\n\n            case \"bridge/response/networkmap\":\n                {\n                    const response = data.payload as ResponseWithStatus;\n                    if (response.status == \"ok\") {\n                        const { value } = response.data as {value: unknown};\n                        store.setState({\n                            networkGraphIsLoading: false,\n                            networkGraph: sanitizeGraph(value as GraphI)\n                        });\n                    } else {\n                        store.setState({ networkGraphIsLoading: false });\n                    }\n                }\n                break;\n\n\n            case \"bridge/response/touchlink/scan\":\n                {\n                    const { status, data: payloadData } = data.payload as TouchllinkScanResponse;\n                    if (status === \"ok\") {\n                        store.setState({ touchlinkScanInProgress: false, touchlinkDevices: payloadData.found });\n                    } else {\n                        store.setState({ touchlinkScanInProgress: false });\n                    }\n                }\n                break;\n\n            case \"bridge/response/touchlink/identify\":\n                store.setState({ touchlinkIdentifyInProgress: false });\n                break;\n\n            case \"bridge/response/touchlink/factory_reset\":\n                store.setState({ touchlinkResetInProgress: false });\n                break;\n\n            default:\n                break;\n        }\n        if (data.topic.startsWith(\"bridge/response/\")) {\n            showNotity(data.payload as ResponseWithStatus);\n        }\n    }\n\n    private onMessage = (event: MessageEvent): void => {\n        let data = {} as Message;\n        try {\n            data = JSON.parse(event.data) as Message;\n        } catch (e) {\n            notyf.error(e.message);\n            notyf.error(event.data);\n        }\n\n        if (data.topic.startsWith(\"bridge/\")) {\n            this.procsessBridgeMessage(data);\n        }  else {\n            const { deviceStates } = store.getState();\n            const newDeviceStates = new Map(deviceStates);\n            newDeviceStates.set(data.topic, { ...newDeviceStates.get(data.topic), ...(data.payload as DeviceState) });\n            store.setState({ deviceStates: newDeviceStates });\n        }\n    }\n}\nconst apiUrl = `${window.location.host}${document.location.pathname}api`;\nconst api = new Api(`${isSecurePage() ? 'wss' : 'ws'}://${apiUrl}`);\nexport default api;","/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { GlobalState } from \"./store\";\nimport { Store } from \"unistore\";\n\nimport { Cluster, Device, TouchLinkDevice } from \"./types\";\nimport api from \"./api\";\nimport { download } from \"./utils\";\n\nexport interface UtilsApi {\n    exportState(): Promise<void>;\n}\n\nexport interface TouchlinkApi {\n    touchlinkScan(): Promise<void>;\n    touchlinkIdentify(device: TouchLinkDevice): Promise<void>;\n    touchlinkReset(device: TouchLinkDevice): Promise<void>;\n}\n\nexport interface OtaApi {\n    checkOTA(deviceName: string): Promise<void>;\n    updateOTA(deviceName: string): Promise<void>;\n}\nexport interface DeviceApi {\n    renameDevice(\n        old: string,\n        newName: string,\n        homeassistantRename: boolean\n    ): Promise<void>;\n    removeDevice(dev: string, force: boolean, block: boolean): Promise<void>;\n    configureDevice(name: string): Promise<void>;\n}\n\nexport interface StateApi {\n    setStateValue(dev: string, name: string, value: unknown): Promise<void>;\n    setDeviceState(dev: string, value: object): Promise<void>;\n    getDeviceState(dev: string, value: object): Promise<void>;\n}\n\nexport interface GroupsApi {\n    createGroup(name: string): Promise<void>;\n    removeGroup(name: string): Promise<void>;\n    addDeviceToGroup(device: string, group: string): Promise<void>;\n    removeDeviceFromGroup(device: string, group: string): Promise<void>;\n}\nexport interface BindApi {\n    addBind(from: string, to: string, clusters: Cluster[]): Promise<void>;\n    removeBind(from: string, to: string, clusters: Cluster[]): Promise<void>;\n}\nexport interface BridgeApi {\n    setPermitJoin(permit: boolean, device: Device): Promise<void>;\n    updateConfigValue(name: string, value: unknown): Promise<void>;\n}\nexport interface MapApi {\n    networkMapRequest(): Promise<void>;\n}\n\nexport interface LegacyApi {\n    resetZnp(): Promise<void>;\n}\n\nconst actions = (store: Store<GlobalState>): object => ({\n    addBind: (\n        state,\n        from: string,\n        to: string,\n        clusters: Cluster[]\n    ): Promise<void> => {\n        const bindParams = {\n            from,\n            to,\n            clusters,\n        };\n        api.send(\"bridge/request/device/bind\", bindParams);\n        return Promise.resolve();\n    },\n    removeBind: (\n        state,\n        from: string,\n        to: string,\n        clusters: Cluster[]\n    ): Promise<void> => {\n        const bindParams = {\n            from,\n            to,\n            clusters,\n        };\n        api.send(\"bridge/request/device/unbind\", bindParams);\n        return Promise.resolve();\n    },\n\n    setStateValue(\n        state,\n        dev: string,\n        name: string,\n        value: string | number | boolean\n    ): Promise<void> {\n        api.send(`${dev}/set`, { [name]: value });\n        return Promise.resolve();\n    },\n    setDeviceState(state, dev: string, value: object) {\n        api.send(`${dev}/set`, value);\n        return Promise.resolve();\n    },\n    getDeviceState(state, dev: string, value: object) {\n        api.send(`${dev}/get`, value);\n        return Promise.resolve();\n    },\n    setPermitJoin(state, permit = true, device: Device): Promise<void> {\n        api.send(\"bridge/request/permit_join\", { value: permit, device: device?.friendly_name });\n        return Promise.resolve();\n    },\n\n    renameDevice: (\n        state,\n        from: string,\n        to: string,\n        homeassistantRename: boolean\n    ): Promise<void> => {\n        api.send(\"bridge/request/device/rename\", {\n            from,\n            to,\n            'homeassistant_rename': homeassistantRename,\n        });\n        return Promise.resolve();\n    },\n    removeDevice: (\n        state,\n        dev: string,\n        force: boolean,\n        block: boolean\n    ): Promise<void> => {\n        api.send(\"bridge/request/device/remove\", { id: dev, force, block });\n        return Promise.resolve();\n    },\n\n    configureDevice: (state, name: string): Promise<void> => {\n        api.send(\"bridge/request/device/configure\", { id: name });\n        return Promise.resolve();\n    },\n\n    networkMapRequest: (state): Promise<void> => {\n        store.setState({ networkGraphIsLoading: true, networkGraph: { nodes: [], links: [] } });\n        api.send(\"bridge/request/networkmap\", { type: \"raw\", routes: false });\n        return Promise.resolve();\n    },\n    createGroup: (state, group: string): Promise<void> => {\n        api.send(\"bridge/request/group/add\", group);\n        return Promise.resolve();\n    },\n\n    removeGroup: (state, group: string): Promise<void> => {\n        api.send(\"bridge/request/group/remove\", group);\n        return Promise.resolve();\n    },\n\n    addDeviceToGroup: (state, device: string, group: string): Promise<void> => {\n        api.send(\"bridge/request/group/members/add\", { group, device });\n        return Promise.resolve();\n    },\n\n    removeDeviceFromGroup: (\n        state,\n        device: string,\n        group: string\n    ): Promise<void> => {\n        api.send(\"bridge/request/group/members/remove\", { device, group });\n        return Promise.resolve();\n    },\n\n    touchlinkScan(): Promise<void> {\n        store.setState({ touchlinkScanInProgress: true, touchlinkDevices: [] });\n        api.send(\"bridge/request/touchlink/scan\", \"\");\n        return Promise.resolve();\n    },\n    touchlinkIdentify(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkIdentifyInProgress: true });\n        api.send(\"bridge/request/touchlink/identify\", device);\n        return Promise.resolve();\n    },\n    touchlinkReset(state, device: TouchLinkDevice): Promise<void> {\n        store.setState({ touchlinkResetInProgress: true });\n        api.send(\"bridge/request/touchlink/factory_reset\", device);\n        return Promise.resolve();\n    },\n\n    checkOTA: (state, deviceName: string): Promise<void> => {\n        api.send(\"bridge/request/device/ota_update/check\", { id: deviceName });\n        return Promise.resolve();\n    },\n    updateOTA: (state, deviceName: string): Promise<void> => {\n        api.send(\"bridge/request/device/ota_update/update\", { id: deviceName });\n        return Promise.resolve();\n    },\n    updateConfigValue(state, name: string, value: unknown): Promise<void> {\n        api.send(`bridge/request/config/${name}`, value);\n        return Promise.resolve();\n    },\n\n    resetZnp(state): Promise<void> {\n        api.send(`bridge/config/reset`, \"\");\n        return Promise.resolve();\n    },\n    exportState(state): Promise<void> {\n        download(state, 'state.json');\n        return Promise.resolve();\n    }\n});\nexport default actions;\n","import React, { ButtonHTMLAttributes, Component } from \"react\";\n\ninterface ButtonProps<T> {\n    item?: T;\n    onClick?(arg1: T): void;\n    promt?: boolean | string;\n}\n\nexport default class Button<T> extends Component<ButtonProps<T> & Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'onClick'>, {}> {\n    onClick = (): void => {\n        const { item, onClick, promt } = this.props;\n        let confirmed = true;\n        if (promt) {\n            confirmed = confirm(typeof promt === \"string\" ? promt : \"Are you sure?\");\n        }\n        confirmed && onClick && onClick(item);\n    };\n\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, item, promt, ...rest } = this.props;\n        return <button type=\"button\" {...rest} onClick={this.onClick}>{children}</button>;\n    }\n}","import { ZigbeeRelationship } from \"./types\";\n\ninterface LinkType {\n  title: string;\n  relationship: ZigbeeRelationship;\n}\nexport const linkTypes: LinkType[] = [\n  {\n      title: 'IsParent',\n      relationship: ZigbeeRelationship.NeigbhorIsParent\n  },\n  {\n      title: 'IsAChild',\n      relationship: ZigbeeRelationship.NeigbhorIsAChild\n  },\n  {\n      title: 'IsASibling',\n      relationship: ZigbeeRelationship.NeigbhorIsASibling\n  },\n  {\n      title: 'NoneOfTheAbove',\n      relationship: ZigbeeRelationship.NoneOfTheAbove\n  }\n];","import React, { FunctionComponent } from \"react\";\n\nconst Spinner: FunctionComponent = () => {\n  return <div className=\"d-flex align-items-center\">\n    <strong>Loading, please wait.</strong>\n    <div className=\"spinner-border ml-2\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n}\nexport default Spinner;","import React, { ChangeEvent, Component, createRef, Fragment } from \"react\";\nimport Links from \"./links\";\nimport Nodes from \"./nodes\";\nimport style from \"./map.css\";\nimport { GraphI, LinkI, NodeI, Source, Target, ZigbeeRelationship } from \"./types\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions, { MapApi } from \"../../actions\";\n\nimport Button from \"../button\";\nimport { ForceLink, forceLink, forceCollide, forceCenter, forceSimulation, forceX, forceY } from \"d3-force\";\nimport { select, selectAll, Selection } from \"d3-selection\";\nimport { forceManyBodyReuse } from \"d3-force-reuse\"\nimport { zoom, zoomIdentity, ZoomTransform } from \"d3-zoom\";\nimport { linkTypes } from \"./consts\";\nimport Spinner from \"../spinner\";\n\nexport interface MouseEventsResponderNode {\n    onMouseOver?: (arg0: NodeI, el: SVGPolygonElement | SVGCircleElement | SVGImageElement) => void;\n    onMouseOut?: (arg0: NodeI, el: SVGPolygonElement | SVGCircleElement | SVGImageElement) => void;\n    onDblClick?: (arg0: NodeI, el: SVGPolygonElement | SVGCircleElement | SVGImageElement) => void;\n}\n\ninterface MapState {\n    selectedNode: NodeI;\n    width: number;\n    height: number;\n    visibleLinks: ZigbeeRelationship[];\n}\nconst angle = (s: Source, t: Target) => Math.atan2(t.y - s.y, t.x - s.x);\nconst xpos = (offset: number, s: Source, t: Target) => offset * Math.cos(angle(s, t)) + s.x;\nconst ypos = (offset: number, s: Source, t: Target) => offset * Math.sin(angle(s, t)) + s.y;\n\nconst distancesMap = {\n    BrokenLink: 450,\n    Router2Router: 300,\n    Coordinator2Router: 400,\n    Coordinator2EndDevice: 100,\n    EndDevice2Router: 100\n};\n\nconst getDistance = (d: LinkI): number => {\n    const distance = distancesMap[d.linkType] ?? 200;\n    const depth = ~~(Math.min(4, d.depth));\n    return 50 * depth + distance;\n};\n\nconst computeLink = (d: LinkI, transform: ZoomTransform, radius: number, width: number, height: number): string => {\n    const src = d.source;\n    const dst = d.target;\n    const x1 = transform.applyX(Math.max(radius, Math.min(width - radius, src.x)));\n    const y1 = transform.applyY(Math.max(radius, Math.min(height - radius, src.y)));\n    const x2 = transform.applyX(Math.max(radius, Math.min(width - radius, dst.x)));\n    const y2 = transform.applyY(Math.max(radius, Math.min(height - radius, dst.y)));\n\n    const dx = x2 - x1, dy = y2 - y1;\n    const dr = Math.sqrt(dx * dx + dy * dy);\n    if (d.repeated) {\n        return `M${x1},${y1} A${dr},${dr} 0 0, 1${x2},${y2}`;\n    }\n    return `M ${x1} ${y1} L ${x2} ${y2}`;\n}\n\ntype SelNode = Selection<SVGElement, NodeI, HTMLElement, unknown>;\ntype SelLink = Selection<SVGElement, LinkI, HTMLElement, unknown>;\n\ntype TickedParams = {\n    transform: ZoomTransform;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n    width: number;\n    height: number;\n}\nconst ticked = ({ transform, node, link, linkLabel, width, height }: TickedParams): void => {\n    const radius = 40;\n    link.attr(\"d\", (d) => computeLink(d, transform, radius, width, height));\n\n    linkLabel\n        .attr('text-anchor', (d) => d.repeated ? 'start' : 'end')\n        .attr('x', (d) => transform.applyX(xpos(d.repeated ? 30 : 60, d.source, d.target)))\n        .attr('y', (d) => transform.applyY(ypos(d.repeated ? 30 : 60, d.source, d.target)))\n\n    const imgXShift = 32 / 2;\n    const imgYShift = 32 / 2;\n    const computeTransform = (d: NodeI) => {\n        const nodeX = Math.max(radius, Math.min(width - radius, transform.applyX(d.x))) - imgXShift;\n        const nodeY = Math.max(radius, Math.min(height - radius, transform.applyY(d.y))) - imgYShift;\n        return `translate(${nodeX}, ${nodeY})`;\n    }\n    node.attr(\"transform\", computeTransform);\n};\ntype ProcessHighlightsParams = {\n    networkGraph: GraphI;\n    links: LinkI[];\n    selectedNode: NodeI;\n    node: SelNode;\n    link: SelLink;\n    linkLabel: SelLink;\n}\nconst processHighlights = ({ networkGraph, links, selectedNode, node, link, linkLabel }: ProcessHighlightsParams) => {\n    const linkedByIndex = new Set<string>();\n    networkGraph.nodes.forEach(n => linkedByIndex.add(n.ieeeAddr + \",\" + n.ieeeAddr));\n    links.forEach((l) => linkedByIndex.add(l.sourceIeeeAddr + \",\" + l.targetIeeeAddr));\n\n    const neighboring = (a: Source, b: Target): boolean => linkedByIndex.has(a.ieeeAddr + \",\" + b.ieeeAddr)\n    const computeOpacity = (l: LinkI) => (l.source === selectedNode || l.target === selectedNode ? 1 : 0.15);\n    if (selectedNode) {\n        node.style(\"opacity\", (o: NodeI) => neighboring(selectedNode, o) || neighboring(o, selectedNode) ? 1 : 0.15);\n        link.style(\"stroke-opacity\", computeOpacity);\n        linkLabel.style(\"opacity\", computeOpacity);\n    } else {\n        node.style(\"opacity\", 1);\n        link.style(\"stroke-opacity\", 1);\n        linkLabel.style(\"opacity\", 1);\n    }\n}\n\nexport class MapComponent extends Component<GlobalState & MapApi, MapState> {\n    ref = createRef<HTMLDivElement>();\n    svgRef = createRef<SVGSVGElement>();\n    simulation = forceSimulation<NodeI, LinkI>();\n    state: Readonly<MapState> = {\n        selectedNode: null,\n        width: 0,\n        height: 0,\n        visibleLinks: [ZigbeeRelationship.NeigbhorIsAChild]\n    };\n    transform: ZoomTransform = zoomIdentity;\n\n    updateNodes = (): void => {\n        const { networkGraph } = this.props;\n        const { visibleLinks, selectedNode, width, height } = this.state;\n\n        const node = selectAll<SVGElement, NodeI>(`.${style.node}`);\n        const link = selectAll<SVGElement, LinkI>(`.${style.link}`);\n        const linkLabel = selectAll<SVGElement, LinkI>(`.${style.linkLabel}`);\n\n        const links = networkGraph.links.filter(l => visibleLinks.includes(l.relationship));\n        this.simulation.nodes(networkGraph.nodes);\n        this.simulation.force<ForceLink<NodeI, LinkI>>(\"link\").links(links);\n        this.simulation.on(\"tick\", () => ticked({ transform: this.transform, node, link, linkLabel, width, height }));\n\n\n        //add zoom capabilities\n        const everything = select<SVGGeometryElement, NodeI>('.everything');\n        const zoomHandler = zoom().on(\"zoom\", ({ transform }) => {\n            everything.attr(\"transform\", transform);\n            this.transform = transform;\n            ticked({ transform, node, link, linkLabel, width, height });\n        });\n        zoomHandler(select(this.svgRef.current));\n\n        processHighlights({ networkGraph, links, selectedNode, node, link, linkLabel });\n        node.on(\"click\", (event, d: NodeI) => {\n            const { selectedNode } = this.state;\n            this.setState({ selectedNode: selectedNode ? null : d });\n        });\n        this.simulation.alphaTarget(0.3).restart()\n    }\n\n\n    updateForces(width: number, height: number): void {\n        const linkForce = forceLink<NodeI, LinkI>()\n            .id(d => d.ieeeAddr)\n            .distance(getDistance)\n            .strength(0.2);\n\n        const chargeForce = forceManyBodyReuse()\n            .distanceMin(200)\n            .distanceMax(1000)\n            .strength(-200);\n\n        const repelForce = forceManyBodyReuse()\n            .strength(-140)\n            .distanceMax(50)\n            .distanceMin(20);\n\n        const collisionForce = forceCollide(40)\n            .strength(1);\n\n        const centerForce = forceCenter(width / 2, height / 2);\n\n        this.simulation = forceSimulation<NodeI, LinkI>()\n            .force(\"link\", linkForce)\n            .force(\"charge\", chargeForce)\n            .force(\"collisionForce\", collisionForce)\n            .force(\"repelForce\", repelForce)\n            .force(\"center\", centerForce)\n            .force(\"x\", forceX())\n            .force(\"y\", forceY())\n    }\n\n    initPage(): void {\n        const { width, height } = (this.ref.current as HTMLDivElement).getBoundingClientRect();\n        this.setState({ width, height });\n        this.updateForces(width, height);\n    }\n\n    componentDidMount(): void {\n        this.initPage()\n    }\n\n    componentDidUpdate(): void {\n        this.updateNodes();\n    }\n\n    renderMap() {\n        const { width, height, visibleLinks } = this.state;\n        const { networkGraph } = this.props;\n        const links = networkGraph.links.filter(l => visibleLinks.includes(l.relationship));\n        return (\n            <svg ref={this.svgRef} viewBox={`0 0 ${width} ${height}`}>\n                <g className=\"everything\">\n                    <Links links={links} />\n                    <Nodes\n                        nodes={networkGraph.nodes}\n                        simulation={this.simulation}\n                    />\n                </g>\n            </svg >\n        )\n    }\n    onRequestClick = (): void => {\n        const { networkMapRequest } = this.props;\n        networkMapRequest();\n    }\n    renderMessage() {\n        const { networkGraphIsLoading } = this.props;\n        return (\n            <div className=\"h-100 d-flex justify-content-center align-items-center\">\n                {\n                    networkGraphIsLoading ? (\n                        <div>\n                            <Spinner />\n                            <div>Depending on the size of your network this can take somewhere between 10 seconds and 2 minutes.</div>\n                        </div>\n\n                    ) : <Button onClick={this.onRequestClick} className=\"btn btn-primary d-block\">Load map</Button>\n                }\n            </div>\n        );\n    }\n    onLinkTypeFilterChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { visibleLinks: stateVisibleLinks } = this.state;\n        const { checked, value } = e.target;\n        const inValue = parseInt(value, 10);\n        let visibleLinks = [...stateVisibleLinks];\n        if (checked) {\n            visibleLinks.push(inValue);\n        } else {\n            visibleLinks = visibleLinks.filter((v) => v !== inValue);\n        }\n        this.setState({ visibleLinks });\n    }\n    renderMapControls() {\n        const { visibleLinks } = this.state;\n        return <div className={style.controls}>\n            {\n                linkTypes.map(linkType => (\n                    <div key={linkType.title} className=\"form-check form-check-inline\">\n                        <input onChange={this.onLinkTypeFilterChange} className=\"form-check-input\" type=\"checkbox\" id={linkType.title} value={linkType.relationship} checked={visibleLinks.includes(linkType.relationship)} />\n                        <label className=\"form-check-label\" htmlFor={linkType.title}>{linkType.title}</label>\n                    </div>\n                ))\n            }\n            {\n                <div className=\"btn-group btn-group-sm\" role=\"group\">\n                    <Button<void> title=\"Refresh data\" className=\"btn btn-primary\" onClick={this.onRequestClick}><i\n                        className=\"fa fa-sync\" /></Button>\n                </div>\n            }\n        </div>\n    }\n    render() {\n        const { networkGraph } = this.props;\n        return (\n            <div className={style.container} ref={this.ref}>\n                {networkGraph.nodes.length ? <Fragment>{this.renderMapControls()} {this.renderMap()}</Fragment> : this.renderMessage()}\n            </div>\n        );\n    }\n}\n\n\nconst mappedProps = [\"networkGraph\", \"networkGraphIsLoading\"];\nconst ConnectedMap = connect<{}, MapState, GlobalState, {}>(mappedProps, actions)(MapComponent);\nexport default ConnectedMap;\n","import React, { Component, FunctionComponent,  Fragment } from \"react\";\nimport cx from \"classnames\";\n// import * as style from \"./style.css\";\n\n\nexport const ModalHeader: FunctionComponent<{}> = props => {\n    return <div className=\"modal-header\">{props.children}</div>;\n};\n\nexport const ModalBody: FunctionComponent<{}> = props => {\n    return <div className=\"modal-body\">{props.children}</div>;\n};\n\nexport const ModalFooter: FunctionComponent<{}> = props => {\n    return <div className=\"modal-footer\">{props.children}</div>;\n};\ninterface ModalProps {\n    isOpen?: boolean;\n}\ninterface ModalState {\n    modalShow: string;\n    display: string;\n}\n\nclass Modal extends Component<ModalProps, ModalState> {\n    constructor(props: ModalProps) {\n        super(props);\n        this.state = {\n            modalShow: '',\n            display: 'none'\n        };\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    openModal() {\n        this.setState({\n            modalShow: 'show',\n            display: 'block'\n        });\n    }\n\n    closeModal() {\n        this.setState({\n            modalShow: '',\n            display: 'none'\n        });\n    }\n\n    componentDidMount() {\n        this.props.isOpen ? this.openModal() : this.closeModal();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.isOpen !== this.props.isOpen) {\n            this.props.isOpen ? this.openModal() : this.closeModal();\n        }\n    }\n\n    render() {\n        return (\n            <div\n                className={`modal fade ${ this.state.modalShow}`}\n\n                role=\"dialog\"\n                aria-hidden=\"true\"\n                style={{ display: this.state.display }}\n            >\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">{this.props.children}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Modal;\n\n\n\n// interface Props {\n//     onOk(): void;\n//     onCancel(): void;\n// }\n// const Modal: FunctionComponent<Props> = (props: Props) => {\n//     const { onOk, onCancel } = props;\n//     return (\n//         <Fragment>\n\n//             <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n//                 Launch demo modal\n// </button>\n//             <div className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n//                 <div className=\"modal-dialog\">\n//                     <div className=\"modal-content\">\n//                         <div className=\"modal-header\">\n//                             <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n//                             <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n//                                 <span aria-hidden=\"true\">&times;</span>\n//                             </button>\n//                         </div>\n//                         <div className=\"modal-body\">\n//                             ...\n//                         </div>\n//                         <div className=\"modal-footer\">\n//                             <button onClick={onOk} type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n//                             <button onClick={onCancel} type=\"button\" className=\"btn btn-primary\">Ok</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         </Fragment>\n//     );\n// };\n\n// export default Modal;\n","import React, { ChangeEvent, Component } from \"react\";\nimport Button from \"../button\";\nimport { Device, DeviceState } from \"../../types\";\nimport { connect } from \"unistore/react\";\nimport actions, { OtaApi, DeviceApi } from \"../../actions\";\nimport cx from \"classnames\";\nimport Modal, { ModalHeader, ModalBody, ModalFooter } from \"../modal\";\nimport { GlobalState } from \"../../store\";\ninterface DeviceControlGroupProps {\n    device: Device;\n    state?: DeviceState;\n}\ninterface DeviceRenameParams {\n    friendlyName: string;\n    isHassRename: boolean;\n}\ninterface DeviceRemovalParams {\n    block: boolean;\n    force: boolean;\n}\n\n\ninterface DeviceControlGroupState {\n    isRenameModalOpened: boolean;\n    isDeviceRemovalModalOpened: boolean;\n    removeParams: DeviceRemovalParams;\n    renameParams: DeviceRenameParams;\n\n}\n\nexport class DeviceControlGroup extends Component<DeviceControlGroupProps & DeviceApi & OtaApi & GlobalState, DeviceControlGroupState> {\n    state = {\n        isRenameModalOpened: false,\n        isDeviceRemovalModalOpened: false,\n        renameParams: {\n            friendlyName: this.props.device.friendly_name,\n            isHassRename: false\n        },\n        removeParams: {\n            block: false,\n            force: false\n        }\n    }\n\n    onRenameClick = async (): Promise<void> => {\n        const { renameDevice, device } = this.props;\n        const { renameParams } = this.state;\n\n        await renameDevice(device.friendly_name, renameParams.friendlyName, renameParams.isHassRename);\n        this.setState({\n            isRenameModalOpened: false\n        });\n    };\n\n\n    onRemoveClick = (): void => {\n        const { removeDevice, device } = this.props;\n        const { removeParams } = this.state;\n        removeDevice(device.friendly_name, removeParams.force, removeParams.block);\n        this.setState({\n            isDeviceRemovalModalOpened: false\n        });\n    };\n\n    toggleRenameModal = (): void => {\n        const { isRenameModalOpened } = this.state;\n        this.setState({ isRenameModalOpened: !isRenameModalOpened });\n    }\n    toggleDeviceRemovalModal = (): void => {\n        const { isDeviceRemovalModalOpened } = this.state;\n        this.setState({ isDeviceRemovalModalOpened: !isDeviceRemovalModalOpened });\n    }\n\n    onHassEntityIdChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { checked } = e.target;\n        renameParams.isHassRename = checked;\n        this.setState({ renameParams });\n    }\n    onFriendlyNameChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { renameParams } = this.state;\n        const { value } = e.target;\n        renameParams.friendlyName = value;\n        this.setState({ renameParams });\n    }\n\n    onDeviceRemovalParamChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { removeParams } = this.state;\n        const { checked, name } = e.target;\n        removeParams[name] = checked;\n        this.setState({ removeParams });\n    }\n    renderRenameButton() {\n        const { bridgeInfo, device } = this.props;\n        const { isRenameModalOpened, renameParams } = this.state;\n        return (\n            <><Button<void> className=\"btn btn-secondary\" onClick={this.toggleRenameModal} title=\"Rename device\"><i className=\"fa fa-edit\" /></Button>\n                <Modal isOpen={isRenameModalOpened}>\n                    <ModalHeader>\n                        <h3>Rename device</h3>\n                        <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={this.toggleRenameModal}>\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </ModalHeader>\n                    <ModalBody>\n                        <div className=\"mb-3\">\n                            <label htmlFor={`fn${device.ieee_address}`} className=\"form-label\">Friendly name</label>\n                            <input id={`fn${device.ieee_address}`} onChange={this.onFriendlyNameChange} type=\"text\" className=\"form-control\" value={renameParams.friendlyName} />\n                        </div>\n                        {bridgeInfo.config.homeassistant ? (\n                            <div className=\"form-check form-switch\">\n                                <input className=\"form-check-input\" checked={renameParams.isHassRename} type=\"checkbox\" id={`hass${device.ieee_address}`} onChange={this.onHassEntityIdChange} />\n                                <label className=\"form-check-label\" htmlFor={`hass${device.ieee_address}`}>Update Home Assistant entity ID</label>\n                            </div>\n                        ) : null}\n                    </ModalBody>\n                    <ModalFooter>\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleRenameModal}>Close</button>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.onRenameClick}>Save changes</button>\n                    </ModalFooter>\n                </Modal></>\n        )\n    }\n    renderDeviceRemovalButton() {\n        const { device } = this.props;\n        const { isDeviceRemovalModalOpened, removeParams } = this.state;\n        return (\n            <><Modal isOpen={isDeviceRemovalModalOpened}>\n                <ModalHeader>\n                    <h3>Remove device</h3>\n                    <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={this.toggleDeviceRemovalModal}><span aria-hidden=\"true\">&times;</span></button>\n                </ModalHeader>\n                <ModalBody>\n                    <div className=\"form-check form-switch\">\n                        <input className=\"form-check-input\" name=\"force\" checked={removeParams.force} type=\"checkbox\" id={`force${device.ieee_address}`} onChange={this.onDeviceRemovalParamChange} />\n                        <label className=\"form-check-label\" htmlFor={`force${device.ieee_address}`}>Force remove</label>\n                    </div>\n                    <div className=\"form-check form-switch\">\n                        <input className=\"form-check-input\" name=\"block\" checked={removeParams.block} type=\"checkbox\" id={`block${device.ieee_address}`} onChange={this.onDeviceRemovalParamChange} />\n                        <label className=\"form-check-label\" htmlFor={`block${device.ieee_address}`}>Block from joining again</label>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={this.toggleDeviceRemovalModal}>Close</button>\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onRemoveClick}>Delete</button>\n                </ModalFooter>\n            </Modal>\n                <button onClick={this.toggleDeviceRemovalModal} className=\"btn btn-danger\" title=\"Remove device\"><i className={cx(\"fa\", \"fa-trash\")} /></button></>\n        )\n    }\n    render() {\n        const { device, configureDevice, checkOTA, updateOTA, state } = this.props;\n        return (\n            <div className=\"btn-group btn-group-sm\" role=\"group\">\n                {this.renderRenameButton()}\n                <Button<string> className=\"btn btn-secondary\" onClick={configureDevice} item={device.friendly_name} title=\"Reconfigure\" promt><i className={cx(\"fa\", \"fa-cogs\")} /></Button>\n                {\n                    state?.update?.state === \"available\" ?\n                        <Button<string> className=\"btn btn-secondary\" onClick={updateOTA} item={device.friendly_name} title=\"Update OTA\" promt><i className={cx(\"fa\", \"fa-cloud-download-alt\")} /></Button>\n                        : <Button<string> className=\"btn btn-secondary\" onClick={checkOTA} item={device.friendly_name} title=\"Check OTA\"><i className={cx(\"fa\", \"fa-cloud\")} /></Button>\n                }\n                {this.renderDeviceRemovalButton()}\n\n\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedDeviceControlGroup = connect<DeviceControlGroupProps, {}, GlobalState, DeviceApi & OtaApi>(mappedProps, actions)(DeviceControlGroup);\nexport default ConnectedDeviceControlGroup;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"device-pic\":\"_2UWt6cv5iKbBWQ1njU-Knh\"};","// extracted by mini-css-extract-plugin\nexport default {\"plug\":\"_2Qj8QVth6tVVFe6VESug0N\",\"blinking\":\"t22iUK3r3w1jlcSwxWXN9\",\"blinker\":\"_3SpBv5_CMt6ERjs-mp41bf\"};","import  React, { FunctionComponent} from \"react\";\nimport { PowerSource as PowerSourceType } from \"../../types\";\nimport style from \"./style.css\";\n\n\ninterface PowerSourceProps {\n    source: PowerSourceType;\n    battery?: number;\n}\n\n\nconst PowerSource: FunctionComponent<PowerSourceProps> = ({ source, battery, ...rest }) => {\n    let batteryClass = \"\";\n\n    switch (source) {\n        case \"Battery\":\n            if (battery >= 85) {\n                batteryClass = \"fa-battery-full\";\n            } else if (battery >= 75) {\n                batteryClass = \"fa-battery-three-quarters\";\n            } else if (battery >= 50) {\n                batteryClass = \"fa-battery-half\";\n            } else if (battery >= 25) {\n                batteryClass = \"fa-battery-quarter\";\n            } else if (battery >= 10) {\n                batteryClass = `fa-battery-empty ${style.blinking}`\n            } else {\n                return <span className={`${style.blinking} text-danger`} role=\"alert\">{battery}%</span>\n            }\n            return <i className={`fa ${batteryClass}`}\n                title={`${source} ${battery ? `, power level ${battery}%` : \"\"} `} {...rest} />;\n\n        case \"Mains (single phase)\":\n        case \"DC Source\":\n            return <i className={`fa fa-plug ${style.plug}`} title={source} {...rest} />;\n        default:\n            return <i className={`fa fa-question`} title={source} {...rest} />;\n    }\n};\n\nexport default PowerSource;\n","import React, { Fragment } from \"react\";\nimport { Device } from \"../../types\";\nimport { sanitizeZ2MDeviceName } from \"../../utils\";\ntype VendorProps = {\n  device: Device;\n}\n\n\nexport const VendorLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  if (device.supported) {\n    const url = `https://www.zigbee2mqtt.io/information/supported_devices.html#${encodeURIComponent(sanitizeZ2MDeviceName(device.definition?.vendor?.toLowerCase()))}`;\n    return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{sanitizeZ2MDeviceName(device.definition?.vendor)}</a>\n  }\n  return <Fragment>Unsupported</Fragment>;\n}\n\n\nexport const ModelLink: React.FunctionComponent<VendorProps> = (props: VendorProps) => {\n  const { device } = props;\n  let url = 'https://www.zigbee2mqtt.io/how_tos/how_to_support_new_devices.html#how-to-support-new-devices';\n  let title = 'Unsupported';\n  if (device.supported) {\n    const acnchor = [\n      encodeURIComponent(device.definition?.vendor?.toLowerCase()),\n      encodeURIComponent(device.definition?.model?.toLowerCase()),\n    ].join('-');\n    url = `https://www.zigbee2mqtt.io/devices/${encodeURIComponent(device.definition?.model)}.html#${acnchor}`;\n    title = device.definition?.model;\n  }\n  return <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{title}</a>\n}\n","/* eslint-disable react/display-name */\nimport React, { Component, Fragment } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport { toHex, toHHMMSS } from \"../../utils\";\nimport DeviceControlGroup from \"../device-control\";\nimport cx from \"classnames\";\nimport style from \"./style.css\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport PowerSourceComp from \"../power-source\";\nimport get from 'lodash/get';\nimport DeviceImage from \"../device-image\";\nimport { ModelLink, VendorLink } from \"../vendor-links/verndor-links\";\n\n\ntype DeviceInfoProps = {\n    device: Device;\n}\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\n\nconst displayProps = [\n    {\n        key: 'definition.description',\n        label: 'Description',\n        if: 'supported'\n    },\n    {\n        render: (device: Device) => <dd className=\"col-7\" ><p className={cx('mb-0', 'font-weight-bold', { 'text-danger': !device.supported, 'text-success': device.supported })}>{device.supported ? 'Supported' : 'Unsupported'}</p></dd>,\n        label: 'Support status'\n    },\n    {\n        render: (device: Device) => <dd className=\"col-7\">{device.definition.supports}</dd>,\n        label: 'Supports',\n        if: 'definition.supports'\n    },\n    {\n        key: 'ieee_address',\n        label: 'IEEE address'\n    },\n    {\n        key: 'network_address',\n        label: 'Network address',\n        render: (device: Device) => <dd className=\"col-7\">{toHex(device.network_address)}</dd>,\n    },\n    {\n        key: 'date_code',\n        label: 'Firmware build date',\n        if: 'date_code'\n    },\n    {\n        key: 'software_build_id',\n        label: 'Firmware version',\n        if: 'software_build_id'\n    },\n\n    {\n        key: 'definition.vendor',\n        label: 'Vendor',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-7\"><VendorLink device={device} /></dd>\n    },\n    {\n        key: 'definition.model',\n        label: 'Model',\n        if: 'supported',\n        render: (device: Device) => <dd className=\"col-7\"><ModelLink device={device} /></dd>\n    },\n\n    {\n        label: 'Power source',\n        render: (device: Device) => <dd className=\"col-7\"><PowerSourceComp source={device.power_source} /></dd>\n    },\n    {\n        label: 'Interview completed',\n        render: (device: Device) => <dd className=\"col-7\">{device.interview_completed ? 'Yes' : 'No'}</dd>\n    }\n];\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DeviceInfo extends Component<DeviceInfoProps & PropsFromStore, {}> {\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceStatus: DeviceState = deviceStates.get(device.friendly_name);\n\n        return (\n            <div className=\"card\">\n                <div className=\"d-flex justify-content-center\">\n                    <DeviceImage className={`card-img-top w-auto ${style[\"device-pic\"]}`} device={device} deviceStatus={deviceStatus} />\n                </div>\n\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{device.type}</h5>\n\n                    <dl className=\"row\">\n                        {\n                            displayProps.filter(prop => get(device, prop.if, false)).map(prop => (\n                                <Fragment key={prop.label}>\n                                    <dt className=\"col-5\">{prop.label}</dt>\n                                    {prop.render ?\n                                        prop.render(device) : <dd className=\"col-7\">{get(device, prop.key)}</dd>}\n\n                                </Fragment>\n                            ))\n                        }\n                        {\n                            deviceStatus?.update?.state === \"updating\" ? (\n                                <Fragment>\n                                    <dt className=\"col-5\">Updating firmware</dt>\n                                    <dd className=\"col-7\">\n                                        <div className=\"progress\">\n                                            <div className=\"progress-bar progress-bar-striped progress-bar-animated\" style={{ width: `${deviceStatus.update.progress}%` }}>\n                                                {deviceStatus.update.progress}%\n                                        </div>\n                                        </div>\n                                        <div>Remaining time {toHHMMSS(deviceStatus.update.remaining)}</div>\n                                    </dd>\n                                </Fragment>\n                            ) : null\n                        }\n                    </dl>\n                </div>\n                <div className=\"card-footer\">\n                    <DeviceControlGroup device={device} state={deviceStatus} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceInfoPage = connect<DeviceInfoProps, {}, GlobalState, PropsFromStore>(mappedProps)(DeviceInfo);\nexport default ConnectedDeviceInfoPage;","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Device, ObjectType } from \"../../types\";\nimport { getDeviceDisplayName } from \"../../utils\";\nimport { Group } from \"../../store\";\nconst DELIMITER = '|';\ninterface DevicePickerProps {\n    type: ObjectType;\n    value: string | number;\n    devices: Map<string, Device>;\n    groups?: Group[];\n    onChange(device: Device | Group, type: ObjectType): void;\n}\nexport default class DevicePicker extends Component<DevicePickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange, devices, groups = [] } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n\n        if (devices.has(value)) {\n            onChange(devices.get(value), \"device\");\n        } else {\n            const group = groups.find(g => parseInt(value, 10) === g.id);\n            onChange(group, \"group\");\n        }\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { devices, groups, value, type, onChange, ...rest } = this.props;\n        let options = [<option key=\"hidden\" hidden>Select device</option>];\n\n        const devicesOptions = [];\n        devices.forEach((device) => {\n            devicesOptions.push(<option\n                title={device.definition?.description}\n                key={device.ieee_address}\n                value={device.ieee_address}\n            >{getDeviceDisplayName(device)}</option>);\n        });\n        if (groups && groups.length) {\n            const groupOptions = groups.map(group => <option\n                key={group.friendly_name}\n                value={group.id}>{group.friendly_name}\n            </option>);\n            options.push(<optgroup key=\"Groups\" label=\"Groups\">{groupOptions}</optgroup>);\n            options.push(<optgroup key=\"Devices\" label=\"Devices\">{devicesOptions}</optgroup>);\n        } else {\n            options = options.concat(devicesOptions);\n        }\n        return <select\n            value={value}\n            onChange={this.onSelect}\n            className=\"form-control\"\n            {...rest}\n        >{options}\n\n        </select>;\n\n    }\n}","import React, { ChangeEvent, Component, SelectHTMLAttributes } from \"react\";\nimport { Endpoint } from \"../../types\";\n\n\n\ninterface EndpointPickerProps {\n    onChange(endpoint: Endpoint): void;\n    value: Endpoint;\n    values: Endpoint[];\n}\n\nexport default class EndpointPicker extends Component<EndpointPickerProps & Omit<SelectHTMLAttributes<HTMLSelectElement>, 'onChange'>, {}> {\n    onSelect = (e: ChangeEvent<HTMLSelectElement>): void => {\n        const { onChange } = this.props;\n        const { value } = e.target as HTMLSelectElement;\n        onChange(value);\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { onSelect, value, values, disabled, onChange, ...rest } = this.props;\n        const hasOnlyOneEP = values.length == 1;\n\n        const options = values.map(ep => <option key={ep} value={ep}>{ep}</option>)\n        options.unshift(<option key=\"hidded\" hidden>Select endpoint</option>);\n        return <select disabled={value && hasOnlyOneEP || disabled}\n            value={value}\n            className=\"form-control\"\n            title={hasOnlyOneEP ? 'The only endpoint' : null}\n            onChange={this.onSelect}\n            {...rest}>\n            {options}\n        </select>;\n\n    }\n}","import React, { ChangeEvent, Component, InputHTMLAttributes } from \"react\";\nimport { Cluster } from \"../../types\";\nimport { randomString } from \"../../utils\";\n\n\n\nconst clusterDescriptions = {\n    genScenes: \"Scenes\",\n    genOnOff: \"OnOff\",\n    genLevelCtrl: \"LevelCtrl\",\n    lightingColorCtrl: \"LColorCtrl\",\n    closuresWindowCovering: \"Closures\",\n}\ninterface ClusterPickerProps {\n    value: Cluster[];\n    onChange(arg1: Cluster[] | undefined): void;\n    clusters: Cluster[];\n\n}\ninterface ClusterPickerState {\n    pickerId: string;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class ClusterPicker extends Component<ClusterPickerProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>, ClusterPickerState> {\n    public static defaultProps = {\n        clusters: []\n    };\n    state: Readonly<ClusterPickerState> = {\n        pickerId: randomString(5)\n    }\n\n    onChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { onChange } = this.props;\n        let { value } = this.props;\n        const { checked: isChecked, name } = e.target;\n        if (isChecked) {\n            value.push(name);\n        } else {\n            value = value.filter(v => v !== name);\n        }\n\n        onChange(value);\n    }\n    render() {\n        const { pickerId } = this.state;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { clusters, value, onChange, ...rest } = this.props;\n\n        const options = clusters.map(cluster => (\n            <div key={cluster} className=\"form-check form-check-inline\">\n                <input className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={value.includes(cluster)}\n                    name={cluster}\n                    id={`${pickerId}_${cluster}`}\n                    value={cluster}\n                    onChange={this.onChange}\n                    {...rest}\n                />\n                <label className=\"form-check-label\" htmlFor={`${pickerId}_${cluster}`} title={cluster}>{clusterDescriptions[cluster] ?? cluster}</label>\n            </div>\n        ));\n        return options;\n    }\n}","import React, { Component } from \"react\";\nimport { Device, Endpoint, Cluster, ObjectType } from \"../../types\";\nimport DevicePicker from \"../device-picker\";\nimport EndpointPicker from \"../endpoint-picker\";\nimport ClusterPicker from \"../cluster-picker\";\nimport Button from \"../button\";\nimport { Group } from \"../../store\";\nimport { NiceBindingRule } from \"./bind\";\n\n\n\n\ninterface BindRowProps {\n    rule: NiceBindingRule;\n    idx: number;\n    devices: Map<string, Device>;\n    groups: Group[];\n    device: Device;\n    onBind(from: string, to: string, clusters: Cluster[]): void;\n    onUnBind(from: string, to: string, clusters: Cluster[]): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface BindRowState {\n    stateRule: NiceBindingRule;\n}\n\nexport const getEndpoints = (obj: Device | Group): Endpoint[] => {\n    if (!obj) {\n        return []\n    } else if ((obj as Device).endpoints) {\n        return Array.from((obj as Device).endpoints.keys());\n    } else if ((obj as Group).members) {\n        return (obj as Group).members.map(g => g.endpoint);\n    }\n    return [];\n}\nconst getTarget = (rule: NiceBindingRule, devices: Map<string, Device>, groups: Group[]) => {\n    if (rule.target.type === \"group\") {\n        return groups.find(g => g.id === rule.target.id);\n    }\n    return devices.get(rule.target.ieee_address);\n}\n\nexport default class BindRow extends Component<BindRowProps, BindRowState> {\n    state: Readonly<BindRowState> = {\n        stateRule: null\n    }\n    static getDerivedStateFromProps(props: Readonly<BindRowProps>, state: BindRowState): Partial<BindRowState> {\n        const { rule } = props;\n        return {\n            stateRule: rule\n        };\n    }\n    setSourceEp = (sourceEp: Endpoint): void => {\n        const { stateRule } = this.state;\n        stateRule.source.endpoint = sourceEp;\n        this.setState({ stateRule });\n    }\n\n    setDestination = (destination: Device | Group, type: ObjectType): void => {\n        const { stateRule } = this.state;\n        if (type === \"device\") {\n            const endpoints = getEndpoints(destination);\n\n            stateRule.target['ieee_address'] = (destination as Device)['ieee_address'];\n            stateRule.target.type = \"endpoint\";\n            stateRule.target.endpoint = endpoints[0];\n            delete stateRule.target.id;\n        } else if (type === \"group\") {\n            stateRule.target.id = (destination as Group).id;\n            stateRule.target.type = \"group\";\n            delete stateRule.target.ieee_address;\n        }\n        stateRule.clusters = [];\n\n        this.setState({ stateRule });\n    }\n\n    setDestinationEp = (destinationEp: Endpoint): void => {\n\n        const { stateRule } = this.state;\n        stateRule.target.endpoint = destinationEp;\n        stateRule.clusters = [];\n        this.setState({ stateRule });\n    }\n\n    setClusters = (clusters: Cluster[]): void => {\n        const { stateRule } = this.state;\n        stateRule.clusters = clusters;\n        this.setState({ stateRule });\n    }\n\n    getBidningParams(): { from: string; to: string; clusters: string[] } {\n        const { device, groups, devices } = this.props;\n        const { stateRule } = this.state;\n        const from = `${device.friendly_name}/${stateRule.source.endpoint}`;\n        let to: string;\n        if (stateRule.target.type === \"group\") {\n            const targetGroup = groups.find(group => group.id === stateRule.target.id);\n            to = `${targetGroup.friendly_name}`;\n        } else if (stateRule.target.type === \"endpoint\") {\n            const targeDevice = devices.get(stateRule.target.ieee_address);\n            if (targeDevice.type === \"Coordinator\") {\n                to = `${targeDevice.friendly_name}`;\n            } else {\n                to = `${targeDevice.friendly_name}/${stateRule.target.endpoint}`;\n            }\n        }\n        return { from, to, clusters: stateRule.clusters };\n    }\n\n    onBindClick = (): void => {\n        const { onBind } = this.props;\n        const { from, to, clusters } = this.getBidningParams();\n        onBind(from, to, clusters);\n    }\n\n    onUnBindClick = (): void => {\n        const { onUnBind } = this.props;\n        const { from, to, clusters } = this.getBidningParams();\n        onUnBind(from, to, clusters);\n\n    }\n\n    isValidRule(): boolean {\n        const { stateRule } = this.state;\n        let valid = false;\n        if (stateRule.target.type == \"endpoint\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.ieee_address\n                && stateRule.target.endpoint\n                && stateRule.clusters.length > 0;\n        } else if (stateRule.target.type == \"group\") {\n            valid = stateRule.source.endpoint\n                && stateRule.target.id\n                && stateRule.clusters.length > 0;\n        }\n        return valid;\n    }\n\n    render() {\n        const { devices, groups, idx, device } = this.props;\n        const { stateRule } = this.state;\n\n        const targetType: ObjectType = stateRule.target.type === \"endpoint\" ? \"device\" : \"group\";\n\n        const sourceEndpoints = getEndpoints(device);\n        const target = getTarget(stateRule, devices, groups);\n        const destinationEndpoints = getEndpoints(target);\n\n        const possibleClusters: Set<Cluster> = new Set(stateRule.clusters);\n        if (device.endpoints.has(stateRule.source.endpoint)) {\n            device.endpoints.get(stateRule.source.endpoint).clusters.output.forEach(cluster => possibleClusters.add(cluster));\n        }\n        return (\n            <tr>\n                <th scope=\"row\">{idx + 1}</th>\n                <td><EndpointPicker disabled={!stateRule.isNew} values={sourceEndpoints} value={stateRule.source.endpoint} onChange={this.setSourceEp} /></td>\n                <td><DevicePicker disabled={!stateRule.isNew} type={targetType} value={stateRule.target.ieee_address || stateRule.target.id} devices={devices} groups={groups} onChange={this.setDestination} /></td>\n                <td>{stateRule.target.type === \"endpoint\" ? <EndpointPicker disabled={!stateRule.isNew} values={destinationEndpoints} value={stateRule.target.endpoint} onChange={this.setDestinationEp} /> : null}</td>\n                <td><ClusterPicker clusters={Array.from(possibleClusters)} value={stateRule.clusters} onChange={this.setClusters} /></td>\n                <td>\n                    <div className=\"btn-group btn-group-sm\">\n                        <Button<void> disabled={!this.isValidRule()} title=\"Bind\" className=\"btn btn-primary\" onClick={this.onBindClick}><i\n                            className=\"fa fa-heart\" /></Button>\n                        <Button<void> disabled={!stateRule.isNew && !this.isValidRule()} title=\"Unbind\" className=\"btn btn-secondary\" onClick={this.onUnBindClick}><i\n                            className=\"fa fa-heart-broken\" /></Button>\n                    </div>\n                </td>\n            </tr>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { Device, Cluster, Endpoint } from \"../../types\";\nimport BindRow, { getEndpoints } from \"./bind-row\";\nimport actions, { BindApi } from \"../../actions\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState, Group } from \"../../store\";\n\n\ninterface PropsFromStore {\n    devices: Map<string, Device>;\n    groups: Group[];\n}\ninterface BindProps {\n    device: Device;\n}\n\nexport interface NiceBindingRule {\n    id?: number;\n    isNew?: number;\n    source: {\n        ieee_address: string;\n        endpoint: Endpoint;\n    };\n    target: {\n        id?: number;\n        endpoint?: Endpoint;\n        ieee_address?: string;\n        type: \"endpoint\" | \"group\";\n    };\n    clusters: Cluster[];\n}\nconst rule2key = (rule: NiceBindingRule): string => `${rule.isNew}${rule.source.ieee_address}-${rule.target.id}-${rule.target.ieee_address}-${rule.clusters.join('-')}`;\nconst convertBidningsIntoNiceStructure = (device: Device): NiceBindingRule[] => {\n    const bindings = {};\n    device.endpoints.forEach((description, endpoint) => {\n        description.bindings\n            .forEach(b => {\n                const targetId = b.target.id ?? b.target.ieee_address;\n                if (bindings[targetId]) {\n                    bindings[targetId].clusters.push(b.cluster);\n                } else {\n                    bindings[targetId] = {\n                        source: {\n                            // eslint-disable-next-line @typescript-eslint/camelcase\n                            ieee_address: device.ieee_address,\n                            endpoint\n                        },\n                        target: b.target,\n                        clusters: [b.cluster]\n                    }\n                }\n            });\n    });\n    return Object.values(bindings);\n}\ntype BindState = {\n    bidingRules: NiceBindingRule[];\n}\nexport class Bind extends Component<BindProps & PropsFromStore & BindApi, BindState> {\n    state: BindState = {\n        bidingRules: []\n    }\n    onBindClick = (from: string, to: string, clusters: Cluster[]): void => {\n        const { addBind } = this.props;\n        addBind(from, to, clusters);\n    };\n    onUnBindClick = (from: string, to: string, clusters: Cluster[]): void => {\n        const { removeBind } = this.props;\n        removeBind(from, to, clusters);\n    };\n    static getDerivedStateFromProps(props: Readonly<BindProps & PropsFromStore>, state: BindState): Partial<BindState> {\n        const { device } = props;\n        const endpoints = getEndpoints(device);\n        const bidingRules = convertBidningsIntoNiceStructure(device);\n\n        bidingRules.push({ isNew: Date.now(), target: {}, source: {'ieee_address': device.ieee_address, endpoint: endpoints[0]}, clusters: [] } as NiceBindingRule);\n        return {\n            bidingRules\n        };\n    }\n    render() {\n        const { device, devices, groups } = this.props;\n        const { bidingRules } = this.state;\n        return (\n            <div className=\"card table-responsive\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Source EP</th>\n                            <th scope=\"col\">Destination</th>\n                            <th scope=\"col\">Destination EP</th>\n                            <th scope=\"col\">Clusters</th>\n                            <th scope=\"col\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            bidingRules.map((rule, idx) => <BindRow\n                                key={rule2key(rule)}\n                                rule={rule}\n                                groups={groups}\n                                onUnBind={this.onUnBindClick}\n                                onBind={this.onBindClick}\n                                device={device}\n                                idx={idx}\n                                devices={devices} />)\n                        }\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"devices\", \"groups\"];\nconst ConnectedBindPage = connect<BindProps, {}, GlobalState, PropsFromStore & BindApi>(mappedProps, actions)(Bind);\nexport default ConnectedBindPage","import React, { Component } from \"react\";\nimport { Device, DeviceState } from \"../../types\";\nimport actions, { StateApi } from \"../../actions\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n\n}\ninterface StatesProps {\n    device: Device;\n}\n\nclass States extends Component<StatesProps & PropsFromStore & StateApi, {}> {\n    setStateValue = (name: string, value: unknown): void => {\n        const { setStateValue, device } = this.props;\n        setStateValue(device.friendly_name, name, value);\n    };\n\n    render() {\n        const { device, deviceStates } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {};\n        return (\n            <div className=\"card\">\n                <pre>{JSON.stringify(deviceState, null, 4)}</pre>\n            </div>\n        );\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\nconst ConnectedDeviceStates = connect<StatesProps, {}, GlobalState, StateApi>(mappedProps, actions)(States);\nexport default ConnectedDeviceStates;\n","\nimport { GenericExposedFeature, BinaryFeature, NumericFeature, EnumFeature, LightFeature, CompositeFeature, SwitchFeature, CoverFeature, LockFeature, ColorFeature, TextualFeature } from \"../../types\";\n\nexport function isBinaryFeature(feature: GenericExposedFeature | CompositeFeature): feature is BinaryFeature {\n  return feature.type === \"binary\";\n}\n\nexport function isNumericFeature(feature: GenericExposedFeature | CompositeFeature): feature is NumericFeature {\n  return feature.type === \"numeric\";\n}\nexport function isTextualFeature(feature: GenericExposedFeature | CompositeFeature): feature is TextualFeature {\n  return feature.type === \"text\";\n}\n\nexport function isEnumFeature(feature: GenericExposedFeature | CompositeFeature): feature is EnumFeature {\n  return feature.type === \"enum\";\n}\n\nexport function isLightFeature(feature: GenericExposedFeature | CompositeFeature): feature is LightFeature {\n  return feature.type === \"light\";\n}\nexport function isSwitchFeature(feature: GenericExposedFeature | CompositeFeature): feature is SwitchFeature {\n  return feature.type === \"switch\";\n}\n\nexport function isCoverFeature(feature: GenericExposedFeature | CompositeFeature): feature is CoverFeature {\n  return feature.type === \"cover\";\n}\n\nexport function isLockFeature(feature: GenericExposedFeature | CompositeFeature): feature is LockFeature {\n  return feature.type === \"lock\";\n}\n\nexport function isCompositeFeature(feature: GenericExposedFeature | CompositeFeature): feature is CompositeFeature {\n  return feature.type === \"composite\";\n}\n\nexport function isColorFeature(feature: GenericExposedFeature | CompositeFeature): feature is ColorFeature {\n  return isCompositeFeature(feature) && (feature.name == \"color_xy\" || feature.name == \"color_hs\");\n}","import React, { FunctionComponent } from \"react\";\nimport Button from \"../button\";\nimport cx from \"classnames\";\ntype Primitive = number | string;\n\nexport type ValueWithLabelOrPrimitive = {\n  value: number;\n  title: string;\n} | Primitive;\n\ntype EnumProps = {\n  value?: ValueWithLabelOrPrimitive;\n  onChange(value: unknown): void;\n  values: ValueWithLabelOrPrimitive[];\n}\n\n\nfunction isPrimitive(step: ValueWithLabelOrPrimitive): step is Primitive {\n  return [\"number\", \"string\"].includes(typeof step);\n}\n\nconst EnumEditor: FunctionComponent<EnumProps> = (props) => {\n  const { onChange, values, value } = props;\n  return <div className=\"btn-group mr-2\">\n    {\n      values.map(v => <Button<ValueWithLabelOrPrimitive>\n        className={cx(\"btn btn-outline-secondary\", { active: isPrimitive(v) ? v === value : v.value == (isPrimitive(value) ? value : value?.value) })}\n        onClick={item => onChange(item)}\n        key={isPrimitive(v) ? v : v.title}\n        item={isPrimitive(v) ? v : v.value}\n      >{isPrimitive(v) ? v : v.title}</Button>)\n    }\n  </div>;\n}\nexport default EnumEditor;","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport { randomString } from \"../../utils\";\nimport cx from \"classnames\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../enum-editor/enum-editor\";\n\n\n\ntype RangeProps = {\n  value: number;\n  unit?: string;\n  onChange(value: object | number): void;\n  steps?: ValueWithLabelOrPrimitive[];\n}\n\nconst RangeEditor: FunctionComponent<RangeProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n  const { onChange, value, min, max, unit, steps, ...rest } = props;\n  const [id, setId] = useState<string>(randomString(5));\n  const [currentValue, setCurrentValue] = useState<number>(value)\n\n  useEffect(() => {\n    setCurrentValue(value)\n  }, [value]);\n\n  const showRange = min !== undefined && max !== undefined;\n  return <div className=\"input-group\">\n    {steps ? <EnumEditor values={steps} onChange={onChange} /> : null}\n    {showRange ? <input\n      id={id}\n      min={min}\n      max={max}\n      type=\"range\"\n      className=\"form-range form-control border-0\"\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.valueAsNumber)}\n      onMouseUp={(() => onChange(currentValue))}\n      {...rest}\n    /> : null}\n    <input\n      type=\"number\"\n      className={cx(\"form-control\", {'ml-1': showRange})}\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.valueAsNumber)}\n      onBlur={() => onChange(currentValue)}\n      {...rest}\n      style={showRange ? { 'maxWidth': '100px' } : null}\n    />\n    {unit ? <span className=\"input-group-text\" style={{ 'minWidth': '66px' }}>{unit}</span> : null}\n  </div>\n}\n\nexport default RangeEditor;\n","\nimport React, { Fragment, FunctionComponent } from \"react\";\nimport { DeviceState, Device, Endpoint, GenericExposedFeature, CompositeFeature } from \"../../types\";\n\nexport interface BaseFeatureProps<T> {\n  feature: T;\n  deviceState: DeviceState;\n  device: Device;\n  onChange(endpoint: Endpoint, value: object): void;\n  onRead(endpoint: Endpoint, value: object): void;\n}\n\n\nexport const BaseViewer: FunctionComponent<BaseFeatureProps<GenericExposedFeature>> = (props) => {\n  const { feature: { property, unit }, deviceState } = props;\n  return <Fragment><strong>{JSON.stringify(deviceState[property]) ?? \"N/A\"}</strong>{unit ? <small className=\"text-muted ml-1\">{unit}</small> : null}</Fragment>\n}\n\nexport const NoAccessError: FunctionComponent<BaseFeatureProps<GenericExposedFeature | CompositeFeature>> = ({ feature: { access } }) => <div className=\"alert alert-warning p-0\" role=\"alert\">Unknown acces {JSON.stringify(access, null, 4)}</div>;","import React, { FunctionComponent } from \"react\";\nimport { FeatureAccessMode, NumericFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport RangeEditor from \"../../range-editor/range-editor\";\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ninterface NumericProps extends BaseFeatureProps<NumericFeature> {\n  steps?: ValueWithLabelOrPrimitive[];\n}\n\nconst Numeric: FunctionComponent<NumericProps> = (props) => {\n  const { feature: { access, endpoint, name, property, unit, value_max: valueMax, value_min: valueMin }, deviceState, steps, onChange } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <RangeEditor\n      onChange={(value) => onChange(endpoint, { [name]: value })}\n      value={deviceState[property] as number ?? 0}\n      min={valueMin}\n      max={valueMax}\n      steps={steps}\n      unit={unit}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\n\nexport default Numeric;","import React, { ChangeEvent, Fragment, FunctionComponent, useState } from \"react\";\nimport { randomString } from \"../../utils\";\nimport Button from \"../button\";\n\ntype ToggleProps = {\n  onChange(value: unknown): void;\n\n  value: unknown;\n  valueOn: unknown;\n  valueOff: unknown;\n  label?: string;\n}\n\n\nconst Toggle: FunctionComponent<ToggleProps> = (props) => {\n  const { onChange, value, label, valueOn, valueOff } = props;\n  const [id, setId] = useState<string>(randomString(5));\n  const onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.checked ? valueOn : valueOff);\n  const valueExists = value !== undefined && value !== null;\n  return (\n    <Fragment>\n      <Button<unknown> className=\"btn btn-link pl-0\" item={valueOff} onClick={(item) => onChange(item)}>{valueOff}</Button>\n      {valueExists ? (\n        <div className=\"form-check form-switch d-inline-block\">\n        <input className=\"form-check-input\" type=\"checkbox\" id={id} checked={value === valueOn} onChange={onCheckboxChange} />\n        {label ? <label className=\"form-check-label\" htmlFor={id}>{label}</label> : null}\n      </div>\n      ): <i className=\"fa fa-question\" title=\"Current value unknown\"></i> }\n      <Button<unknown> className=\"btn btn-link\" item={valueOn} onClick={(item) => onChange(item)}>{valueOn}</Button>\n    </Fragment>\n  )\n}\n\nexport default Toggle;\n","import React, { FunctionComponent } from \"react\";\n\nimport { BinaryFeature, FeatureAccessMode } from \"../../../types\";\nimport Toggle from \"../../toggle\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype BinaryProps = BaseFeatureProps<BinaryFeature>;\n\nconst Binary: FunctionComponent<BinaryProps> = (props) => {\n  const { feature: { access, endpoint, name, property, value_off: valueOff, value_on: valueOn }, deviceState, onChange } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <Toggle\n      onChange={(value) => onChange(endpoint, { [name]: value })}\n      value={deviceState[property]}\n      valueOn={valueOn}\n      valueOff={valueOff}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Binary;","\n\nimport React, { FunctionComponent } from \"react\";\n\nimport { EnumFeature, FeatureAccessMode } from \"../../../types\";\nimport EnumEditor, { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype EnumProps = BaseFeatureProps<EnumFeature>\n\nconst Enum: FunctionComponent<EnumProps> = (props) => {\n  const { onChange, feature: { access, name, values, endpoint, property }, deviceState } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <EnumEditor\n      onChange={(value) => onChange(endpoint, { [name]: value })}\n      values={values as unknown as ValueWithLabelOrPrimitive[]}\n      value={deviceState[property] as ValueWithLabelOrPrimitive}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Enum;","import React, { FunctionComponent } from \"react\";\nimport { LightFeature } from \"../../../types\";\nimport { scale } from \"../../../utils\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LightProps = BaseFeatureProps<LightFeature>\nconst stepsConfiguration = {\n  brightness: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: scale(item, [0, 100], [0, 255]), title: item + '%' })),\n  'color_temp': [1000, 2000, 3000, 4000, 5000, 6500].map<ValueWithLabelOrPrimitive>(kelvin => ({ value: 1000000.0 / kelvin, title: kelvin + 'K' }))\n};\n\nconst Light: FunctionComponent<LightProps> = (props) => <Composite type=\"light\" {...props} stepsConfiguration={stepsConfiguration} />;\nexport default Light;","import React, { FunctionComponent } from \"react\";\nimport { SwitchFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype SwitchProps = BaseFeatureProps<SwitchFeature>\n\nconst Switch: FunctionComponent<SwitchProps> = (props) => <Composite type=\"switch\" {...props} />;\n\nexport default Switch;","import React, { FunctionComponent } from \"react\";\nimport { CoverFeature } from \"../../../types\";\nimport { ValueWithLabelOrPrimitive } from \"../../enum-editor/enum-editor\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\nconst stepsConfiguration = {\n  position: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, title: item + '' })),\n  tilt: [0, 25, 50, 75, 100].map<ValueWithLabelOrPrimitive>(item => ({ value: item, title: item + '' }))\n};\n\ntype CoverProps = BaseFeatureProps<CoverFeature>\n\nconst Cover: FunctionComponent<CoverProps> = (props) => <Composite type=\"cover\" {...props} stepsConfiguration={stepsConfiguration} />;\n\nexport default Cover;\n\n\n","import React, { FunctionComponent } from \"react\";\nimport { LockFeature } from \"../../../types\";\nimport { BaseFeatureProps } from \"../base\";\nimport Composite from \"../composite/composite\";\n\ntype LockProps = BaseFeatureProps<LockFeature>\n\nconst Lock: FunctionComponent<LockProps> = (props) => <Composite type=\"lock\" {...props} />\nexport default Lock;","import React, { FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\nimport * as convertColors from \"color-convert\";\nimport { AnyColor, XYColor, HueSaturationColor } from \"../../types\";\nimport Button from \"../button\";\n\n\ntype Payload = AnyColor;\n\nexport type ColorFormat = \"color_xy\" | \"color_hs\";\ntype ColorProps = {\n  value: Payload;\n  steps?: string[];\n  format: ColorFormat;\n  onChange(value: object): void;\n}\n\nexport const toRGB = (source: AnyColor, sourceFormat: ColorFormat): string => {\n  switch (sourceFormat) {\n    case \"color_xy\":\n      {\n        const { x, y } = source as XYColor;\n        const z = 1.0 - x - y;\n        const Y = 1;\n        const X = (Y / y) * x;\n        const Z = (Y / y) * z;\n        return '#' + convertColors.xyz.hex([X * 100.0, Y * 100.0, Z * 100.0]);\n      }\n\n    case \"color_hs\":\n      {\n        const { hue, saturation } = source as HueSaturationColor;\n        return '#' + convertColors.hsv.hex([hue, saturation, 100]);\n      }\n    default:\n      return '#FFFFFF';\n  }\n}\n\nconst rgbToTargetFormat = (source: string, targetFormat: ColorFormat): object => {\n  switch (targetFormat) {\n    case \"color_hs\":\n      const [hue, saturation, v] = convertColors.hex.hsv(source);\n      return { hue, saturation };\n\n\n    case \"color_xy\":\n      const [X, Y, Z] = convertColors.hex.xyz(source);\n      const x = X / (X + Y + Z);\n      const y = Y / (X + Y + Z);\n      return { x, y };\n\n    default:\n      return { hex: source };\n  }\n\n}\nconst pridePallete = ['#FF0018', '#FFA52C', '#FFFF41', '#008018', '#0000F9', '#86007D'];\nconst ColorEditor: FunctionComponent<ColorProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange' | 'value'>> = (props) => {\n\n  const { onChange, value = {} as AnyColor, format, steps = pridePallete, ...rest } = props;\n  const [currentColor, setCurrentColor] = useState<string>(toRGB(value, format));\n  useEffect(() => {\n    setCurrentColor(toRGB(value, format))\n  }, [value, format]);\n\n  return <div className=\"input-group\">\n    <div className=\"btn-group mr-2\">\n      {\n        steps.map(step => <Button<string>\n          className=\"btn\"\n          style={{ backgroundColor: step }}\n          key={step}\n          item={step}\n          title={step}\n          onClick={(item) => onChange(rgbToTargetFormat(item, format))}>&nbsp;&nbsp;&nbsp;</Button>)\n      }\n    </div>\n    <input\n      type=\"color\"\n      className=\"form-control form-control-color border-0 p-0\"\n      value={currentColor}\n      onChange={e => {\n        onChange(rgbToTargetFormat(e.target.value, format))\n      }}\n      {...rest}\n    />\n  </div>\n\n}\n\nexport default ColorEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { AnyColor, ColorFeature } from \"../../../../types\";\nimport ColorEditor from \"../../../color-editor/color-editor\";\n\nimport { BaseFeatureProps } from \"../../base\";\n\n\ntype ColorProps = BaseFeatureProps<ColorFeature>;\n\n\nconst Light: FunctionComponent<ColorProps> = (props) => {\n\n    const { deviceState, feature, onChange } = props;\n    const value = {};\n    for (const innerFeature of feature.features) {\n      value[innerFeature.name] = deviceState[feature.property]?.[innerFeature.property] ?? 0;\n    }\n    return <ColorEditor\n      onChange={(color) => onChange(feature.endpoint, { color })}\n      value={value as AnyColor}\n      format={feature.name} />\n}\nexport default Light;","import React, { Fragment, FunctionComponent, InputHTMLAttributes, useEffect, useState } from \"react\";\n\ntype TextualProps = {\n  value: string;\n  unit?: string;\n  onChange(value: string): void;\n}\n\nconst TextualEditor: FunctionComponent<TextualProps & Omit<InputHTMLAttributes<HTMLInputElement>, 'onChange'>> = (props) => {\n  const { onChange, value, unit, ...rest } = props;\n  const [currentValue, setCurrentValue] = useState<string>(value)\n\n  useEffect(() => {\n    setCurrentValue(value)\n  }, [value]);\n\n  return <Fragment>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      value={currentValue}\n      onChange={e => setCurrentValue(e.target.value)}\n      onBlur={() => onChange(currentValue)}\n      {...rest}\n    />\n    {unit ? <span className=\"input-group-text\" style={{'minWidth': '66px'}}>{unit}</span> : null}\n  </Fragment>\n}\n\nexport default TextualEditor;\n","import React, { FunctionComponent } from \"react\";\nimport { FeatureAccessMode, TextualFeature } from \"../../../types\";\nimport TextualEditor from \"../../textual-editor/textual-editor\";\n\nimport { BaseFeatureProps, BaseViewer, NoAccessError } from \"../base\";\n\ntype TextualProps = BaseFeatureProps<TextualFeature>;\n\nconst Textual: FunctionComponent<TextualProps> = (props) => {\n  const { feature: { access, endpoint, name, property }, deviceState, onChange } = props;\n  if (access & FeatureAccessMode.ACCESS_WRITE) {\n    return <TextualEditor\n      onChange={(value) => onChange(endpoint, { [name]: value })}\n      value={deviceState[property] as string ?? \"\"}\n    />\n  } else if (access & FeatureAccessMode.ACCESS_STATE) {\n    return <BaseViewer {...props} />\n  } else {\n    return <NoAccessError {...props} />\n  }\n}\nexport default Textual;","import React, { Component, FunctionComponent, PropsWithChildren } from \"react\";\nimport { CompositeFeature, Endpoint, FeatureAccessMode, GenericExposedFeature } from \"../../../types\";\nimport { isBinaryFeature, isColorFeature, isCoverFeature, isEnumFeature, isLightFeature, isLockFeature, isNumericFeature, isSwitchFeature, isTextualFeature } from \"../../device-page/type-guards\";\n\nimport Numeric from \"../numeric/numeric\";\n\nimport { BaseFeatureProps } from \"../base\";\nimport Binary from \"../binary/binary\";\nimport Enum from \"../enum/enum\";\nimport Light from \"../light/light\";\nimport Switch from \"../switch/switch\";\nimport Cover from \"../cover/cover\";\nimport Lock from \"../lock/lock\";\nimport Color from \"../composite/color/color\";\nimport Textual from \"../textual/textual\";\nimport Button from \"../../button\";\nimport groupBy from \"lodash/groupBy\";\n\n\ntype CompositeType = \"composite\" | \"light\" | \"switch\" | \"cover\" | \"lock\" | \"fan\";\n\ninterface CompositeProps extends BaseFeatureProps<CompositeFeature> {\n  type: CompositeType;\n  stepsConfiguration?: object;\n}\n\ntype FetatureWrapperProps = {\n  feature: CompositeFeature | GenericExposedFeature;\n  onRead(endpoint: Endpoint, value: object): void;\n};\nconst FeatureWrapper: FunctionComponent<PropsWithChildren<FetatureWrapperProps>> = (props) => {\n  const { children, feature, onRead } = props;\n  const isColor = feature.name.startsWith(\"color_\"); //hardcode for color\n  const isReadable = (feature.access & FeatureAccessMode.ACCESS_READ) || isColor;\n  return <div className=\"row pb-2\">\n    <label className=\"col-3 col-form-label\">\n      <strong title={JSON.stringify(feature)}>{feature.name}</strong>\n    </label>\n    <div className=\"col-6 col-sm-8 d-flex align-items-center\">\n      {children}\n    </div>\n    <div className=\"col-1\">\n      {isReadable ? (\n        <Button<CompositeFeature | GenericExposedFeature> item={feature} onClick={(item) => {\n          onRead(feature.endpoint, { [item.property]: \"\" })\n        }} className=\"btn btn-primaty\"><i className=\"fa fa-sync\"></i></Button>\n      ) : null}\n    </div>\n  </div>\n}\n\nexport default class Composite extends Component<CompositeProps, {}> {\n  renderFeature = (feature: CompositeFeature | GenericExposedFeature) => {\n    const { deviceState, device, onChange, onRead, stepsConfiguration } = this.props;\n\n    const genericParams = { key: JSON.stringify(feature), device, deviceState, onChange, onRead };\n    const wrapperParams = { key: JSON.stringify(feature), feature, onRead };\n\n    if (isBinaryFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Binary feature={feature} {...genericParams} />\n      </FeatureWrapper>\n    } else if (isNumericFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Numeric feature={feature} {...genericParams}\n          steps={stepsConfiguration?.[feature.name]} />\n      </FeatureWrapper>\n    } else if (isTextualFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Textual feature={feature} {...genericParams} />\n      </FeatureWrapper>\n    } else if (isEnumFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Enum feature={feature} {...genericParams} />\n      </FeatureWrapper>\n    } else if (isLightFeature(feature)) {\n      return <Light feature={feature} {...genericParams} />\n    } else if (isSwitchFeature(feature)) {\n      return <Switch feature={feature} {...genericParams} />\n    } else if (isCoverFeature(feature)) {\n      return <Cover feature={feature} {...genericParams} />\n    } else if (isLockFeature(feature)) {\n      return <Lock feature={feature} {...genericParams} />\n    } else if (isColorFeature(feature)) {\n      return <FeatureWrapper {...wrapperParams}>\n        <Color feature={feature} {...genericParams} />\n      </FeatureWrapper>\n    }\n    return (<FeatureWrapper {...wrapperParams}>\n      <label className=\"col-3 col-form-label\">Unknown feature (<strong>{feature.type}</strong>)</label>\n      <div className=\"col-9\">{JSON.stringify(feature)}{JSON.stringify(deviceState)}</div>\n    </FeatureWrapper>);\n  }\n  render() {\n    const MAGIC_NO_ENDPOINT = 'MAGIC_NO_ENDPOINT';\n    const { feature: { features } } = this.props;\n    const groupedFeatures = groupBy(features, f => f.endpoint ?? MAGIC_NO_ENDPOINT);\n    const result = [];\n    if (groupedFeatures[MAGIC_NO_ENDPOINT]) {\n      result.push(...groupedFeatures[MAGIC_NO_ENDPOINT].map(this.renderFeature));\n      delete groupedFeatures[MAGIC_NO_ENDPOINT];\n    }\n    for (const epName in groupedFeatures) {\n      const featuresGroup = groupedFeatures[epName];\n      result.push(<div key={epName}>Endpoint: {epName}<div className=\"pl-2\">{...featuresGroup.map(this.renderFeature)}</div></div>);\n    }\n    return result;\n\n  }\n}\n","import React, { Component } from \"react\";\nimport { CompositeFeature, Device, DeviceState } from \"../../types\";\nimport actions, { StateApi } from \"../../actions\";\n\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\n\nimport Composite from \"../features/composite/composite\";\n\ninterface PropsFromStore {\n    deviceStates: Map<string, DeviceState>;\n}\ninterface ExposesProps {\n    device: Device;\n}\n\nclass Exposes extends Component<ExposesProps & PropsFromStore & StateApi, {}> {\n    render() {\n        const { device, deviceStates, setDeviceState, getDeviceState } = this.props;\n        const deviceState = deviceStates.get(device.friendly_name) ?? {} as DeviceState;\n        if (device.definition?.exposes) {\n            return <div className=\"card\">\n                <div className=\"card-body\">\n                    <Composite feature={{ features: device.definition.exposes } as CompositeFeature} type=\"composite\" device={device} deviceState={deviceState}\n                        onChange={(endpoint, value) => {\n                            setDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                        }}\n                        onRead={(endpoint, value) => {\n                            getDeviceState(`${device.friendly_name}${endpoint ? `/${endpoint}` : ''}`, value)\n                        }}\n                    />\n                </div>\n            </div>\n        } else {\n            return \"Device doesn't expose anything\"\n        }\n    }\n}\n\nconst mappedProps = [\"deviceStates\"];\n\nconst ConnectedDeviceExposes = connect<ExposesProps, {}, GlobalState, StateApi>(mappedProps, actions)(Exposes);\nexport default ConnectedDeviceExposes;\n","// extracted by mini-css-extract-plugin\nexport default {\"tree\":\"_1A0umx4fPj4iWC5K7RUnD-\"};","import React, { Component, FunctionComponent } from \"react\";\nimport { Device } from \"../../types\";\nimport treeStyle from \"./tree.css\";\n\ninterface ClustersProps {\n    device: Device;\n}\ntype ClustersComp = {\n    label: string;\n    clusters: string[];\n}\nconst ClustersComp: FunctionComponent<ClustersComp> = (props) => {\n    const { label, clusters } = props;\n    if (clusters.length) {\n        return (<li>\n            <span>{label}</span>\n            <ul>{clusters.map(cluster => <li key={cluster}><span>{cluster}</span></li>)}</ul>\n        </li>)\n    } else {\n        return null;\n    }\n\n}\nexport default class Clusters extends Component<ClustersProps, {}> {\n    render() {\n        const { device } = this.props;\n        return <div className=\"card\">\n            <div className=\"card-body\">\n                <dl className={`${treeStyle.tree} row`}>\n                    <ul>\n                        <li>\n                            <span>{device.ieee_address}</span>\n                            <ul>\n                                {Array.from(device.endpoints.entries()).map(([epName, epData]) => {\n                                    return (\n                                        <li key={epName}>\n                                            <span>Endpoint <strong>{epName}</strong></span>\n                                            <ul>\n                                                <ClustersComp label=\"Output clusters\" clusters={epData.clusters.output} />\n                                                <ClustersComp label=\"Input clusters\" clusters={epData.clusters.input} />\n                                            </ul>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        </li>\n                    </ul>\n                </dl>\n            </div>\n        </div>\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions\";\nimport { GlobalState } from \"../../store\";\nimport DeviceInfo from \"./info\";\nimport Bind from \"./bind\";\nimport States from \"./states\";\nimport ConnectedDeviceExposes from \"./exposes\";\nimport Clusters from \"./clusters\";\n\ntype UrlParams = {\n    dev: string;\n    tab?: TabName;\n};\ntype DevicePageProps = RouteComponentProps<UrlParams>;\n\n\ntype TabName = \"info\" | \"bind\" | \"state\" | \"exposes\" | \"clusters\";\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DevicePage extends Component<DevicePageProps & GlobalState, {}> {\n    renderContent() {\n        const { match, devices } = this.props;\n        const { tab, dev } = match.params;\n        const device = devices.get(dev);\n\n        switch (tab) {\n            case \"info\":\n                return <DeviceInfo device={device} />;\n            case \"bind\":\n                return <Bind device={device} />;\n            case \"state\":\n                return <States device={device} />;\n            case \"exposes\":\n                return <ConnectedDeviceExposes device={device} />;\n            case \"clusters\":\n                return <Clusters device={device} />\n            default:\n                return <Redirect to={`/device/${dev}/info`} />;\n        }\n\n    }\n    render() {\n\n        const { devices, match } = this.props;\n        const { dev } = match.params;\n        const device = devices.get(dev);\n        if (!device) {\n            return <div className=\"h-100 d-flex justify-content-center align-items-center\">Unknown device</div>\n        }\n\n        return (<div className=\"card h-100\">\n            <div className=\"card-header\">\n                <ul className=\"nav nav-tabs card-header-tabs\">\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to={`/device/${dev}/info`}>About</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to={`/device/${dev}/bind`}>Bind</NavLink>\n\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to={`/device/${dev}/state`}>State</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to={`/device/${dev}/exposes`}>Exposes</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active\" className=\"nav-link\" to={`/device/${dev}/clusters`}>Clusters</NavLink>\n                    </li>\n                </ul>\n            </div>\n\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{device.friendly_name}</h5>\n                {this.renderContent()}\n            </div>\n        </div>);\n\n    }\n}\nconst devicePageWithRouter = withRouter(DevicePage);\nconst mappedProps = [\"devices\"];\nconst ConnectedDevicePage = connect<{}, {}, GlobalState, {}>(mappedProps, actions)(devicePageWithRouter);\nexport default ConnectedDevicePage;","import React, { Component} from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions, { TouchlinkApi } from \"../../actions\";\nimport { GlobalState } from \"../../store\";\nimport Button from \"../button\";\nimport { TouchLinkDevice } from \"../../types\";\nimport { genDeviceDetailsLink } from \"../../utils\";\nimport cx from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\n\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class TouchlinkPage extends Component<TouchlinkApi & GlobalState, {}> {\n    onIdentifyClick = (device: TouchLinkDevice): void => {\n        const { touchlinkIdentify } = this.props;\n        touchlinkIdentify(device);\n    }\n\n    onResetClick = (device: TouchLinkDevice): void => {\n        const { touchlinkReset } = this.props;\n        touchlinkReset(device);\n    }\n\n    renderTouchlinkDevices() {\n        const { touchlinkDevices, devices, touchlinkIdentifyInProgress, touchlinkResetInProgress } = this.props;\n        const touchlinkInProgress = touchlinkIdentifyInProgress || touchlinkResetInProgress;\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table align-middle\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">ieee_address</th>\n                            <th scope=\"col\">friendly_name</th>\n                            <th scope=\"col\">channel</th>\n                            <th scope=\"col\">&nbsp;</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {touchlinkDevices.map((touchlinkDevice, idx) => (\n                            <tr key={touchlinkDevice.ieee_address}>\n                                <td>{idx + 1}</td>\n                                <td>{\n                                    devices.has(touchlinkDevice.ieee_address) ?\n                                        (<Link to={genDeviceDetailsLink(touchlinkDevice.ieee_address)}>{touchlinkDevice.ieee_address}</Link>) : touchlinkDevice.ieee_address}</td>\n                                <td>{devices.get(touchlinkDevice.ieee_address)?.friendly_name}</td>\n                                <td>{touchlinkDevice.channel}</td>\n                                <td>\n                                    <div className=\"btn-group float-right\" role=\"group\" aria-label=\"Basic example\">\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Identify\" className=\"btn btn-primary\" onClick={this.onIdentifyClick}><i\n                                            className={cx(\"fa\", { \"fa-exclamation-triangle\": !touchlinkIdentifyInProgress, \"fas fa-circle-notch fa-spin\": touchlinkIdentifyInProgress })} /></Button>\n                                        <Button<TouchLinkDevice> disabled={touchlinkInProgress} item={touchlinkDevice} title=\"Factory reset\" className=\"btn btn-danger\" onClick={this.onResetClick}><i\n                                            className={cx(\"fa\", { \"fa-broom\": !touchlinkResetInProgress, \"fas fa-circle-notch fa-spin\": touchlinkResetInProgress })} /></Button>\n                                    </div>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n    renderNoDevices() {\n        const { touchlinkScan } = this.props;\n        return (\n            <Button className=\"btn btn-primary mx-auto d-block\" onClick={touchlinkScan}>Scan</Button>\n        );\n    }\n    render() {\n        const { touchlinkDevices, touchlinkScanInProgress, touchlinkScan } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card mt-2\">\n                    <div className=\"card-header allign-middle\">\n                        Detected {touchlinkDevices.length} touchlink devices.\n                        <Button title=\"Rescan\" className=\"btn btn-primary btn-sm float-right\" onClick={touchlinkScan}><i className=\"fa fa-sync\" /></Button>\n                    </div>\n\n                    <div>\n                        <div className=\"card-body\">\n                            {touchlinkScanInProgress ? (\n                                <div className=\"d-flex justify-content-center\">\n                                    <div className=\"spinner-border\" role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                </div>\n                            ) : touchlinkDevices.length === 0 ? this.renderNoDevices() : this.renderTouchlinkDevices()}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mappedProps = [\"touchlinkDevices\", \"devices\", \"touchlinkScanInProgress\", \"touchlinkIdentifyInProgress\", \"touchlinkResetInProgress\"];\n\nexport default connect<{}, {}, GlobalState, TouchlinkApi>(mappedProps, actions)(TouchlinkPage);","import React, { useState, ChangeEvent, InputHTMLAttributes, useEffect } from \"react\";\n\nimport Button from \"../button\";\nimport RangeEditor from \"../range-editor/range-editor\";\n\ninterface UniversalEditorProps {\n    values?: unknown[];\n    onChange(arg1: unknown): void;\n}\n\nconst togglePairs = new Map<string | boolean, string | boolean>([\n    ['ON', 'OFF'],\n    ['OFF', 'ON'],\n    ['OPEN', 'CLOSE'],\n    ['CLOSE', 'OPEN'],\n    ['LOCK', 'UNLOCK'],\n    ['UNLOCK', 'LOCK'],\n    [true, false],\n    [false, true]\n]);\n\nconst BluringInput: React.FunctionComponent<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>> = (props) => {\n    const { onChange, value, ...rest } = props;\n    const [internalValue, setInternalValue] = useState(value);\n    useEffect(() => {\n        setInternalValue(value);\n    }, [value]);\n\n\n    return <input\n        value={internalValue}\n        onBlur={() => onChange({ target: { value: internalValue } } as ChangeEvent<HTMLInputElement>)}\n        onChange={e => setInternalValue(e.target.value)}\n        {...rest} />\n}\n\nconst UniversalEditor: React.FunctionComponent<InputHTMLAttributes<unknown> & UniversalEditorProps> = (props) => {\n    const { value, values, onChange, disabled, name, ...rest } = props;\n\n    const isToggleParameter = togglePairs.has(value as string | boolean);\n\n\n    if (values) {\n        return (<select className=\"form-select\"\n            disabled={disabled}\n            value={value as string}\n            onChange={e => onChange(e.target.value)}>\n            {values.map(val => <option key={val as string} value={val as string}>{val as string}</option>)}\n        </select>)\n    }\n    switch (typeof value) {\n        case \"boolean\":\n            return (\n                <div className=\"form-check form-switch\">\n                    <input type=\"checkbox\" className=\"form-check-input\"\n                        disabled={disabled}\n                        checked={value as boolean}\n                        onChange={e => onChange(e.target.checked)}\n                        {...rest} />\n                </div>\n            );\n        case \"number\":\n            return (<div className=\"row\">\n                <div className=\"col-9\">\n                    <RangeEditor disabled={disabled} value={value} onChange={v => onChange(v)} {...rest} />\n                </div>\n                <div className=\"col-3\">\n                    <input type=\"number\" step=\"any\" className=\"form-control col-2\"\n                        disabled={disabled}\n                        value={value as number}\n                        onChange={e => onChange(e.target.valueAsNumber)}\n                        {...rest} />\n                </div>\n\n\n            </div >);\n        default:\n            if (isToggleParameter) {\n                return (\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <Button<string | boolean> title=\"Toggle\" value=\"Toggle\"\n                                className=\"btn btn-primary\"\n                                disabled={disabled}\n                                item={togglePairs.get(value as string | boolean)}\n                                onClick={payload => onChange(payload)}>\n                                <i className=\"fa fa-exchange-alt\" />\n                            </Button>\n                        </div>\n                        <div className=\"col-9\">\n                            <BluringInput type=\"text\" className=\"form-control\"\n                                disabled={disabled}\n                                value={value as string}\n                                onChange={e => onChange(e.target.value)}\n                                {...rest}\n                            />\n                        </div>\n                    </div>\n                );\n            }\n            return (<BluringInput type=\"text\" className=\"form-control\"\n                disabled={disabled}\n                value={value as string}\n                onChange={e => onChange(e.target.value)}\n                {...rest} />);\n\n\n    }\n};\nexport default UniversalEditor;","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions, { BridgeApi, LegacyApi, UtilsApi } from \"../../actions\";\nimport { GlobalState } from \"../../store\";\nimport get from \"lodash/get\";\nimport UniversalEditor from \"../universal-editor\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { NavLink, Redirect, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Button from \"../button\";\n\n\nconst settings = [\n    {\n        key: 'last_seen',\n        path: 'config.advanced.last_seen',\n        title: 'Last seen',\n        description: 'Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message',\n        values: ['disable', 'ISO_8601', 'ISO_8601_local', 'epoch']\n    },\n    {\n        key: 'elapsed',\n        path: 'config.advanced.elapsed',\n        title: 'Elapsed',\n        description: 'Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg'\n    },\n    {\n        key: 'log_level',\n        path: 'log_level',\n        title: 'Log level',\n        description: 'Logging level',\n        values: ['debug', 'info', 'warn', 'error']\n    },\n    {\n        key: 'homeassistant',\n        path: 'config.homeassistant',\n        title: 'Homeassistant support',\n        description: 'Home Assistant integration (MQTT discovery)'\n    }\n]\ntype SettingsTab = \"settings\" | \"bridge\" | \"about\";\n\ntype UrlParams = {\n    tab?: SettingsTab;\n};\ntype SettingsPageProps = RouteComponentProps<UrlParams>;\n\ndeclare const FRONTEND_VERSION: string; //injected by webpack.DefinePlugin\n\nexport class SettingsPage extends Component<SettingsPageProps & BridgeApi & GlobalState & LegacyApi & UtilsApi, {}> {\n    updateConfig = (name: string, value: unknown): void => {\n        const { updateConfigValue } = this.props;\n        updateConfigValue(name, value);\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <ul className=\"nav nav-tabs card-header-tabs\">\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" activeClassName=\"active\" to={`/settings/settings`}>Settings</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" activeClassName=\"active\" to={`/settings/bridge`}>Raw</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" activeClassName=\"active\" to={`/settings/about`}>About</NavLink>\n                        </li>\n                    </ul>\n\n                </div>\n\n                <div className=\"card-body\">\n                    {this.renderSwitcher()}\n                </div>\n            </div>\n        )\n    }\n    renderSwitcher() {\n        const { match } = this.props;\n        const { tab } = match.params;\n        switch (tab) {\n            case \"settings\":\n                return this.renderSettings();\n            case \"bridge\":\n                return this.renderBridgeInfo();\n            case \"about\":\n                return this.renderAbout();\n            default:\n                return <Redirect to={`/settings/settings`} />;\n        }\n    }\n    renderAbout() {\n        const { bridgeInfo } = this.props;\n        const v = FRONTEND_VERSION;\n        return <div className=\"container\">\n            <dl className=\"row\">\n                <dt className=\"col-sm-3\">zigbee2mqtt version</dt>\n                <dd className=\"col-sm-9\">{bridgeInfo.version} {bridgeInfo.commit ? `commit: ${bridgeInfo.commit}` : null}</dd>\n            </dl>\n\n            <dl className=\"row\">\n                <dt className=\"col-sm-3\">coordinator type</dt>\n                <dd className=\"col-sm-9\">{bridgeInfo.coordinator?.type ?? 'Unknown'}</dd>\n            </dl>\n            <dl className=\"row\">\n                <dt className=\"col-sm-3\">coordinator revision</dt>\n                <dd className=\"col-sm-9\">{bridgeInfo.coordinator?.meta?.revision ?? 'Unknown'}</dd>\n            </dl>\n\n            <dl className=\"row\">\n                <dt className=\"col-sm-3\">frontend version</dt>\n                <dd className=\"col-sm-9\">{v}</dd>\n            </dl>\n        </div>\n    }\n    renderBridgeInfo() {\n        const { bridgeInfo } = this.props;\n        return <pre>{JSON.stringify(bridgeInfo, null, 4)}</pre>\n    }\n    renderLegacyApiSettings() {\n        const { resetZnp } = this.props;\n        return [\n            <div key={\"znp-rest\"} className=\"row\">\n                <div className=\"col\">\n                    <Button<void> className=\"btn btn-danger\" promt onClick={() => resetZnp()}>Reset coordinator</Button>\n                </div>\n            </div>\n        ];\n    }\n    renderSettings() {\n        const { bridgeInfo, exportState } = this.props;\n        return <div className=\"container\">\n            <div className=\"mt-2\">\n                {\n                    !isEmpty(bridgeInfo) && settings.map(setting => (\n                        <div key={setting.key} className=\"row\">\n                            <div className=\"col\">\n                                <label htmlFor={setting.key}>{setting.title}</label>\n                                <UniversalEditor\n                                    disabled={get(bridgeInfo, setting.path) === undefined}\n                                    value={get(bridgeInfo, setting.path) as string | ReadonlyArray<string> | number}\n                                    values={setting.values}\n                                    onChange={(value) => this.updateConfig(setting.key, value)}\n                                />\n                                <div className=\"form-text\">{setting.description}</div>\n                            </div>\n                        </div>\n                    ))\n                }\n                {\n                    bridgeInfo.config?.advanced.legacy_api !== false ? this.renderLegacyApiSettings() : null\n                }\n            </div>\n            <Button<void> className=\"mt-2 btn btn-primary\" onClick={exportState}>Download state</Button>\n        </div>\n\n    }\n}\nconst SettingsPageWithRouter = withRouter(SettingsPage);\nconst mappedProps = [\"bridgeInfo\"];\nconst ConnectedSettingsPage = connect<{}, {}, GlobalState, BridgeApi>(mappedProps, actions)(SettingsPageWithRouter);\nexport default ConnectedSettingsPage;","import { useState, useEffect, useRef } from 'react';\n\nexport default function useComponentVisible(initialIsVisible: boolean) {\n    const [isComponentVisible, setIsComponentVisible] = useState(\n        initialIsVisible\n    );\n    const ref = useRef(null);\n\n    const handleHideDropdown = (event: KeyboardEvent) => {\n        if (event.key === \"Escape\") {\n            setIsComponentVisible(false);\n        }\n    };\n\n    const handleClickOutside = (event: MouseEvent) => {\n        if (ref.current && !ref.current.contains(event.target)) {\n            setIsComponentVisible(false);\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleHideDropdown, true);\n        document.addEventListener(\"click\", handleClickOutside, true);\n        return () => {\n            document.removeEventListener(\"keydown\", handleHideDropdown, true);\n            document.removeEventListener(\"click\", handleClickOutside, true);\n        };\n    });\n\n    return { ref, isComponentVisible, setIsComponentVisible };\n}","// extracted by mini-css-extract-plugin\nexport default {\"scrollable-menu\":\"_36Sntvyj-B3gg7Xj6xLUaY\"};","import React, { FunctionComponent, useState } from 'react';\n\nimport { GlobalState } from '../../store';\nimport actions, { BridgeApi } from '../../actions';\nimport { connect } from 'unistore/react';\nimport Button from '../button';\nimport cx from \"classnames\";\nimport { Link, NavLink } from 'react-router-dom';\nimport useComponentVisible from '../../hooks/useComponentVisible';\nimport { Device } from '../../types';\nimport style from \"./style.css\";\n\nconst urls = [\n    {\n        href: '/',\n        title: 'Home',\n        exact: true\n    },\n    {\n        href: '/map',\n        title: 'Map'\n    },\n    {\n        href: '/settings',\n        title: 'Settings'\n    },\n    {\n        href: '/groups',\n        title: 'Groups'\n    },\n    {\n        href: '/touchlink',\n        title: 'Touchlink'\n    },\n    {\n        href: '/logs',\n        title: 'Logs'\n    }\n];\ntype StartStopJoinButtonProps = {\n    devices: Map<string, Device>;\n}\nconst StartStopJoinButton: FunctionComponent<StartStopJoinButtonProps & Pick<BridgeApi, 'setPermitJoin'> & Pick<GlobalState, 'bridgeInfo'>> = ({ devices, setPermitJoin, bridgeInfo }) => {\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n    const [selectedRouter, setSelectedRouter] = useState<Device>(null);\n    // return<Button<boolean> className=\"btn btn-primary\" item={!bridgeInfo.permit_join} onClick={setPermitJoin}>{bridgeInfo.permit_join ? \"Disable join\" : \"Permit join\"}</Button>\n    const routers = [];\n    const selectAndHide = (device: Device) => { setSelectedRouter(device); setIsComponentVisible(false) }\n    devices.forEach((device) => {\n        if (device.type == \"Router\") {\n            routers.push(<li key={device.friendly_name}><a onClick={() => selectAndHide(device)} className=\"dropdown-item\" href=\"#\">{device.friendly_name}</a></li>)\n        }\n    });\n    const onBtnClick = () => {\n        setPermitJoin(!bridgeInfo.permit_join, selectedRouter);\n    }\n    return (\n        <div className=\"input-group w-auto\">\n            {routers.length ? (<><Button<boolean> type=\"button\" onClick={setIsComponentVisible} item={!isComponentVisible} className=\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                <span className=\"visually-hidden\">Toggle Dropdown</span>\n            </Button>\n                <ul ref={ref} className={cx('dropdown-menu', style['scrollable-menu'], { show: isComponentVisible })}>\n                    <li key='all'><a className=\"dropdown-item\" onClick={() => selectAndHide(null)} href=\"#\">All</a></li>\n                    {routers}\n                </ul></>) : null}\n                <button onClick={onBtnClick} type=\"button\" className=\"btn btn-outline-secondary\">{bridgeInfo.permit_join ? \"Disable join\" : \"Permit join\"} ({selectedRouter?.friendly_name ?? \"All\"})</button>\n\n        </div>\n    );\n}\n\ntype PropsFromStore = {\n    devices: Map<string, Device>;\n    bridgeInfo: object;\n}\nconst NavBar: FunctionComponent<PropsFromStore & BridgeApi & Pick<GlobalState, 'bridgeInfo'>> = ({ devices, setPermitJoin, bridgeInfo }) => {\n    const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n    return (<nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n        <div className=\"container-fluid\">\n            <Link className=\"navbar-brand\" to=\"/\">Zigbee2MQTT</Link>\n            <Button<boolean> onClick={setIsComponentVisible} item={!isComponentVisible} className={cx(\"navbar-toggler\")} type=\"button\">\n                <span className=\"navbar-toggler-icon\" />\n            </Button>\n            <div ref={ref} className={cx(\"navbar-collapse collapse\", { show: isComponentVisible })}>\n                <ul className=\"navbar-nav mr-auto mb-2 mb-md-0\">\n                    {\n                        urls.map(url =>\n                            <li key={url.href} className=\"nav-item\">\n                                <NavLink exact={url.exact} className=\"nav-link\" to={url.href} activeClassName=\"active\">\n                                    {url.title}\n                                </NavLink>\n                            </li>)\n                    }\n                </ul>\n                <StartStopJoinButton\n                    devices={devices}\n                    setPermitJoin={setPermitJoin}\n                    bridgeInfo={bridgeInfo}\n                />\n            </div>\n        </div>\n    </nav>)\n}\nconst mappedProps = [\"bridgeInfo\", \"devices\"];\nconst ConnectedNavBar = connect<{}, {}, PropsFromStore, BridgeApi>(mappedProps, actions)(NavBar);\nexport default ConnectedNavBar;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"device-pic\":\"_2p1XqBiO9XLlCB-lT60VCH\",\"device-image\":\"_3Z1i8qUrV2sErNF0__pVZt\"};","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions, { GroupsApi } from \"../../actions\";\nimport { GlobalState, Group, GroupAddress } from \"../../store\";\nimport Button from \"../button\";\nimport { Device, Endpoint } from \"../../types\";\nimport { genDeviceDetailsLink } from \"../../utils\";\nimport style from './style.css';\nimport cx from 'classnames';\nimport EndpointPicker from \"../endpoint-picker\";\nimport DevicePicker from \"../device-picker\";\nimport { Link } from \"react-router-dom\";\nimport { getEndpoints } from \"../device-page/bind-row\";\nimport DeviceImage from \"../device-image\";\n\n\ninterface GroupsPageState {\n    newGroupName: string;\n}\n\n\ninterface AddDeviceToGroupProps {\n    devices: Map<string, Device>;\n    group: Group;\n    addDeviceToGroup(deviceName: string, groupName: string): void;\n}\n\ninterface AddDeviceToGroupState {\n    device: string;\n    endpoint: Endpoint;\n}\n\ninterface DeviceGroupRowProps {\n    rowNumber: number;\n    groupAddress: GroupAddress;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroupRow extends Component<DeviceGroupRowProps, {}> {\n    getDeviceObj(): Device | undefined {\n        const { groupAddress, devices } = this.props;\n        return devices.get(groupAddress.ieee_address);\n    }\n    render() {\n        const { rowNumber, groupAddress, removeDeviceFromGroup } = this.props;\n        const device = this.getDeviceObj();\n\n        return <tr>\n            <th scope=\"row\">{rowNumber + 1}</th>\n            <td className={style[\"device-pic\"]}>\n                <DeviceImage className={cx(style[\"device-image\"])} device={device} />\n            </td>\n            <td><Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link></td>\n            <td>{groupAddress.ieee_address}</td>\n            <td>{groupAddress.endpoint}</td>\n            <td>{device && <Button<string> promt item={device.friendly_name} onClick={removeDeviceFromGroup} className=\"btn btn-danger btn-sm float-right\"><i className=\"fa fa-trash\" /></Button>}</td>\n        </tr>;\n    }\n}\ninterface DeviceGroupPropts {\n    group: Group;\n    devices: Map<string, Device>;\n    removeDeviceFromGroup(groupFriendlyName: string, deviceFriendlyName: string): void;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass DeviceGroup extends Component<DeviceGroupPropts, {}> {\n    onRemove = (deviceFriendlyName: string): void => {\n        const { group, removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(group.friendly_name, deviceFriendlyName);\n    }\n    render() {\n        const { group, devices } = this.props;\n        return <table className=\"table table-sm\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Pic</th>\n                    <th scope=\"col\">friendlyName</th>\n                    <th scope=\"col\">ieee_addr</th>\n                    <th scope=\"col\">Endpoint</th>\n                    <th scope=\"col\" className=\"text-right\">Action</th>\n                </tr>\n            </thead>\n            <tbody>\n                {group.members.map((groupMemebershipInfo, idx) => <DeviceGroupRow key={groupMemebershipInfo.ieee_address} removeDeviceFromGroup={this.onRemove} rowNumber={idx} devices={devices} groupAddress={groupMemebershipInfo} />)}\n            </tbody>\n        </table>;\n    }\n}\n\nclass AddDeviceToGroup extends Component<AddDeviceToGroupProps, AddDeviceToGroupState> {\n    state = {\n        device: undefined,\n        endpoint: undefined\n    };\n\n\n    onSubmit = (): void => {\n        const { addDeviceToGroup, group } = this.props;\n        const { device, endpoint } = this.state;\n        addDeviceToGroup(endpoint ? `${device}/${endpoint}` : device, group.friendly_name);\n\n    }\n    onDeviceSelect = (device: Device): void => {\n        const endpoints = getEndpoints(device);\n        this.setState({ device: device.ieee_address, endpoint: endpoints[0] });\n    }\n\n    onEpChange = (endpoint: Endpoint): void => {\n        this.setState({ endpoint });\n    }\n    render() {\n        const { device, endpoint } = this.state;\n        const { devices } = this.props;\n        const deviceObj = devices.get(device);\n\n        const endpoints = getEndpoints(deviceObj);\n\n        return <form className=\"row\">\n\n            <div className=\"col\">\n                <div className=\"input-group mb-3\">\n                    <DevicePicker type=\"device\" value={device} devices={devices} onChange={this.onDeviceSelect} />\n                    <EndpointPicker values={endpoints} value={endpoint} onChange={this.onEpChange} />\n                </div>\n\n            </div>\n\n            <div className=\"col\">\n                <Button<void> type=\"button\" onClick={this.onSubmit} className=\"btn btn-primary\">Add to group</Button>\n            </div>\n\n\n        </form>\n    }\n}\n\nexport class GroupsPage extends Component<GroupsApi & GlobalState, GroupsPageState> {\n    state = {\n        newGroupName: ''\n    }\n\n\n\n    changeHandler = (event): void => {\n        const name: string = event.target.name;\n        const value: string = event.target.value;\n        this.setState({ [name]: value } as Pick<GroupsPageState, \"newGroupName\">);\n    }\n\n    onGroupCreateSubmit = (): void => {\n        const { newGroupName } = this.state;\n        const { createGroup } = this.props;\n        createGroup(newGroupName);\n    }\n\n    renderGroupCreationForm() {\n        const { newGroupName } = this.state;\n        return (\n            <form className=\"row mt-2\">\n                <div className=\"col\">\n                    <label htmlFor=\"newGroupName\" className=\"sr-only\">Group name</label>\n                    <input onChange={this.changeHandler} value={newGroupName} required type=\"text\" name=\"newGroupName\" className=\"form-control\" id=\"newGroupName\" placeholder=\"bedroom_lamps\" />\n                </div>\n                <div className=\"col\">\n                    <Button<void> onClick={this.onGroupCreateSubmit} className=\"btn btn-primary mb-2\">Create group</Button>\n                </div>\n\n            </form>\n        )\n    }\n    removeGroup = (friendlyName: string): void => {\n        const { removeGroup } = this.props;\n        removeGroup(friendlyName);\n    }\n    removeDeviceFromGroup = (groupFriendlyName: string, deviceFriendlyName: string): void => {\n        const { removeDeviceFromGroup } = this.props;\n        removeDeviceFromGroup(deviceFriendlyName, groupFriendlyName);\n    }\n    renderGroups() {\n        const { groups, devices, addDeviceToGroup } = this.props;\n        return (\n            <div id=\"accordion\">\n                {\n                    groups.map(group => (\n                        <div key={group.id} className=\"card mb-1\">\n                            <div className=\"card-header\" id={`heading${group.id}`}>\n                                <h5 className=\"mb-0\">\n                                    <button className=\"btn btn-link btn-sm\">\n                                        {group.friendly_name} (#{group.id})\n                                    </button>\n                                    <Button<string> promt title=\"Remove group\" item={group.friendly_name} onClick={this.removeGroup} className=\"btn btn-danger btn-sm float-right\"><i className=\"fa fa-trash\" /></Button>\n                                </h5>\n                            </div>\n\n                            <div>\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive\">\n                                        <DeviceGroup group={group} devices={devices} removeDeviceFromGroup={this.removeDeviceFromGroup} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"card-footer\">\n                                <AddDeviceToGroup addDeviceToGroup={addDeviceToGroup} devices={devices} group={group} />\n                            </div>\n                        </div>\n                    )).reverse()\n                }\n\n            </div>\n        )\n    }\n\n    render() {\n        return <div className=\"container\">\n            {this.renderGroupCreationForm()}\n            {this.renderGroups()}\n        </div>\n\n    }\n}\n\nconst mappedProps = [\"groups\", \"devices\"];\nconst ConnectedGroupsPage = connect<{}, {}, GlobalState, GroupsApi>(mappedProps, actions)(GroupsPage);\nexport default ConnectedGroupsPage;","// extracted by mini-css-extract-plugin\nexport default {\"action-column\":\"_1AmFhCTIk_ifBlEJGnLJuK\",\"device-pic\":\"_1KD_wxLENsmTnroATY4BrA\",\"device-image\":\"_1kMXLbhsSotmS-uYUbIFl0\",\"adaptive\":\"naW23ivAqNAn-AGHResRM\"};","import React, { MouseEvent, ThHTMLAttributes} from \"react\";\n\n\n\nimport { SortDirection } from \"../../types\";\nimport isEqual from \"lodash/isEqual\";\n\n\ninterface ActionTHProps<T> {\n    column: T | T[];\n    current: T | T[];\n    currentDirection: SortDirection;\n    onClick?(arg1: T | T[]): void;\n}\n\nexport default class ActionTH<T> extends React.Component<ActionTHProps<T> & Omit<ThHTMLAttributes<HTMLTableHeaderCellElement>, 'onClick'>, {}> {\n    onClick = (event: MouseEvent): void => {\n        event.preventDefault();\n        event.stopPropagation();\n        const { column, onClick } = this.props;\n        onClick && onClick(column);\n    };\n\n    renderArrow () {\n        const { currentDirection, current, column } = this.props;\n        if (isEqual(current, column)) {\n            if (currentDirection == \"asc\") {\n                return <i className={`fa fa-sort-amount-down-alt`} />;\n            }\n            return <i className={`fa fa-sort-amount-down`} />;\n        }\n        return <i className={`fa fa-sort-amount-down invisible`} />;\n    }\n\n    render () {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { children, onClick, current, column, currentDirection, ...rest } = this.props;\n        return (<th {...rest}>\n            <span className=\"btn btn-link\" onClick={this.onClick}>{children}</span>\n            {this.renderArrow()}\n        </th>);\n    }\n}\n","import style from \"./style.css\";\nimport React, { Component, Fragment } from \"react\";\nimport orderBy from \"lodash/orderBy\";\nimport DeviceControlGroup from \"../device-control\";\nimport cx from \"classnames\";\nimport { Device, SortDirection, DeviceState } from \"../../types\";\nimport { genDeviceDetailsLink, lastSeen, toHex } from \"../../utils\";\n\nimport { Notyf } from \"notyf\";\nimport PowerSource from \"../power-source\";\nimport { connect } from \"unistore/react\";\nimport { GlobalState } from \"../../store\";\nimport actions from \"../../actions\";\nimport ActionTH from \"./ActionTH\";\nimport isEqual from \"lodash/isEqual\";\nimport { Link } from \"react-router-dom\";\nimport DeviceImage from \"../device-image\";\nimport { ModelLink, VendorLink } from \"../vendor-links/verndor-links\";\nimport Spinner from \"../spinner\";\n\n\ntype SortColumn =\n    | \"device.network_address\"\n    | \"device.friendly_name\"\n    | \"device.ieee_address\"\n    | \"device.definition.vendor\"\n    | \"device.definition.model\"\n    | \"state.linkquality\"\n    | \"state.last_seen\"\n    | \"state.elapsed\"\n    | \"state.battery\";\n\n\ninterface ZigbeeTableState {\n    sortDirection: SortDirection;\n    sortColumn: SortColumn | SortColumn[];\n    currentTime: number;\n    sortedTableData: ZigbeeTableData[];\n    error?: object;\n}\n\n\ninterface ZigbeeTableData {\n    device: Device;\n    state: DeviceState;\n}\n\n\n\nconst storeKey = \"ZigbeeTableState\";\nconst longLoadingTimeout = 15 * 1000;\n\nexport class ZigbeeTable extends Component<GlobalState, ZigbeeTableState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortDirection: \"desc\",\n            sortColumn: \"device.network_address\",\n            currentTime: Date.now(),\n            sortedTableData: []\n        };\n    }\n\n    restoreState(): void {\n        const { sortColumn, sortDirection } = this.state;\n\n        const storedState = localStorage.getItem(storeKey);\n        if (storedState) {\n            try {\n                const restored: Pick<ZigbeeTableState, \"sortDirection\" | \"sortColumn\"> = JSON.parse(storedState);\n                this.setState(restored);\n            } catch (e) {\n                new Notyf().error(e.toString());\n            }\n        } else {\n            this.onSortChange(sortColumn, sortDirection);\n        }\n    }\n\n    saveState = (): void => {\n        const { sortDirection, sortColumn } = this.state;\n        const storeData = {\n            sortDirection,\n            sortColumn\n        };\n        //in private mode localstorage access can throw exceptions\n        try {\n            localStorage.setItem(storeKey, JSON.stringify(storeData));\n        } catch (e) {\n            new Notyf().error(e.toString());\n        }\n    };\n    handleLongLoading = () => {\n        const { devices } = this.props;\n\n        if (devices.size == 0) {\n            const error = <Fragment>\n                <strong>Loading devices takes too long time.</strong>\n                <div>Consider reading <a href=\"https://www.zigbee2mqtt.io/information/frontend.html\">documentation</a></div>\n            </Fragment>;\n            this.setState({ error });\n        }\n    }\n    componentDidMount(): void {\n        setTimeout(this.handleLongLoading, longLoadingTimeout);\n        this.restoreState();\n    }\n\n    static getDerivedStateFromProps(props: Readonly<GlobalState>, state: ZigbeeTableState): Partial<ZigbeeTableState> {\n        const { sortColumn, sortDirection } = state;\n        const { devices, deviceStates } = props;\n        const tableData: ZigbeeTableData[] = [];\n        devices.forEach((device) => {\n            if (device.type !== \"Coordinator\") {\n                tableData.push({\n                    device,\n                    state: deviceStates.get(device.friendly_name)\n\n                });\n            }\n        });\n        return { sortedTableData: orderBy<ZigbeeTableData>(tableData, sortColumn, [sortDirection]) };\n    }\n\n\n    onSortChange = (column: SortColumn | SortColumn[], sortDir: SortDirection = undefined): void => {\n        const { sortColumn } = this.state;\n        let { sortDirection } = this.state;\n\n        if (isEqual(sortColumn, column)) {\n            if (sortDir) {\n                sortDirection = sortDir;\n            } else if (sortDirection == \"asc\") {\n                sortDirection = \"desc\";\n            } else {\n                sortDirection = \"asc\";\n            }\n        }\n\n        this.setState({ sortColumn: column, sortDirection }, this.saveState);\n    };\n\n    renderError() {\n        const { error } = this.state;\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <div className=\"d-flex align-items-center\">\n                {error}\n            </div>\n        </div>);\n    }\n\n    render() {\n        const { error } = this.state;\n        const { devices } = this.props;\n        if (devices.size) {\n            return this.renderDevicesTable();\n        }\n        if (error) {\n            return this.renderError();\n        }\n        return (<div className=\"h-100 d-flex justify-content-center align-items-center\">\n            <Spinner />\n        </div>);\n    }\n    lastSeenIsAvaliable(): boolean {\n        const { bridgeInfo } = this.props;\n        return bridgeInfo?.config?.advanced?.elapsed || bridgeInfo?.config?.advanced?.last_seen != \"disable\";\n    }\n\n    renderDevicesTableHeader() {\n        const { sortColumn, sortDirection } = this.state;\n        const { onSortChange } = this;\n        return (\n            <thead>\n                <tr className=\"text-nowrap\">\n                    <th>#</th>\n                    <th>Pic</th>\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.friendly_name\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>Friendly name</ActionTH>\n                    <ActionTH<SortColumn> className={cx(style[\"action-column\"])} column=\"device.ieee_address\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>IEEE address</ActionTH>\n                    <ActionTH<SortColumn> className={cx(style[\"action-column\"])} column=\"device.definition.vendor\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange} title=\"definition.vendor\">Manufacturer</ActionTH>\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"device.definition.model\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>Model</ActionTH>\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.linkquality\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>LQI</ActionTH>\n                    <ActionTH<SortColumn> className={cx(style[\"action-column\"], { 'd-none': !this.lastSeenIsAvaliable() })} column={[\"state.last_seen\", \"state.elapsed\"]}\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>Last seen</ActionTH>\n                    <ActionTH<SortColumn> className={style[\"action-column\"]} column=\"state.battery\"\n                        currentDirection={sortDirection} current={sortColumn}\n                        onClick={onSortChange}>Power</ActionTH>\n                    <th>&nbsp;</th>\n                </tr>\n            </thead>\n        )\n    }\n\n\n    renderDevicesTable() {\n        const { sortedTableData } = this.state;\n        return (\n            <table className={cx(\"table align-middle\", style.adaptive)}>\n                {this.renderDevicesTableHeader()}\n                <tbody>\n                    {sortedTableData.map(({ device, state }, id) =>\n                        <tr key={device.friendly_name} title={state?.update?.state == \"available\" ? 'Avaliable OTA update' : device.definition?.description}>\n                            <td className=\"font-weight-bold\">{id + 1}</td>\n                            <td className={style[\"device-pic\"]}>\n                                <DeviceImage className={cx(style[\"device-image\"])} device={device} deviceStatus={state} />\n                            </td>\n                            <td>\n                                <Link to={genDeviceDetailsLink(device.ieee_address)}>{device.friendly_name}</Link>\n                            </td>\n                            <td title={toHex(device.network_address)}>{device.ieee_address}</td>\n                            <td className={cx(\"text-truncate\", \"text-nowrap\", \"position-relative\")}><VendorLink device={device} /></td>\n                            <td title={device?.definition?.description}><ModelLink device={device} /></td>\n                            <td>{state?.linkquality ?? \"N/A\"}</td>\n                            <td className={cx({ 'd-none': !this.lastSeenIsAvaliable() })}>{lastSeen(state?.last_seen, state?.elapsed)}</td>\n                            <td className=\"text-left\">\n                                <PowerSource source={device.power_source} battery={state?.battery} />\n                            </td>\n                            <td>\n                                <DeviceControlGroup device={device} state={state} />\n                            </td>\n                        </tr>)}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nconst mappedProps = [\"devices\", \"deviceStates\", \"bridgeInfo\"];\nconst ConnectedZigbeePage = connect<{}, ZigbeeTableState, GlobalState, {}>(mappedProps, actions)(ZigbeeTable);\nexport default ConnectedZigbeePage;\n","import React, { Component } from \"react\";\nimport { connect } from \"unistore/react\";\nimport actions from \"../../actions\";\nimport { GlobalState } from \"../../store\";\nimport cx from \"classnames\";\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class LogsPage extends Component<GlobalState, {}> {\n    render() {\n        const { logs } = this.props;\n        return <div className=\"container-fluid h-100 overflow-auto pt-2\">{\n            logs.map((l, idx) => <div key={idx}>\n                <span className={cx({\n                    'text-danger': l.level === 'error',\n                    'text-warning': l.level === 'warning',\n                    'text-info': l.level === 'info'\n                })} >{l.level.toUpperCase()}</span>:&nbsp;<code>{l.message}</code></div>)\n        }</div>\n    }\n}\n\nconst mappedProps = [\"logs\"];\n\nexport default connect<{}, {}, GlobalState, {}>(mappedProps, actions)(LogsPage);","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Button from \"./button\";\nimport store from \"../store\";\nimport { download } from \"../utils\";\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\ntype ErrorBoundaryProps = RouteComponentProps<{}>;\n\nexport default class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    state: Readonly<ErrorBoundaryState> = {};\n\n    static getDerivedStateFromError(error: Error) {\n        return { hasError: true, error };\n    }\n\n    donwloadState = () => {\n        download(store.getState(), 'state.json');\n    }\n\n    render() {\n        const { error } = this.state;\n        if (error) {\n            return <div className=\"container\">\n                <h1 className=\"text-danger\">Take screenshot of this page and attach it to github issue, additionally <Button<void> className=\"mt-2 btn btn-link\" onClick={() => this.donwloadState()}>download state</Button> and attach to the issue</h1>\n                <h2>{error.name}</h2>\n                <h3>{error.message}</h3>\n                <pre>{error.stack}</pre>\n            </div>\n\n        }\n        return this.props.children;\n    }\n\n    componentDidUpdate(prevProps: ErrorBoundaryProps) {\n        const { location: { pathname } } = this.props;\n        const { location: { pathname: prevPathname } } = prevProps;\n        if (prevPathname !== pathname) {\n            this.setState({ error: null });\n        }\n    }\n}\n\n","import \"./main.css\";\n\nimport \"notyf/notyf.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\nimport React, { Component, FunctionComponent } from 'react';\n\nimport ConnectedMap from \"./components/map\";\n\nimport {\n    Switch,\n    Route,\n    HashRouter\n} from \"react-router-dom\";\n\nimport ConnectedDevicePage from \"./components/device-page\";\nimport TouchlinkPage from \"./components/touchlink-page\";\n\nimport store from \"./store\";\nimport { Provider } from \"unistore/react\";\nimport api from './api';\n\n\nimport ConnectedSettingsPage from \"./components/settings\";\nimport NavBar from \"./components/navbar\";\nimport ConnectedGroupsPage from \"./components/groups\";\nimport ConnectedZigbeePage from \"./components/zigbee\";\nimport LogsPage from \"./components/logs-page\";\nimport ReactDOM from \"react-dom\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\n\nconst ConnectedDevicePageWrap: FunctionComponent<{ dev: string }> = ({ dev }) => (\n    <ConnectedDevicePageWrap dev={dev} />\n);\n\n\napi.connect();\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Main extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <HashRouter>\n                    <NavBar />\n                    <Switch>\n                        <Route path=\"/map\" render={(props) => <ErrorBoundary {...props}><ConnectedMap /></ErrorBoundary>} />\n                        <Route path=\"/device/:dev/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedDevicePage /></ErrorBoundary>} />\n                        <Route path=\"/settings/:tab?\" render={(props) => <ErrorBoundary {...props}><ConnectedSettingsPage /></ErrorBoundary>} />\n                        <Route path=\"/groups\" render={(props) => <ErrorBoundary {...props}><ConnectedGroupsPage /></ErrorBoundary>} />\n                        <Route path=\"/logs\" render={(props) => <ErrorBoundary {...props}><LogsPage /></ErrorBoundary>} />\n                        <Route path=\"/touchlink\" render={(props) => <ErrorBoundary {...props}><TouchlinkPage /></ErrorBoundary>} />\n                        <Route path=\"/\" render={(props) => <ErrorBoundary {...props}><ConnectedZigbeePage /></ErrorBoundary>} />\n                    </Switch>\n                </HashRouter>\n            </Provider >\n\n        );\n    }\n}\n\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}